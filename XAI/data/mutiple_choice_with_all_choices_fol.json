[
  {
    "question": [
      "Which conclusion follows with the fewest premises?"
    ],
    "premises-NL": [
      "If a Python code is well-tested, then the project is optimized.",
      "If a Python code does not follow PEP 8 standards, then it is not well-tested.",
      "All Python projects are easy to maintain.",
      "All Python code is well-tested.",
      "If a Python code follows PEP 8 standards, then it is easy to maintain.",
      "If a Python code is well-tested, then it follows PEP 8 standards.",
      "If a Python project is well-structured, then it is optimized.",
      "If a Python project is easy to maintain, then it is well-tested.",
      "If a Python project is optimized, then it has clean and readable code.",
      "All Python projects are well-structured.",
      "All Python projects have clean and readable code.",
      "There exists at least one Python project that follows best practices.",
      "There exists at least one Python project that is optimized.",
      "If a Python project is not well-structured, then it does not follow PEP 8 standards."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (WT(x) → O(x))",
      "∀x (¬PEP8(x) → ¬WT(x))",
      "∀x (EM(x))",
      "∀x (WT(x))",
      "∀x (PEP8(x) → EM(x))",
      "∀x (WT(x) → PEP8(x))",
      "∀x (WS(x) → O(x))",
      "∀x (EM(x) → WT(x))",
      "∀x (O(x) -> CR(x))",
      "∀x (WS(x))",
      "∀x (CR(x))",
      "∃x (BP(x))",
      "∃x (O(x))",
      "∀x (¬WS(x) → ¬PEP8(x))"
    ],
    "choices": [
      "If a Python project is not optimized, then it is not well-tested",
      "If all Python projects are optimized, then all Python projects are well-structured",
      "If a Python project is well-tested, then it must be clean and readable",
      "If a Python project is not optimized, then it does not follow PEP 8 standards"
    ],
    "choices-FOL": [
      "∀x (¬O(x) → ¬WT(x))",
      "∀x (O(x)) → ∀x (WS(x))",
      "∀x (WT(x) → CR(x))",
      "∀x (¬O(x) → ¬PEP8(x))"
    ]
  },
  {
    "question": [
      "Based on the above premises, which is the strongest conclusion?"
    ],
    "premises-NL": [
      "Students who have completed the core curriculum and passed the science assessment are qualified for advanced courses.",
      "Students who are qualified for advanced courses and have completed research methodology are eligible for the international program.",
      "Students who have passed the language proficiency exam are eligible for the international program.",
      "Students who are eligible for the international program and have completed a capstone project are awarded an honors diploma.",
      "Students who have been awarded an honors diploma and have completed community service qualify for the university scholarship.",
      "Students who have been awarded an honors diploma and have received a faculty recommendation qualify for the university scholarship.",
      "Sophia has completed the core curriculum.",
      "Sophia has passed the science assessment.",
      "Sophia has completed the research methodology course.",
      "Sophia has completed her capstone project.",
      "Sophia has completed the required community service hours."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, (completed_core_curriculum(x) ∧ passed_science_assessment(x)) → qualified_for_advanced_courses(x))",
      "ForAll(x, (qualified_for_advanced_courses(x) ∧ completed_research_methodology(x)) → eligible_for_international_program(x))",
      "ForAll(x, passed_language_proficiency(x) → eligible_for_international_program(x))",
      "ForAll(x, (eligible_for_international_program(x) ∧ completed_capstone_project(x)) → awarded_honors_diploma(x))",
      "ForAll(x, (awarded_honors_diploma(x) ∧ completed_community_service(x)) → qualifies_for_scholarship(x))",
      "ForAll(x, (awarded_honors_diploma(x) ∧ received_faculty_recommendation(x)) → qualifies_for_scholarship(x))",
      "completed_core_curriculum(Sophia)",
      "passed_science_assessment(Sophia)",
      "completed_research_methodology(Sophia)",
      "completed_capstone_project(Sophia)",
      "completed_community_service(Sophia)"
    ],
    "choices": [
      "Sophia qualifies for the university scholarship",
      "Sophia needs a faculty recommendation to qualify for the scholarship",
      "Sophia is eligible for the international program",
      "Sophia needs to pass the language proficiency exam to get an honors diploma"
    ],
    "choices-FOL": [
      "qualifies_for_scholarship(Sophia)",
      "¬qualifies_for_scholarship(Sophia) ∨ received_faculty_recommendation(Sophia)",
      "eligible_for_international_program(Sophia)",
      "¬passed_language_proficiency(Sophia) → ¬awarded_honors_diploma(Sophia)"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion is correct?"
    ],
    "premises-NL": [
      "Students who have completed the core curriculum and passed the science assessment are qualified for advanced courses.",
      "Students who are qualified for advanced courses and have completed research methodology are eligible for the international program.",
      "Students who have passed the language proficiency exam are eligible for the international program.",
      "Students who are eligible for the international program and have completed a capstone project are awarded an honors diploma.",
      "Students who have been awarded an honors diploma and have completed community service qualify for the university scholarship.",
      "Students who have been awarded an honors diploma and have received a faculty recommendation qualify for the university scholarship.",
      "Sophia has completed the core curriculum.",
      "Sophia has passed the science assessment.",
      "Sophia has completed the research methodology course.",
      "Sophia has completed her capstone project.",
      "Sophia has completed the required community service hours."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, (completed_core_curriculum(x) ∧ passed_science_assessment(x)) → qualified_for_advanced_courses(x))",
      "ForAll(x, (qualified_for_advanced_courses(x) ∧ completed_research_methodology(x)) → eligible_for_international_program(x))",
      "ForAll(x, passed_language_proficiency(x) → eligible_for_international_program(x))",
      "ForAll(x, (eligible_for_international_program(x) ∧ completed_capstone_project(x)) → awarded_honors_diploma(x))",
      "ForAll(x, (awarded_honors_diploma(x) ∧ completed_community_service(x)) → qualifies_for_scholarship(x))",
      "ForAll(x, (awarded_honors_diploma(x) ∧ received_faculty_recommendation(x)) → qualifies_for_scholarship(x))",
      "completed_core_curriculum(Sophia)",
      "passed_science_assessment(Sophia)",
      "completed_research_methodology(Sophia)",
      "completed_capstone_project(Sophia)",
      "completed_community_service(Sophia)"
    ],
    "choices": [
      "Sophia qualifies for the university scholarship",
      "Sophia needs a faculty recommendation to qualify for the scholarship",
      "Sophia is eligible for the international program",
      "Sophia needs to pass the language proficiency exam to get an honors diploma"
    ],
    "choices-FOL": [
      "qualifies_for_scholarship(Sophia)",
      "¬qualifies_for_scholarship(Sophia) ∨ received_faculty_recommendation(Sophia)",
      "eligible_for_international_program(Sophia)",
      "¬passed_language_proficiency(Sophia) → ¬awarded_honors_diploma(Sophia)"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion logically follows?"
    ],
    "premises-NL": [
      "If a student completes all required courses, they are eligible for graduation.",
      "If a student is eligible for graduation and maintains a GPA above 3.5, they graduate with honors.",
      "If a student graduates with honors and completes a thesis, they receive academic distinction.",
      "If a student receives academic distinction, they qualify for the graduate fellowship program.",
      "John has completed all required courses.",
      "John maintains a GPA of 3.8.",
      "John has completed a thesis."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, completed_required_courses(x) → eligible_for_graduation(x))",
      "ForAll(x, (eligible_for_graduation(x) ∧ gpa_above_3_5(x)) → graduates_with_honors(x))",
      "ForAll(x, (graduates_with_honors(x) ∧ completed_thesis(x)) → academic_distinction(x))",
      "ForAll(x, academic_distinction(x) → qualifies_for_fellowship(x))",
      "completed_required_courses(John)",
      "gpa_above_3_5(John)",
      "completed_thesis(John)"
    ],
    "choices": [
      "John qualifies for the graduate fellowship program",
      "John needs faculty recommendation for the fellowship",
      "John must complete an internship to qualify",
      "John’s GPA is insufficient for honors"
    ],
    "choices-FOL": [
      "qualifies_for_fellowship(John)",
      "¬qualifies_for_fellowship(John) ∨ faculty_recommendation(John)",
      "¬qualifies_for_fellowship(John)",
      "¬gpa_above_3_5(John) → ¬graduates_with_honors(John)"
    ]
  },
  {
    "question": [
      "Based on the premises, what is the correct conclusion about Professor John?"
    ],
    "premises-NL": [
      "If a faculty member has completed training, they can teach undergraduate courses.",
      "If a faculty member can teach undergraduate courses and holds a PhD, they can supervise graduate students.",
      "If a faculty member can supervise graduate students and has at least 3 publications, they can serve on curriculum committees.",
      "If a faculty member can serve on curriculum committees and has a positive teaching evaluation, they can propose new courses.",
      "Professor John has completed pedagogical training.",
      "Professor John holds a PhD.",
      "Professor John has published at least 3 academic papers.",
      "Professor John has received a positive teaching evaluation."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, completed_pedagogical_training(x) → can_teach_undergraduate(x))",
      "ForAll(x, (can_teach_undergraduate(x) ∧ holds_phd(x)) → can_supervise_graduate(x))",
      "ForAll(x, (can_supervise_graduate(x) ∧ has_at_least_three_publications(x)) → can_serve_curriculum_committees(x))",
      "ForAll(x, (can_serve_curriculum_committees(x) ∧ has_positive_evaluation(x)) → can_propose_courses(x))",
      "completed_pedagogical_training(John)",
      "holds_phd(John)",
      "has_at_least_three_publications(John)",
      "has_positive_evaluation(John)"
    ],
    "choices": [
      "He can teach undergraduate courses but cannot supervise graduates",
      "He can serve on curriculum committees but cannot propose courses",
      "He can propose new courses",
      "He needs more publications to serve on committees"
    ],
    "choices-FOL": [
      "can_propose_courses(John)",
      "can_serve_curriculum_committees(John) ∧ ¬can_propose_courses(John)",
      "can_propose_courses(John)",
      "¬has_at_least_three_publications(John) → ¬can_serve_curriculum_committees(John)"
    ]
  },
  {
    "question": [
      "Based on the premises, what is the correct conclusion about Professor John?"
    ],
    "premises-NL": [
      "If a faculty member has taught for at least 5 years, they are eligible for extended library access.",
      "If someone has extended library access and has published at least one academic paper, they can access restricted archives.",
      "If someone can access restricted archives and has completed research ethics training, they can submit research proposals.",
      "If someone can submit research proposals and has a departmental endorsement, they can apply for collaborative research projects.",
      "Professor John has taught for at least 5 years.",
      "Professor John has published at least one academic paper.",
      "Professor John has completed research ethics training.",
      "Professor John has a departmental endorsement."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, taught_min_five_years(x) → eligible_extended_library(x))",
      "ForAll(x, (eligible_extended_library(x) ∧ has_publications(x)) → can_access_restricted_archives(x))",
      "ForAll(x, (can_access_restricted_archives(x) ∧ completed_ethics_training(x)) → can_submit_research_proposals(x))",
      "ForAll(x, (can_submit_research_proposals(x) ∧ has_departmental_endorsement(x)) → can_apply_collaborative_projects(x))",
      "taught_min_five_years(John)",
      "has_publications(John)",
      "completed_ethics_training(John)",
      "has_departmental_endorsement(John)"
    ],
    "choices": [
      "He can access restricted archives but cannot submit proposals",
      "He can apply for collaborative research projects",
      "He needs more publications to access archives",
      "He is eligible for extended library access but cannot apply for projects"
    ],
    "choices-FOL": [
      "can_apply_collaborative_projects(John)",
      "¬can_submit_research_proposals(John)",
      "¬has_publications(John) → ¬can_access_restricted_archives(John)",
      "eligible_extended_library(John) ∧ ¬can_apply_collaborative_projects(John)"
    ]
  },
  {
    "question": [
      "Based on the premises, what can we conclude about John’s qualifications?"
    ],
    "premises-NL": [
      "If a driver has passed vehicle inspection and has the appropriate license, they can transport standard goods.",
      "If a driver can transport standard goods and has completed hazmat training and received a safety endorsement, they can transport hazardous materials.",
      "If a driver can transport hazardous materials and has an interstate permit, they can cross state lines with hazardous cargo.",
      "John has passed vehicle inspection.",
      "John has the appropriate license.",
      "John has completed hazmat training.",
      "John has not received a safety endorsement.",
      "John has an interstate permit."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, (passed_vehicle_inspection(x) ∧ has_appropriate_license(x)) → can_transport_standard_goods(x))",
      "ForAll(x, (can_transport_standard_goods(x) ∧ completed_hazmat_training(x) ∧ received_safety_endorsement(x)) → can_transport_hazardous_materials(x))",
      "ForAll(x, (can_transport_hazardous_materials(x) ∧ has_interstate_permit(x)) → can_cross_state_lines(x))",
      "passed_vehicle_inspection(John)",
      "has_appropriate_license(John)",
      "completed_hazmat_training(John)",
      "¬received_safety_endorsement(John)",
      "has_interstate_permit(John)"
    ],
    "choices": [
      "John can transport hazardous materials but cannot cross state lines",
      "John can cross state lines with hazardous cargo",
      "John cannot transport hazardous materials",
      "John is not qualified to transport any kind of goods"
    ],
    "choices-FOL": [
      "¬can_transport_hazardous_materials(John)",
      "can_cross_state_lines(John)",
      "¬can_transport_hazardous_materials(John)",
      "¬can_transport_standard_goods(John)"
    ]
  },
  {
    "question": [
      "Based on the premises, which capabilities does Dr. John have?"
    ],
    "premises-NL": [
      "Faculty members with a degree higher than BA can teach undergraduate courses.",
      "Faculty members with a degree higher than MSc can teach graduate courses.",
      "Anyone who teaches graduate courses can be a research mentor.",
      "If degree A is higher than B, and B is higher than C, then A is higher than C.",
      "MSc is higher than BA.",
      "PhD is higher than MSc.",
      "Dr. John is a faculty member.",
      "Dr. John has a PhD."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, ForAll(d, (faculty_member(x) ∧ has_degree(x, d) ∧ higher(d, BA)) → teach_undergrad(x)))",
      "ForAll(x, ForAll(d, (faculty_member(x) ∧ has_degree(x, d) ∧ higher(d, MSc)) → teach_graduate(x)))",
      "ForAll(x, teach_graduate(x) → research_mentor(x))",
      "ForAll(a, ForAll(b, ForAll(c, (higher(a, b) ∧ higher(b, c)) → higher(a, c))))",
      "higher(MSc, BA)",
      "higher(PhD, MSc)",
      "faculty_member(dr_john)",
      "has_degree(dr_john, PhD)"
    ],
    "choices": [
      "Can teach undergraduate courses only",
      "Can be a research mentor",
      "Cannot teach graduate courses",
      "Needs additional certification to mentor"
    ],
    "choices-FOL": [
      "use_equipment(Alex) ∧ ¬book_training(Alex)",
      "eligible_trainer(Alex) → (has_trainer(Alex) → book_training(Alex))",
      "¬eligible_trainer(Alex)",
      "¬valid_membership(Alex) → pay_additional_fees(Alex)"
    ]
  },
  {
    "question": [
      "Based on the premises, what can we conclude about the curriculum?"
    ],
    "premises-NL": [
      "If a curriculum is well-structured and has exercises, it enhances student engagement.",
      "If a curriculum enhances student engagement and provides access to advanced resources, it enhances critical thinking.",
      "If a faculty prioritizes pedagogical training and curriculum development, the curriculum is well-structured.",
      "The faculty prioritizes pedagogical training and curriculum development.",
      "The curriculum has practical exercises.",
      "The curriculum provides access to advanced resources."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(c, (well_structured(c) ∧ has_exercises(c)) → enhances_engagement(c))",
      "ForAll(c, (enhances_engagement(c) ∧ advanced_resources(c)) → enhances_critical_thinking(c))",
      "ForAll(f, (pedagogical_training(f) ∧ curriculum_development(f)) → well_structured(curriculum))",
      "pedagogical_training(faculty) ∧ curriculum_development(faculty)",
      "has_exercises(curriculum)",
      "advanced_resources(curriculum)"
    ],
    "choices": [
      "It enhances student engagement but not critical thinking",
      "It enhances critical thinking",
      "It needs more resources to enhance critical thinking",
      "It is well-structured but lacks exercises"
    ],
    "choices-FOL": [
      "¬eligible_advanced(Sarah)",
      "¬eligible_advanced(Sarah)",
      "eligible_advanced(Sarah) ∧ ¬requires_approval(Sarah)",
      "active_status(Sarah) → eligible_advanced(Sarah)"
    ]
  },
  {
    "question": [
      "Based on the premises, what can we conclude about the curriculum?"
    ],
    "premises-NL": [
      "If a curriculum is well-structured and has exercises, it enhances student engagement.",
      "If a curriculum enhances student engagement and provides access to advanced resources, it enhances critical thinking.",
      "If a faculty prioritizes pedagogical training and curriculum development, the curriculum is well-structured.",
      "The faculty prioritizes pedagogical training and curriculum development.",
      "The curriculum has practical exercises.",
      "The curriculum provides access to advanced resources."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(c, (well_structured(c) ∧ has_exercises(c)) → enhances_engagement(c))",
      "ForAll(c, (enhances_engagement(c) ∧ advanced_resources(c)) → enhances_critical_thinking(c))",
      "ForAll(f, (pedagogical_training(f) ∧ curriculum_development(f)) → well_structured(curriculum))",
      "pedagogical_training(faculty) ∧ curriculum_development(faculty)",
      "has_exercises(curriculum)",
      "advanced_resources(curriculum)"
    ],
    "choices": [
      "It enhances student engagement but not critical thinking",
      "It enhances critical thinking",
      "It needs more resources to enhance critical thinking",
      "It is well-structured but lacks exercises"
    ],
    "choices-FOL": [
      "supervise_research(John)",
      "supervise_masters(John) ∧ ¬supervise_research(John)",
      "teach_graduate(John) ∧ supervise_research(John)",
      "¬certified(John) → ¬supervise(John)"
    ]
  },
  {
    "question": [
      "Based on the prerequisites, what is David’s current eligibility status?"
    ],
    "premises-NL": [
      "If a student completes Course A, they can enroll in Course B.",
      "If a student enrolls in Course B and passes it, they can enroll in Course C.",
      "Enrollment in Course C makes a student eligible for the internship program.",
      "David has completed Course A.",
      "David has enrolled in and passed Course B."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, complete(x, A) → enroll(x, B))",
      "ForAll(x, (enroll(x, B) ∧ pass(x, B)) → enroll(x, C))",
      "ForAll(x, enroll(x, C) → eligible_internship(x))",
      "complete(david, A)",
      "enroll(david, B) ∧ pass(david, B)"
    ],
    "choices": [
      "Eligible for Course C but not the internship",
      "Eligible for the internship program",
      "Needs to pass Course B first",
      "Only eligible for Course B"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on Alex's status, which statement is correct?"
    ],
    "premises-NL": [
      "Alex has completed safety orientation.",
      "Alex has a membership duration of 8 months.",
      "Alex has paid annual fees on time.",
      "If a person has a valid membership card and has completed safety orientation, they can use equipment.",
      "If a person can use equipment and has a trainer, they can book training.",
      "If a person’s membership duration is at least 6 months, they are eligible for a trainer.",
      "If a person has paid the annual fee, they have a valid membership."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "safety_orientation(Alex)",
      "membership_duration(Alex) = 8",
      "paid_annual_fee(Alex)",
      "ForAll(x, (valid_membership(x) ∧ safety_orientation(x)) → use_equipment(x))",
      "ForAll(x, (use_equipment(x) ∧ has_trainer(x)) → book_training(x))",
      "ForAll(x, (membership_duration(x) ≥ 6) → eligible_trainer(x))",
      "ForAll(x, paid_annual_fee(x) → valid_membership(x))"
    ],
    "choices": [
      "Alex can use equipment but cannot book training without a trainer",
      "Alex can book personal training sessions if assigned a trainer",
      "Alex needs a longer membership duration",
      "Alex must pay additional fees"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the requirements, which statement about Sarah is correct?"
    ],
    "premises-NL": [
      "Students with active status who have completed at least 5 courses are eligible for advanced classes.",
      "Eligible students must obtain advisor approval to take advanced classes.",
      "Sarah has active student status.",
      "Sarah has completed 4 courses.",
      "Sarah has obtained advisor approval."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, (active_status(x) ∧ completed_courses(x) ≥ 5) → eligible_advanced(x))",
      "ForAll(x, eligible_advanced(x) → requires_approval(x))",
      "active_status(sarah)",
      "completed_courses(sarah) = 4",
      "has_approval(sarah)"
    ],
    "choices": [
      "She can take advanced classes because she has approval",
      "She cannot take advanced classes due to insufficient completed courses",
      "She is eligible but lacks approval",
      "Her active status alone qualifies her"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on Professor John's qualifications, which capabilities does he have?"
    ],
    "premises-NL": [
      "If a professor has a PhD degree, they are qualified to teach graduate courses.",
      "A doctoral degree (PhD) is higher than a Master's degree.",
      "If a professor holds a degree higher than a Master's, they are eligible to supervise Master's students.",
      "All professors qualified to teach graduate courses can also supervise graduate-level research.",
      "Professor John holds a PhD degree."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, has_degree(x, PhD) → teach_graduate(x))",
      "higher(PhD, MSc)",
      "ForAll(x, ForAll(d, (higher(d, MSc) ∧ has_degree(x, d)) → supervise_masters(x)))",
      "ForAll(x, teach_graduate(x) → supervise_research(x))",
      "has_degree(John, PhD)"
    ],
    "choices": [
      "Can teach graduate courses but cannot supervise research",
      "Can supervise Master's students but not graduate research",
      "Can both teach graduate courses and supervise research",
      "Needs additional certification to supervise"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on Dr. John's qualifications, which statement is correct?"
    ],
    "premises-NL": [
      "Lecturers with a Master's degree can teach undergraduate courses.",
      "Lecturers with a degree higher than a Master's can teach undergraduate courses.",
      "A PhD is higher than a Master's degree.",
      "A Master's degree is higher than a Bachelor's degree.",
      "If degree A is higher than degree B, and degree B is higher than degree C, then degree A is higher than degree C.",
      "Department heads must hold a degree higher than a Bachelor's.",
      "Dr. John is a department head with a PhD."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, has_degree(x, MSc) → teach_undergrad(x))",
      "ForAll(x, ForAll(d, (higher(d, MSc) ∧ has_degree(x, d)) → teach_undergrad(x)))",
      "higher(PhD, MSc)",
      "higher(MSc, BSc)",
      "ForAll(a, ForAll(b, ForAll(c, (higher(a, b) ∧ higher(b, c)) → higher(a, c))))",
      "ForAll(x, department_head(x) → (∃d, has_degree(x, d) ∧ higher(d, BSc)))",
      "department_head(John) ∧ has_degree(John, PhD)"
    ],
    "choices": [
      "He can teach undergraduate courses",
      "He qualifies as department head but cannot teach",
      "He needs a Master's degree to teach undergraduates",
      "His PhD is insufficient for teaching"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on Nurse John's qualifications, which statement is correct?"
    ],
    "premises-NL": [
      "Completing 500 clinical hours grants Advanced Practice certification.",
      "Nurse John has completed 600 clinical hours.",
      "John is a registered nurse.",
      "All registered nurses with Advanced Practice certification are authorized to prescribe medication."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ForAll(h, (clinical_hours(x, h) ∧ h ≥ 500) → advanced_practice(x)))",
      "clinical_hours(john, 600)",
      "registered_nurse(john)",
      "ForAll(x, (registered_nurse(x) ∧ advanced_practice(x)) → can_prescribe(x))"
    ],
    "choices": [
      "He can prescribe medication",
      "He needs more clinical hours",
      "He isn't registered",
      "He can't prescribe without additional certification"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on Alex's status, which statement is correct?"
    ],
    "premises-NL": [
      "Alex has a valid membership card.",
      "Alex has completed safety orientation.",
      "Alex has a membership duration of 8 months.",
      "Alex has paid annual fees on time."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, (has_card(x) ∧ safety_orientation(x)) → use_equipment(x))",
      "ForAll(x, (use_equipment(x) ∧ has_trainer(x)) → book_training(x))",
      "ForAll(x, (membership_duration(x) ≥ 6) → eligible_trainer(x))",
      "ForAll(x, paid_annual_fee(x) → valid_membership(x))"
    ],
    "choices": [
      "Alex can use equipment but can't book training",
      "Alex can book personal training sessions",
      "Alex needs longer membership duration",
      "Alex must pay additional fees"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on Minh's academic progress, which of the following is logically supported?"
    ],
    "premises-NL": [
      "If a student is enrolled in a science program and has passed Chemistry 101, they can enroll in Organic Chemistry.",
      "If a student is enrolled in Organic Chemistry and has completed Lab Safety Certification, they can access the advanced lab.",
      "All students who complete Organic Chemistry can take Biochemistry.",
      "If course X is a prerequisite for course Y, and course Y is a prerequisite for course Z, then course X is a prerequisite for course Z.",
      "Minh is enrolled in a science program.",
      "Minh passed Chemistry 101.",
      "Minh completed Organic Chemistry.",
      "Minh completed Lab Safety Certification."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, (science_program(x) ∧ passed(x, Chem101)) → can_enroll(x, OrganicChem))",
      "ForAll(x, (enrolled(x, OrganicChem) ∧ completed(x, LabSafety)) → lab_access(x))",
      "ForAll(x, completed(x, OrganicChem) → can_take(x, Biochemistry))",
      "ForAll(a, ForAll(b, ForAll(c, (prereq(a, b) ∧ prereq(b, c)) → prereq(a, c))))",
      "science_program(Minh)",
      "passed(Minh, Chem101)",
      "completed(Minh, OrganicChem)",
      "completed(Minh, LabSafety)"
    ],
    "choices": [
      "Minh has met the criteria to pursue Biochemistry",
      "Minh cannot take Biochemistry without Lab Safety Certification",
      "Minh is not eligible to enroll in Organic Chemistry",
      "Minh needs to repeat Chemistry 101"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which conclusion is logically valid?"
    ],
    "premises-NL": [
      "If a student attends at least 80% of classes, they will be allowed to take the final exam.",
      "If a student is allowed to take the final exam and completes the exam, they can pass the course.",
      "If a student fails to pass the course, they must retake the course.",
      "If a course requires a major assignment, the student must complete the major assignment or take the final exam.",
      "If a student attends less than 50% of classes, they will not be allowed to take the final exam.",
      "If a student completes 3 courses with a score above 8.5, they will receive a scholarship.",
      "If a student takes the exam but scores below the passing threshold, they will not pass the course.",
      "If a student attends all classes but does not complete the exam, they cannot pass the course.",
      "If a student passes 3 required courses, they will graduate.",
      "If a student attends less than 50% of the classes but completes the assignment and gets professor approval, they can take the exam."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(s, ForAll(m, (attendance(s,m) ≥ 80) → allowed_exam(s,m)))",
      "ForAll(s, ForAll(m, (allowed_exam(s,m) ∧ completes_exam(s,m)) → can_pass(s,m)))",
      "ForAll(s, ForAll(m, ¬pass(s,m) → retake(s,m)))",
      "ForAll(m, requires_assignment(m) → ForAll(s, completes_assignment(s,m) ∨ takes_exam(s,m)))",
      "ForAll(s, ForAll(m, (attendance(s,m) < 50) → ¬allowed_exam(s,m)))",
      "ForAll(s, (∃m1, ∃m2, ∃m3, m1 ≠ m2 ∧ m2 ≠ m3 ∧ m1 ≠ m3 ∧ grade(s,m1) > 8.5 ∧ grade(s,m2) > 8.5 ∧ grade(s,m3) > 8.5) → scholarship(s)))",
      "ForAll(s, ForAll(m, (takes_exam(s,m) ∧ score(s,m) < passing_score) → ¬pass(s,m)))",
      "ForAll(s, ForAll(m, (attendance(s,m) = 100 ∧ ¬completes_exam(s,m)) → ¬pass(s,m)))",
      "ForAll(s, (∃m1, ∃m2, ∃m3, m1 ≠ m2 ∧ m2 ≠ m3 ∧ m1 ≠ m3 ∧ pass(s,m1) ∧ pass(s,m2) ∧ pass(s,m3) ∧ required(m1) ∧ required(m2) ∧ required(m3)) → graduate(s)))",
      "ForAll(s, ForAll(m, (attendance(s,m) < 50 ∧ completes_assignment(s,m) ∧ professor_approval(s,m)) → allowed_exam(s,m)))"
    ],
    "choices": [
      "A student with low attendance, assignment completion, and professor approval can pass the course if they complete the exam.",
      "A student with less than 80% attendance who doesn’t complete the assignment can still take the exam.",
      "A student with 60% attendance and a scholarship automatically passes all courses.",
      "A student who attends every class but doesn’t complete the exam can still pass."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which conclusion is correct?"
    ],
    "premises-NL": [
      "If a student studies political theory for more than 12 hours, they will understand fundamental political ideologies.",
      "If a student understands fundamental political ideologies, they can critically analyze government policies.",
      "If a student can critically analyze government policies, they will either participate in debates or write analytical essays.",
      "If a student does not participate in debates, they must write analytical essays.",
      "If a student studies less than 6 hours, they will struggle to understand fundamental political ideologies.",
      "If a professor requires participation in debates, students must either debate or provide a justified reason for not doing so.",
      "If a student writes an analytical essay with high quality, they will receive academic recognition.",
      "If a student receives academic recognition in political studies, they may qualify for a research fellowship.",
      "If a government policy is controversial, students must analyze it in their coursework.",
      "If a student avoids both debates and writing essays, they will fail the political theory course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(s, (study(s,'PoliticalTheory') > 12) → understand(s,'PoliticalIdeologies'))",
      "ForAll(s, understand(s,'PoliticalIdeologies') → analyze(s,'GovernmentPolicies'))",
      "ForAll(s, analyze(s,'GovernmentPolicies') → (debate(s) ∨ write_essay(s)))",
      "ForAll(s, ¬debate(s) → write_essay(s))",
      "ForAll(s, (study(s,'PoliticalTheory') < 6) → struggle(s,'PoliticalIdeologies'))",
      "ForAll(s, professor_requires(s,'Debate') → (debate(s) ∨ justified_reason(s)))",
      "ForAll(s, (write_essay(s) ∧ high_quality(s)) → academic_recognition(s))",
      "ForAll(s, (academic_recognition(s) ∧ field(s,'PoliticalStudies')) → qualify_fellowship(s))",
      "ForAll(p, controversial(p) → ForAll(s, must_analyze(s,p)))",
      "ForAll(s, (¬debate(s) ∧ ¬write_essay(s)) → fail(s,'PoliticalTheory'))"
    ],
    "choices": [
      "A student who studies >12 hours, doesn’t debate, and writes a high-quality essay in political studies can qualify for a fellowship",
      "A student studying <6 hours who avoids both debates and essays will pass",
      "Understanding ideologies without policy analysis leads to automatic recognition",
      "All students must participate in debates regardless of their study hours"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which conclusion is correct?"
    ],
    "premises-NL": [
      "Mastery of quantum superposition requires at least 15 hours of dedicated study.",
      "A solid understanding of superposition enables clear explanations of quantum measurement.",
      "Those who can explain quantum measurement contribute by either writing research papers or giving presentations.",
      "Failure to give a presentation leaves research papers as the only viable option for contribution.",
      "Limited exposure (less than 8 hours) to quantum mechanics leads to difficulties in grasping superposition.",
      "When a professor mandates presentations, students must comply or justify their refusal.",
      "Original analytical work in research papers leads to academic recognition.",
      "Academic recognition in quantum mechanics opens the possibility of an advanced physics scholarship.",
      "Quantum entanglement experiments must be critically analyzed as part of coursework.",
      "Neglecting both research papers and presentations results in failing the quantum mechanics course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(s, (study(s,quantum_mechanics) ≥ 15) → understand(s,superposition))",
      "ForAll(s, understand(s,superposition) → explain(s,quantum_measurement))",
      "ForAll(s, explain(s,quantum_measurement) → (write_paper(s) ∨ give_presentation(s)))",
      "ForAll(s, ¬give_presentation(s) → write_paper(s))",
      "ForAll(s, (study(s,quantum_mechanics) < 8) → struggle(s,superposition))",
      "ForAll(s, professor_requires(s,presentation) → (give_presentation(s) ∨ justified_reason(s)))",
      "ForAll(s, (write_paper(s) ∧ original_work(s)) → academic_recognition(s))",
      "ForAll(s, (academic_recognition(s) ∧ field(s,quantum_mechanics)) → qualify_scholarship(s))",
      "ForAll(e, experiment(e,entanglement) → ForAll(s, must_analyze(s,e)))",
      "ForAll(s, (¬write_paper(s) ∧ ¬give_presentation(s)) → fail(s,quantum_mechanics))"
    ],
    "choices": [
      "A student mastering superposition who writes an original research paper in quantum mechanics qualifies for a scholarship",
      "Limited study time (<8h) doesn’t impair superposition understanding",
      "Merely explaining quantum measurement guarantees recognition",
      "All students must analyze entanglement regardless of their expertise"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Can a student who understands wave-particle duality eventually publish or present quantum research?"
    ],
    "premises-NL": [
      "A student who understands wave-particle duality can critique interpretations of quantum mechanics.",
      "Critiquing quantum interpretations enables assessing quantum realism debates.",
      "A student who assesses realism debates is prepared for advanced research.",
      "A prepared researcher can contribute through publications or seminars.",
      "Avoiding both publications and seminars means no academic contribution.",
      "Academic contribution is needed for a research position.",
      "A research position grants access to quantum laboratories."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ UnderstandsDuality(x) → CritiquesInterpretations(x))",
      "∀x (Student(x) ∧ CritiquesInterpretations(x) → AssessesRealism(x))",
      "∀x (Student(x) ∧ AssessesRealism(x) → PreparedResearch(x))",
      "∀x (Student(x) ∧ PreparedResearch(x) → ContributesPublicationOrSeminar(x))",
      "∀x (Student(x) ∧ ¬Publication(x) ∧ ¬Seminar(x) → ¬Contributes(x))",
      "∀x (Student(x) ∧ SecuresPosition(x) → Contributes(x))",
      "∀x (Student(x) ∧ SecuresPosition(x) → AccessesLab(x))"
    ],
    "choices": [
      "Yes, they can publish or present.",
      "No, duality alone isn’t enough.",
      "No, publishing requires lab access.",
      "No, presentations require realism debates."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of these conclusions is supported by the forgetting curve research?"
    ],
    "premises-NL": [
      "Ebbinghaus' forgetting curve formula: R = e^(-t/S), where R is retention rate, t is elapsed time, and S is review interval.",
      "A learning algorithm based on spaced repetition can adjust review intervals based on individual proficiency.",
      "Adequate sleep enhances memory consolidation after each review session.",
      "Creating flashcards with concise questions improves retention compared to passive reading.",
      "Reviewing just before forgetting significantly boosts memory efficiency.",
      "Neuroscience studies show self-testing activates the hippocampus, enhancing information recall.",
      "Encountering knowledge in various contexts improves retention compared to monotonous repetition.",
      "Too short review intervals reduce retention due to lack of time for consolidation.",
      "Too long review intervals risk forgetting most of the material before review.",
      "AI can personalize study schedules, optimizing memory retention for each student based on their progress."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(s, ForAll(t, Retention(s,t) = e^(-t/S)))",
      "ForAll(s, use_spaced_repetition(s) → better_memory_retention(s))",
      "ForAll(s, ForAll(m, sleep_well(s) ∧ review_material(s,m) → stronger_memory_connections(s,m)))",
      "ForAll(s, ForAll(f, use_flashcards(s,f) → higher_retention_rate(s,f)))",
      "ForAll(s, ForAll(m, ReviewBeforeForgetting(s,m) → HigherMemoryEfficiency(s,m)))",
      "ForAll(s, ForAll(m, self_test(s,m) → (activate_hippocampus(s) ∧ improve_recall(s,m))))",
      "ForAll(s, ForAll(m, encounter_different_contexts(s,m) → higher_long_term_retention(s,m)))",
      "ForAll(s, ForAll(m, too_short_intervals(s,m) → inefficient_learning(s,m)))",
      "ForAll(s, ForAll(m, too_long_intervals(s,m) → high_forgetting_rate(s,m)))",
      "ForAll(s, ForAll(m, ai_personalized_schedule(s,m) → most_efficient_learning(s,m)))"
    ],
    "choices": [
      "Review timing has no impact on retention",
      "Optimal intervals prevent both premature review and excessive forgetting",
      "Sleep has no effect on memory consolidation",
      "All learning methods yield identical results"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of these conclusions is supported by the forgetting curve research?"
    ],
    "premises-NL": [
      "Ebbinghaus' forgetting curve formula: R = e^(-t/S), where R is retention rate, t is elapsed time, and S is review interval.",
      "A learning algorithm based on spaced repetition can adjust review intervals based on individual proficiency.",
      "Adequate sleep enhances memory consolidation after each review session.",
      "Creating flashcards with concise questions improves retention compared to passive reading.",
      "Reviewing just before forgetting significantly boosts memory efficiency.",
      "Neuroscience studies show self-testing activates the hippocampus, enhancing information recall.",
      "Encountering knowledge in various contexts improves retention compared to monotonous repetition.",
      "Too short review intervals reduce retention due to lack of time for consolidation.",
      "Too long review intervals risk forgetting most of the material before review.",
      "AI can personalize study schedules, optimizing memory retention for each student based on their progress."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(s, ForAll(t, Retention(s,t) = e^(-t/S)))",
      "ForAll(s, use_spaced_repetition(s) → better_memory_retention(s))",
      "ForAll(s, ForAll(m, sleep_well(s) ∧ review_material(s,m) → stronger_memory_connections(s,m)))",
      "ForAll(s, ForAll(f, use_flashcards(s,f) → higher_retention_rate(s,f)))",
      "ForAll(s, ForAll(m, ReviewBeforeForgetting(s,m) → HigherMemoryEfficiency(s,m)))",
      "ForAll(s, ForAll(m, self_test(s,m) → (activate_hippocampus(s) ∧ improve_recall(s,m))))",
      "ForAll(s, ForAll(m, encounter_different_contexts(s,m) → higher_long_term_retention(s,m)))",
      "ForAll(s, ForAll(m, too_short_intervals(s,m) → inefficient_learning(s,m)))",
      "ForAll(s, ForAll(m, too_long_intervals(s,m) → high_forgetting_rate(s,m)))",
      "ForAll(s, ForAll(m, ai_personalized_schedule(s,m) → most_efficient_learning(s,m)))"
    ],
    "choices": [
      "Review timing has no impact on retention",
      "Optimal intervals prevent both premature review and excessive forgetting",
      "Sleep has no effect on memory consolidation",
      "All learning methods yield identical results"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of these conclusions is supported by the forgetting curve research?"
    ],
    "premises-NL": [
      "Ebbinghaus' forgetting curve formula: R = e^(-t/S), where R is retention rate, t is elapsed time, and S is review interval.",
      "A learning algorithm based on spaced repetition can adjust review intervals based on individual proficiency.",
      "Adequate sleep enhances memory consolidation after each review session.",
      "Creating flashcards with concise questions improves retention compared to passive reading.",
      "Reviewing just before forgetting significantly boosts memory efficiency.",
      "Neuroscience studies show self-testing activates the hippocampus, enhancing information recall.",
      "Encountering knowledge in various contexts improves retention compared to monotonous repetition.",
      "Too short review intervals reduce retention due to lack of time for consolidation.",
      "Too long review intervals risk forgetting most of the material before review.",
      "AI can personalize study schedules, optimizing memory retention for each student based on their progress."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(s, ForAll(t, Retention(s,t) = e^(-t/S)))",
      "ForAll(s, use_spaced_repetition(s) → better_memory_retention(s))",
      "ForAll(s, ForAll(m, sleep_well(s) ∧ review_material(s,m) → stronger_memory_connections(s,m)))",
      "ForAll(s, ForAll(f, use_flashcards(s,f) → higher_retention_rate(s,f)))",
      "ForAll(s, ForAll(m, ReviewBeforeForgetting(s,m) → HigherMemoryEfficiency(s,m)))",
      "ForAll(s, ForAll(m, self_test(s,m) → (activate_hippocampus(s) ∧ improve_recall(s,m))))",
      "ForAll(s, ForAll(m, encounter_different_contexts(s,m) → higher_long_term_retention(s,m)))",
      "ForAll(s, ForAll(m, too_short_intervals(s,m) → inefficient_learning(s,m)))",
      "ForAll(s, ForAll(m, too_long_intervals(s,m) → high_forgetting_rate(s,m)))",
      "ForAll(s, ForAll(m, ai_personalized_schedule(s,m) → most_efficient_learning(s,m)))"
    ],
    "choices": [
      "Review timing has no impact on retention",
      "Optimal intervals prevent both premature review and excessive forgetting",
      "Sleep has no effect on memory consolidation",
      "All learning methods yield identical results"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of these conclusions is supported by the forgetting curve research?"
    ],
    "premises-NL": [
      "Ebbinghaus' forgetting curve formula: R = e^(-t/S), where R is retention rate, t is elapsed time, and S is review interval.",
      "A learning algorithm based on spaced repetition can adjust review intervals based on individual proficiency.",
      "Adequate sleep enhances memory consolidation after each review session.",
      "Creating flashcards with concise questions improves retention compared to passive reading.",
      "Reviewing just before forgetting significantly boosts memory efficiency.",
      "Neuroscience studies show self-testing activates the hippocampus, enhancing information recall.",
      "Encountering knowledge in various contexts improves retention compared to monotonous repetition.",
      "Too short review intervals reduce retention due to lack of time for consolidation.",
      "Too long review intervals risk forgetting most of the material before review.",
      "AI can personalize study schedules, optimizing memory retention for each student based on their progress."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(s, ForAll(t, Retention(s,t) = e^(-t/S)))",
      "ForAll(s, use_spaced_repetition(s) → better_memory_retention(s))",
      "ForAll(s, ForAll(m, sleep_well(s) ∧ review_material(s,m) → stronger_memory_connections(s,m)))",
      "ForAll(s, ForAll(f, use_flashcards(s,f) → higher_retention_rate(s,f)))",
      "ForAll(s, ForAll(m, ReviewBeforeForgetting(s,m) → HigherMemoryEfficiency(s,m)))",
      "ForAll(s, ForAll(m, self_test(s,m) → (activate_hippocampus(s) ∧ improve_recall(s,m))))",
      "ForAll(s, ForAll(m, encounter_different_contexts(s,m) → higher_long_term_retention(s,m)))",
      "ForAll(s, ForAll(m, too_short_intervals(s,m) → inefficient_learning(s,m)))",
      "ForAll(s, ForAll(m, too_long_intervals(s,m) → high_forgetting_rate(s,m)))",
      "ForAll(s, ForAll(m, ai_personalized_schedule(s,m) → most_efficient_learning(s,m)))"
    ],
    "choices": [
      "Review timing has no impact on retention",
      "Optimal intervals prevent both premature review and excessive forgetting",
      "Sleep has no effect on memory consolidation",
      "All learning methods yield identical results"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which premises support that a quadrilateral with opposite angles summing to 180° and a perpendicular bisecting diagonal is a cyclic trapezium?"
    ],
    "premises-NL": [
      "In any triangle, the sum of the interior angles is 180 degrees.",
      "The perpendicular bisector of a chord passes through the center of the circle.",
      "If two triangles are similar, their corresponding sides are proportional.",
      "The centroid of a triangle divides each median in a 2:1 ratio.",
      "A tangent to a circle is perpendicular to the radius at the point of tangency.",
      "If two circles are orthogonal, the product of the distances from their intersection points to the centers equals the product of their radii.",
      "A point equidistant from two given points lies on the perpendicular bisector of the segment joining them.",
      "If a triangle is right-angled, then the median to the hypotenuse is half the hypotenuse."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(ABC, triangle(ABC) → (angle(A) + angle(B) + angle(C) = 180))",
      "ForAll(C, ForAll(P, chord(C) ∧ perpendicular_bisector(P, C) → passes_through(P, center)))",
      "ForAll(ABC, ForAll(DEF, similar(ABC, DEF) → proportional(sides(ABC), sides(DEF))))",
      "ForAll(G, ForAll(ABC, centroid(G, ABC) → ratio(median(G), 2:1)))",
      "ForAll(T, ForAll(O, tangent(T, O) → perpendicular(T, radius(O))))",
      "ForAll(C1, ForAll(C2, orthogonal(C1, C2) → (distance_product(intersections, centers) = radii_product(C1, C2))))",
      "ForAll(P, ForAll(A, ForAll(B, equidistant(P, A, B) → lies_on(P, perpendicular_bisector(AB)))))",
      "ForAll(ABC, right_triangle(ABC) → (median(hypotenuse) = 0.5*hypotenuse)))"
    ],
    "choices": [
      "Premises 1, 3, 7",
      "Premises 2, 5, 6",
      "Premises 4, 8",
      "Premises 1, 2, 5"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which premises support that a quadrilateral with opposite angles summing to 180° and a perpendicular bisecting diagonal is a cyclic trapezium?"
    ],
    "premises-NL": [
      "In any triangle, the sum of the interior angles is 180 degrees.",
      "The perpendicular bisector of a chord passes through the center of the circle.",
      "If two triangles are similar, their corresponding sides are proportional.",
      "The centroid of a triangle divides each median in a 2:1 ratio.",
      "A tangent to a circle is perpendicular to the radius at the point of tangency.",
      "If two circles are orthogonal, the product of the distances from their intersection points to the centers equals the product of their radii.",
      "A point equidistant from two given points lies on the perpendicular bisector of the segment joining them.",
      "If a triangle is right-angled, then the median to the hypotenuse is half the hypotenuse."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(ABC, triangle(ABC) → (angle(A) + angle(B) + angle(C) = 180))",
      "ForAll(C, ForAll(P, chord(C) ∧ perpendicular_bisector(P, C) → passes_through(P, center)))",
      "ForAll(ABC, ForAll(DEF, similar(ABC, DEF) → proportional(sides(ABC), sides(DEF))))",
      "ForAll(G, ForAll(ABC, centroid(G, ABC) → ratio(median(G), 2:1)))",
      "ForAll(T, ForAll(O, tangent(T, O) → perpendicular(T, radius(O))))",
      "ForAll(C1, ForAll(C2, orthogonal(C1, C2) → (distance_product(intersections, centers) = radii_product(C1, C2))))",
      "ForAll(P, ForAll(A, ForAll(B, equidistant(P, A, B) → lies_on(P, perpendicular_bisector(AB)))))",
      "ForAll(ABC, right_triangle(ABC) → (median(hypotenuse) = 0.5*hypotenuse)))"
    ],
    "choices": [
      "Premises 1, 3, 7",
      "Premises 2, 5, 6",
      "Premises 4, 8",
      "Premises 1, 2, 5"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the learning principles, which combination of factors most significantly decreases learning efficiency?"
    ],
    "premises-NL": [
      "Procrastination occurs when there is a perceived gap between effort and reward.",
      "If a task has a clear deadline, people are more likely to complete it on time.",
      "If a student uses active recall, they retain more information than passive review.",
      "The Pomodoro technique increases focus by breaking work into timed intervals.",
      "People are more likely to complete a task if they make a public commitment.",
      "Breaking a large task into smaller steps reduces mental resistance.",
      "Sleep is crucial for memory consolidation.",
      "If stress is too high, cognitive performance decreases.",
      "If a student prioritizes urgent tasks over important tasks, long-term learning suffers.",
      "Motivation increases when a person sees progress in their work."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(t, perceived_effort_gap(t) → procrastination(t))",
      "ForAll(t, has_deadline(t) → more_likely_complete_on_time(t))",
      "ForAll(s, uses_active_recall(s) → retains_more(s))",
      "ForAll(p, uses_pomodoro(p) → increased_focus(p))",
      "ForAll(t, public_commitment(t) → more_likely_complete(t))",
      "ForAll(t, large_task(t) → reduce_resistance(break_into_steps(t)))",
      "ForAll(s, sufficient_sleep(s) → better_memory_consolidation(s))",
      "ForAll(s, high_stress(s) → decreased_cognitive_performance(s))",
      "ForAll(s, prioritizes_urgent(s) → learning_suffers(s))",
      "ForAll(p, sees_progress(p) → increased_motivation(p))"
    ],
    "choices": [
      "Procrastination + passive review + sleep deprivation",
      "Clear deadlines + high stress",
      "Pomodoro technique + overwhelming task size",
      "Task breakdown + excessive distractions"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the mission parameters, which scenario accurately describes Luna's Mars expedition?"
    ],
    "premises-NL": [
      "If an astronaut undergoes advanced training and excels in simulations, they earn a flight clearance.",
      "If an astronaut earns a flight clearance and the launch vehicle passes a safety audit, they are approved for a Mars expedition.",
      "If an astronaut is approved for a Mars expedition and the orbital trajectory is precisely calculated, the mission departs on schedule.",
      "If the mission departs on schedule and Mars' radiation levels are within safe limits, a surface landing is authorized.",
      "If a surface landing is authorized and the astronaut deploys a functioning rover, geological samples are collected.",
      "If geological samples are collected and the analysis equipment is operational, a scientific breakthrough is possible.",
      "Either Luna undergoes advanced training or she withdraws from the program.",
      "Luna does not withdraw from the program.",
      "Luna excels in simulations.",
      "The launch vehicle for Luna passes a safety audit.",
      "The orbital trajectory for Luna's mission is precisely calculated.",
      "Mars' radiation levels are within safe limits.",
      "Luna deploys a functioning rover.",
      "The analysis equipment on Luna's mission is operational.",
      "If the mission control loses contact, the trajectory cannot be calculated.",
      "Mission control does not lose contact.",
      "If the rover malfunctions, geological samples cannot be collected.",
      "The rover does not malfunction.",
      "If radiation exceeds safe limits, a landing is not authorized.",
      "Radiation does not exceed safe limits.",
      "If Luna fails psychological evaluations, she cannot earn flight clearance.",
      "Luna does not fail psychological evaluations.",
      "If the audit detects a flaw, the launch vehicle is not approved.",
      "The audit does not detect a flaw.",
      "If the equipment calibration fails, a breakthrough is not possible.",
      "The equipment calibration does not fail.",
      "If the expedition is delayed, samples cannot be collected on time.",
      "The expedition is not delayed."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(a, (training(a) ∧ simulations(a)) → clearance(a))",
      "ForAll(a, (clearance(a) ∧ safety_audit(vehicle(a))) → approved(a))",
      "ForAll(a, (approved(a) ∧ trajectory(a)) → departs(a))",
      "ForAll(a, (departs(a) ∧ safe_radiation(Mars)) → landing(a))",
      "ForAll(a, (landing(a) ∧ rover(a)) → samples(a))",
      "ForAll(a, (samples(a) ∧ equipment(a)) → breakthrough(a))",
      "training(Luna) ∨ withdraw(Luna)",
      "¬withdraw(Luna)",
      "simulations(Luna)",
      "safety_audit(vehicle(Luna))",
      "trajectory(Luna)",
      "safe_radiation(Mars)",
      "rover(Luna)",
      "equipment(Luna)",
      "lose_contact(control) → ¬trajectory(Luna)",
      "¬lose_contact(control)",
      "malfunction(rover(Luna)) → ¬samples(Luna)",
      "¬malfunction(rover(Luna))",
      "exceed_radiation(Mars) → ¬landing(Luna)",
      "¬exceed_radiation(Mars)",
      "fail_psych(Luna) → ¬clearance(Luna)",
      "¬fail_psych(Luna)",
      "flaw_audit(vehicle(Luna)) → ¬safety_audit(vehicle(Luna))",
      "¬flaw_audit(vehicle(Luna))",
      "fail_calibration(equipment(Luna)) → ¬breakthrough(Luna)",
      "¬fail_calibration(equipment(Luna))",
      "delayed(expedition) → ¬samples(Luna)",
      "¬delayed(expedition)"
    ],
    "choices": [
      "Flawless simulations, minor trajectory tweak, routine rover check, brief signal delay",
      "Failed simulations, audit rejection, high radiation, equipment breakdown",
      "Incomplete training, miscalculated trajectory, unsafe landing, delayed return",
      "Perfect execution, instant breakthrough, permanent Mars base"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the online learning rules, which scenario is correct?"
    ],
    "premises-NL": [
      "If a student completes all online modules on a platform with 99% uptime, they master the course content.",
      "If a student masters the course content, they either pass a proctored exam or submit a capstone project.",
      "If a student does not submit a capstone project, they must take the proctored exam.",
      "If a course requires a proctored exam, the platform either provides a secure system or hires an external proctor.",
      "If a student experiences platform downtime exceeding 5 hours, they do not master the course content.",
      "If a student passes 6 or more online courses, they earn a digital certificate.",
      "If a student attends live sessions for a course with 100% participation, they are exempt from the proctored exam.",
      "If a student masters content in three courses but fails to submit capstone projects in any, they must take proctored exams for all three.",
      "If a student experiences downtime less than 5 hours and submits a capstone, they still need platform verification if the course is high-stakes.",
      "If a student completes modules across four courses with 99% uptime and passes all exams, they qualify for an advanced credential.",
      "If the platform provides a secure system but it crashes during the exam, the exam is rescheduled.",
      "If a student does not master the course content and submits a capstone, the capstone is rejected unless re-enrolled."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(s, ForAll(c, (complete_modules(s,c) ∧ (uptime(c) ≥ 99)) → master_content(s,c)))",
      "ForAll(s, ForAll(c, master_content(s,c) → (pass_exam(s,c) ∨ submit_capstone(s,c))))",
      "ForAll(s, ForAll(c, ¬submit_capstone(s,c) → take_exam(s,c))))",
      "ForAll(c, require_exam(c) → (secure_system(c) ∨ external_proctor(c))))",
      "ForAll(s, ForAll(c, (downtime(s,c) > 5) → ¬master_content(s,c))))",
      "ForAll(s, (pass_count(s) ≥ 6) → digital_certificate(s)))",
      "ForAll(s, ForAll(c, (live_sessions(s,c) = 100) → ¬take_exam(s,c))))",
      "ForAll(s, ForAll(c1, ForAll(c2, ForAll(c3, (master_content(s,c1) ∧ master_content(s,c2) ∧ master_content(s,c3) ∧ ¬submit_capstone(s,c1) ∧ ¬submit_capstone(s,c2) ∧ ¬submit_capstone(s,c3)) → (take_exam(s,c1) ∧ take_exam(s,c2) ∧ take_exam(s,c3))))))",
      "ForAll(s, ForAll(c, ((downtime(s,c) < 5) ∧ submit_capstone(s,c) ∧ high_stakes(c)) → need_verification(s,c))))",
      "ForAll(s, (complete_modules(s,c1) ∧ complete_modules(s,c2) ∧ complete_modules(s,c3) ∧ complete_modules(s,c4) ∧ (uptime(c1) ≥ 99) ∧ (uptime(c2) ≥ 99) ∧ (uptime(c3) ≥ 99) ∧ (uptime(c4) ≥ 99) ∧ pass_exam(s,c1) ∧ pass_exam(s,c2) ∧ pass_exam(s,c3) ∧ pass_exam(s,c4)) → advanced_credential(s)))",
      "ForAll(c, secure_system(c) ∧ crash_during_exam(c) → reschedule_exam(c)))",
      "ForAll(s, ForAll(c, (¬master_content(s,c) ∧ submit_capstone(s,c)) → (¬accept_capstone(s,c) ∨ re_enroll(s,c)))))"
    ],
    "choices": [
      "A student with 6h downtime must retake a rescheduled exam",
      "A student with 6h downtime earns a certificate despite failing courses",
      "External proctors block exam rescheduling after 6h downtime",
      "100% live attendance overrides 6h downtime effects"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the learning strategies, which combination is most effective for comprehension and retention?"
    ],
    "premises-NL": [
      "A structured study plan improves consistency in learning.",
      "A student who engages in interdisciplinary studies gains a broader problem-solving perspective.",
      "Frequent self-assessment helps students identify knowledge gaps.",
      "Collaborative projects encourage teamwork and communication skills.",
      "Excessive screen time reduces attention span and increases cognitive fatigue.",
      "Students who learn through hands-on experiments develop better intuition for abstract concepts.",
      "Engaging in debates sharpens critical thinking skills and argumentation strategies.",
      "Students who document their learning progress can track improvement effectively.",
      "Studying in an environment with minimal distractions enhances focus.",
      "Using spaced repetition techniques strengthens long-term memory.",
      "Writing summaries after studying reinforces comprehension and retention.",
      "Visualizing abstract concepts helps in better recall and understanding.",
      "Physical exercise contributes to improved cognitive function and stress reduction.",
      "Exploring historical perspectives of subjects deepens conceptual appreciation.",
      "Balancing leisure activities with study time prevents burnout.",
      "Regularly changing study locations can improve retention and mental flexibility.",
      "Peer tutoring benefits both the tutor and the learner by reinforcing concepts.",
      "Interactive learning tools increase engagement and concept application.",
      "Learning multiple subjects in parallel enhances cognitive adaptability.",
      "Setting specific goals for each study session boosts efficiency and motivation."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(s, structured_plan(s) → consistent_learning(s))",
      "ForAll(s, interdisciplinary_studies(s) → broader_problem_solving(s))",
      "ForAll(s, self_assessment(s) → identified_knowledge_gaps(s))",
      "ForAll(s, collaborative_projects(s) → (enhanced_teamwork(s) ∧ improved_communication(s)))",
      "ForAll(s, excessive_screen_time(s) → (reduced_attention_span(s) ∧ increased_cognitive_fatigue(s)))",
      "ForAll(s, hands_on_experiments(s) → better_intuition(s))",
      "ForAll(s, debates(s) → (sharpened_critical_thinking(s) ∧ improved_argumentation(s)))",
      "ForAll(s, document_learning(s) → tracked_improvement(s))",
      "ForAll(s, minimal_distractions(s) → enhanced_focus(s))",
      "ForAll(s, spaced_repetition(s) → strengthened_memory(s))",
      "ForAll(s, writing_summaries(s) → reinforced_comprehension(s))",
      "ForAll(s, visualization(s) → (improved_recall(s) ∧ better_understanding(s)))",
      "ForAll(s, physical_exercise(s) → (improved_cognitive_function(s) ∧ reduced_stress(s)))",
      "ForAll(s, historical_perspectives(s) → deeper_conceptual_appreciation(s))",
      "ForAll(s, balanced_leisure(s) → prevented_burnout(s))",
      "ForAll(s, changing_study_locations(s) → (improved_retention(s) ∧ mental_flexibility(s)))",
      "ForAll(s, peer_tutoring(s) → mutual_concept_reinforcement(s))",
      "ForAll(s, interactive_tools(s) → (increased_engagement(s) ∧ better_application(s)))",
      "ForAll(s, parallel_subjects(s) → enhanced_cognitive_adaptability(s))",
      "ForAll(s, goal_oriented_study(s) → (increased_efficiency(s) ∧ boosted_motivation(s)))"
    ],
    "choices": [
      "Structured plan + hands-on experiments + visualization",
      "Interactive tools + excessive screen time + cognitive fatigue",
      "Minimal distractions + historical perspectives + leisure overload",
      "Physical exercise + parallel subjects + scattered focus"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "There exists at least one student who completes all assigned exercises",
      "All students attend class regularly",
      "If a student has a consistent study routine, then they attend class regularly",
      "If a student seeks help from teaching assistants when needed, then they complete all assigned exercises"
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ E(x))",
      "∀x (S(x) → A(x))",
      "∀x (S(x) → (R(x) → A(x)))",
      "∀x (S(x) → (H(x) → E(x)))"
    ],
    "choices": [
      "All students complete all assigned exercises",
      "Some students seek help from teaching assistants when needed",
      "All students have a consistent study routine",
      "Some students do not attend class regularly"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Are all Python projects optimized for performance?"
    ],
    "premises-NL": [
      "Every Python project is well-structured.",
      "If a Python project is well-structured, then it is optimized.",
      "If a Python project is well-tested, then it is optimized.",
      "If a Python project is well-tested, then it follows PEP 8 standards.",
      "All Python projects have clean and readable code.",
      "All Python projects are easy to maintain.",
      "If a Python project is easy to maintain, then it is well-tested."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Project(x) → WellStructured(x))",
      "∀x (Project(x) ∧ WellStructured(x) → Optimized(x))",
      "∀x (Project(x) ∧ WellTested(x) → Optimized(x))",
      "∀x (Project(x) ∧ WellTested(x) → FollowsPEP8(x))",
      "∀x (Project(x) → CleanReadable(x))",
      "∀x (Project(x) → EasyToMaintain(x))",
      "∀x (Project(x) ∧ EasyToMaintain(x) → WellTested(x))"
    ],
    "choices": [
      "Yes, every project is optimized.",
      "No, some projects aren’t optimized.",
      "Only well-tested projects are optimized.",
      "Only PEP 8-compliant projects are optimized."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "If a student is not motivated, they will not pass the exams.",
      "All students submit homework on time.",
      "At least one student is registered for an advanced course.",
      "At least one student passes the exams.",
      "If a student actively participates in class discussions, they submit homework on time.",
      "If a student is not motivated, they will not participate in class discussions.",
      "If a student submits homework on time, they pass the exams.",
      "If a student is registered for an advanced course, they are motivated.",
      "If a student passes the exams, they will successfully graduate.",
      "If a student graduates, they achieve success."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x(¬Motivated(x)→¬Pass(x))",
      "∀x(Submit(x))",
      "∃x(Registered(x))",
      "∃x(Pass(x))",
      "∀x(Participate(x)→Submit(x))",
      "∀x(¬Motivated(x)→¬Participate(x))",
      "∀x(Submit(x)→Pass(x))",
      "∀x(Registered(x)→Motivated(x))",
      "∀x(Pass(x)→Graduate(x))",
      "∀x(Graduate(x)→Success(x))"
    ],
    "choices": [
      "At least one student graduates.",
      "Some students actively participate in class discussions but do not submit homework on time.",
      "All students fail the exams."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "If a student does not practice solving math problems, they will not be able to solve them correctly.",
      "All students attend math lectures regularly.",
      "At least one student is enrolled in an advanced math course.",
      "At least one student can solve math problems correctly.",
      "If a student asks questions in math class, they must have attended lectures.",
      "If a student does not practice math problems, they will not ask questions in class.",
      "If a student can solve math problems correctly, they will pass the math exam.",
      "If a student is enrolled in an advanced math course, they are motivated to study math.",
      "If a student passes the math exam, they successfully complete the math curriculum.",
      "If a student successfully completes the math curriculum, they excel in mathematics."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x(¬Practice(x) → ¬Solve(x))",
      "∀x(Attend(x))",
      "∃x(Enrolled(x))",
      "∃x(Solve(x))",
      "∀x(AskQuestions(x) → Attend(x))",
      "∀x(¬Practice(x) → ¬AskQuestions(x))",
      "∀x(Solve(x) → Pass(x))",
      "∀x(Enrolled(x) → Motivated(x))",
      "∀x(Pass(x) → Graduate(x))",
      "∀x(Graduate(x) → Excel(x))"
    ],
    "choices": [
      "Students who solve math problems correctly must have practiced them.",
      "Some students ask questions in math class even if they do not attend lectures.",
      "All students who practice math problems ask questions in class."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "If a person is not hardworking, they will not be successful in their career.",
      "All individuals in the company are punctual.",
      "At least one individual has experience in their field.",
      "At least one person is successful in their career.",
      "If a person is responsible, they are punctual.",
      "If a person is not hardworking, they will not be responsible.",
      "If a person works efficiently, they will be promoted.",
      "If a person has experience in their field, they are hardworking.",
      "If a person is promoted, they will be recognized by their employer.",
      "If a person is recognized by their employer, they will become a leader in their organization."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x(¬Hardworking(x) → ¬Successful(x))",
      "∀x(Punctual(x))",
      "∃x(Experienced(x))",
      "∃x(Successful(x))",
      "∀x(Responsible(x) → Punctual(x))",
      "∀x(¬Hardworking(x) → ¬Responsible(x))",
      "∀x(Efficient(x) → Promoted(x))",
      "∀x(Experienced(x) → Hardworking(x))",
      "∀x(Promoted(x) → Recognized(x))",
      "∀x(Recognized(x) → Leader(x))"
    ],
    "choices": [
      "Anyone with experience in their field must be hardworking.",
      "Some people are responsible but not punctual.",
      "All hardworking people are responsible."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "Every student has a GPA.",
      "If a student never attends lectures, their GPA will never improve.",
      "If a student submits all assignments on time, then their GPA improves.",
      "There exists at least one student who is on the honor roll.",
      "If a student has a high GPA, then they are eligible for a scholarship.",
      "If a student has a high GPA, then they are placed on the honor roll.",
      "If we assume that having a high GPA leads to being on the honor roll, then attending all lectures must contribute to improving GPA.",
      "There exists at least one student who attends all lectures.",
      "There exists at least one student who is eligible for a scholarship.",
      "Every student on the honor roll has a high GPA."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x(HasGPA(x))",
      "∀x(¬AttendsLectures(x) → ¬ImprovesGPA(x))",
      "∀x(SubmitsAssignments(x) → ImprovesGPA(x))",
      "∃x(HonorRoll(x))",
      "∀x(HighGPA(x) → EligibleForScholarship(x))",
      "∀x(HighGPA(x) → HonorRoll(x))",
      "∀x((HighGPA(x) → HonorRoll(x)) → (AttendsLectures(x) → ImprovesGPA(x)))",
      "∃x(AttendsLectures(x))",
      "∃x(EligibleForScholarship(x))",
      "∀x(HonorRoll(x) → HighGPA(x))"
    ],
    "choices": [
      "There exists at least one student who is eligible for a scholarship.",
      "Submitting all assignments on time never improves GPA.",
      "All students on the honor roll never have high GPAs."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "If a student improves their grades, they will eventually achieve high grades.",
      "If a student has high grades, they are eligible for a scholarship.",
      "If a student has high grades, they are considered a high achiever.",
      "If a student attends lectures, they understand the material.",
      "If a student understands the material, they perform well in exams.",
      "If a student is eligible for a scholarship, their tuition fee is reduced.",
      "If a student has a reduced tuition fee, they experience less financial burden.",
      "If a student has less financial burden, they have more time to study.",
      "If a student has more study time, their grades improve."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x(ImprovesGrades(x) → HighGrades(x))",
      "∀x(HighGrades(x) → ScholarshipEligible(x))",
      "∀x(HighGrades(x) → HighAchiever(x))",
      "∀x(AttendsLectures(x) → UnderstandsMaterial(x))",
      "∀x(UnderstandsMaterial(x) → PerformsWellExams(x))",
      "∀x(ScholarshipEligible(x) → ReducedTuitionFee(x))",
      "∀x(ReducedTuitionFee(x) → LessFinancialBurden(x))",
      "∀x(LessFinancialBurden(x) → MoreStudyTime(x))",
      "∀x(MoreStudyTime(x) → ImprovesGrades(x))"
    ],
    "choices": [
      "Attending lectures leads to performing well in exams.",
      "A student with a scholarship always has high grades.",
      "If a student does not understand the material, they cannot perform well in exams.",
      "More study time guarantees high achievement."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is best supported?"
    ],
    "premises-NL": [
      "If a student attends lectures regularly, they understand the course material.",
      "If a student understands the course material, they perform well in exams.",
      "If a student performs well in exams, they achieve a high GPA.",
      "If a student achieves a high GPA, they are eligible for academic awards.",
      "If a student is eligible for academic awards, they receive financial benefits.",
      "If a student participates in research projects, they gain practical experience.",
      "If a student gains practical experience, they have a higher chance of getting internships.",
      "If a student secures an internship, they improve their job prospects after graduation.",
      "If a student networks with professors, they get strong recommendation letters.",
      "If a student has strong recommendation letters, they have better opportunities for graduate school.",
      "If a student has better opportunities for graduate school, they can pursue advanced education.",
      "If a student pursues advanced education, they increase their earning potential."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x(AttendsLectures(x) → UnderstandsMaterial(x))",
      "∀x(UnderstandsMaterial(x) → PerformsWellExams(x))",
      "∀x(PerformsWellExams(x) → HighGPA(x))",
      "∀x(HighGPA(x) → AcademicAwardsEligible(x))",
      "∀x(AcademicAwardsEligible(x) → FinancialBenefits(x))",
      "∀x(ParticipatesResearch(x) → GainsPracticalExperience(x))",
      "∀x(GainsPracticalExperience(x) → HigherChanceInternship(x))",
      "∀x(SecuresInternship(x) → ImprovesJobProspects(x))",
      "∀x(NetworksProfessors(x) → StrongRecommendationLetters(x))",
      "∀x(StrongRecommendationLetters(x) → BetterGraduateSchoolOpportunities(x))",
      "∀x(BetterGraduateSchoolOpportunities(x) → CanPursueAdvancedEducation(x))",
      "∀x(CanPursueAdvancedEducation(x) → IncreasesEarningPotential(x))"
    ],
    "choices": [
      "Failing to secure an internship prevents improved job prospects.",
      "Attending lectures regularly leads to a high GPA.",
      "Financial benefits imply participation in research projects.",
      "Practical experience guarantees eligibility for academic awards."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion is most supported?"
    ],
    "premises-NL": [
      "If a student applies for internships, they have a chance to secure an internship.",
      "If a student secures an internship, they gain practical experience.",
      "If a student gains practical experience, they improve their job prospects after graduation.",
      "If a student performs well in their internship, they may receive a full-time job offer.",
      "If a student receives a full-time job offer before graduation, they have a smoother transition into the workforce.",
      "If a student has multiple internships, they build a strong resume.",
      "If a student builds a strong resume, they increase their chances of getting hired after graduation.",
      "If a student has industry connections, they have a higher chance of securing an internship.",
      "If a student has a mentor in the industry, they receive career guidance.",
      "If a student receives career guidance, they make informed career decisions.",
      "If a student makes informed career decisions, they have better career growth.",
      "If a student has better career growth, they increase their earning potential."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x(AppliesInternships(x) → ChanceSecuresInternship(x))",
      "∀x(SecuresInternship(x) → GainsPracticalExperience(x))",
      "∀x(GainsPracticalExperience(x) → ImprovesJobProspects(x))",
      "∀x(PerformsWellInternship(x) → MayReceiveFullTimeJob(x))",
      "∀x(ReceivesFullTimeJob(x) → SmoothWorkforceTransition(x))",
      "∀x(MultipleInternships(x) → BuildsStrongResume(x))",
      "∀x(BuildsStrongResume(x) → HigherChanceGettingHired(x))",
      "∀x(IndustryConnections(x) → HigherChanceSecuringInternship(x))",
      "∀x(HasMentor(x) → ReceivesCareerGuidance(x))",
      "∀x(ReceivesCareerGuidance(x) → MakesInformedCareerDecisions(x))",
      "∀x(MakesInformedCareerDecisions(x) → BetterCareerGrowth(x))",
      "∀x(BetterCareerGrowth(x) → IncreasesEarningPotential(x))"
    ],
    "choices": [
      "Students who do not perform well in internships will never receive full-time job offers.",
      "Having industry connections can help a student gain practical experience indirectly.",
      "Building a strong resume directly increases a student’s earning potential.",
      "Students who do not have a mentor cannot make any career decisions."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which of the following is best supported?"
    ],
    "premises-NL": [
      "If a student builds a strong resume, they increase their chances of securing a job.",
      "If a student attends career workshops, they improve their job application skills.",
      "If a student improves their job application skills, they perform better in job interviews.",
      "If a student performs better in job interviews, they have a higher chance of getting hired.",
      "If a student participates in internships, they gain relevant work experience.",
      "If a student gains relevant work experience, they enhance their employability.",
      "If a student has professional networking skills, they can connect with potential employers.",
      "If a student connects with potential employers, they receive job opportunities.",
      "If a student has a career mentor, they receive guidance on career decisions.",
      "If a student receives guidance on career decisions, they make informed career choices.",
      "If a student makes informed career choices, they have better long-term career growth.",
      "If a student has better long-term career growth, they achieve financial stability."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x(BuildsStrongResume(x) → HigherChanceJob(x))",
      "∀x(AttendsCareerWorkshops(x) → ImprovesJobApplicationSkills(x))",
      "∀x(ImprovesJobApplicationSkills(x) → PerformsBetterInterviews(x))",
      "∀x(PerformsBetterInterviews(x) → HigherChanceGettingHired(x))",
      "∀x(ParticipatesInternships(x) → GainsWorkExperience(x))",
      "∀x(GainsWorkExperience(x) → EnhancesEmployability(x))",
      "∀x(HasNetworkingSkills(x) → ConnectsPotentialEmployers(x))",
      "∀x(ConnectsPotentialEmployers(x) → ReceivesJobOpportunities(x))",
      "∀x(HasCareerMentor(x) → ReceivesCareerGuidance(x))",
      "∀x(ReceivesCareerGuidance(x) → MakesInformedCareerChoices(x))",
      "∀x(MakesInformedCareerChoices(x) → BetterCareerGrowth(x))",
      "∀x(BetterCareerGrowth(x) → AchievesFinancialStability(x))"
    ],
    "choices": [
      "Students who attend career workshops are guaranteed to get hired after interviews.",
      "Building a strong resume directly leads to financial stability.",
      "Having a career mentor leads to better long-term career growth.",
      "Gaining relevant work experience prevents the need for strong interview performance."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "If a student attends lectures regularly, they have a better understanding of the subject.",
      "If a student understands the subject well, they perform better in exams.",
      "All students have access to academic support services.",
      "If a student uses academic support services, they improve their performance.",
      "If a student performs well in exams, they have a higher GPA.",
      "All students have access to study materials.",
      "At least one student participates in group study sessions.",
      "If participation in group study sessions improves understanding, then all students must engage in them regularly.",
      "All students receive feedback on their assignments.",
      "All students who actively use feedback improve their grades.",
      "All students who manage their time effectively achieve better academic results.",
      "If a student has high academic performance, they are more likely to receive job opportunities."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x(AttendsLecturesRegularly(x) → BetterUnderstanding(x))",
      "∀x(BetterUnderstanding(x) → PerformsBetterExams(x))",
      "∀x(Student(x) → HasAccessToAcademicSupport(x))",
      "∀x(UsesAcademicSupport(x) → ImprovesPerformance(x))",
      "∀x(PerformsWellExams(x) → HigherGPA(x))",
      "∀x(Student(x) → HasAccessToStudyMaterials(x))",
      "∃x(ParticipatesGroupStudy(x))",
      "(∀x(ParticipatesGroupStudy(x) → ImprovesUnderstanding(x)) → ∀x(EngagesInGroupStudy(x)))",
      "∀x(Student(x) → ReceivesFeedback(x))",
      "∀x(UsesFeedback(x) → ImprovesGrades(x))",
      "∀x(ManagesTimeEffectively(x) → AchievesBetterResults(x))",
      "∀x(HighAcademicPerformance(x) → MoreJobOpportunities(x))"
    ],
    "choices": [
      "If a student manages their time effectively, they receive feedback on assignments.",
      "A student who uses feedback improves their grades.",
      "If a student has high academic performance, they are less likely to get job opportunities.",
      "If a student does not attend lectures, they definitely cannot understand the subject."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion is correct?"
    ],
    "premises-NL": [
      "At least one student participates in research projects.",
      "All students are encouraged to engage in independent study.",
      "If a student publishes research, they gain academic recognition.",
      "If a student does not publish research, they do not receive a research grant.",
      "All students have access to academic mentorship.",
      "If a student engages in independent study, they are likely to publish research.",
      "All students benefit from participating in research projects.",
      "If not publishing research leads to no research grant, then all students must engage in independent study.",
      "If not publishing research leads to no research grant, then engaging in independent study increases the likelihood of publishing research.",
      "If all students are encouraged to engage in independent study, then publishing research leads to academic recognition.",
      "If a student engages in independent study, they gain academic recognition.",
      "If a student does not receive research grants, they cannot access advanced research opportunities."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "Exists(x, ParticipatesResearch(x))",
      "ForAll(x, Student(x) → EncouragedIndependentStudy(x))",
      "ForAll(x, PublishesResearch(x) → GainsAcademicRecognition(x))",
      "ForAll(x, ¬PublishesResearch(x) → ¬ReceivesResearchGrant(x))",
      "ForAll(x, Student(x) → HasAccessToMentorship(x))",
      "ForAll(x, EngagesIndependentStudy(x) → LikelyPublishesResearch(x))",
      "ForAll(x, Student(x) → BenefitsFromResearch(x))",
      "ForAll(x, ¬PublishesResearch(x) → ¬ReceivesResearchGrant(x)) → ForAll(x, EngagesIndependentStudy(x))",
      "ForAll(x, ¬PublishesResearch(x) → ¬ReceivesResearchGrant(x)) → (EngagesIndependentStudy(x) → LikelyPublishesResearch(x))",
      "ForAll(x, EncouragedIndependentStudy(x)) → (PublishesResearch(x) → GainsAcademicRecognition(x))",
      "ForAll(x, EngagesIndependentStudy(x) → GainsAcademicRecognition(x))",
      "ForAll(x, ¬ReceivesResearchGrant(x) → ¬AccessAdvancedResearch(x))"
    ],
    "choices": [
      "If a student gains academic recognition, they must have received a research grant.",
      "A student who does not publish research can still receive a research grant.",
      "If a student does not engage in independent study, they will never publish research.",
      "If a student engages in independent study, they are likely to publish research and may gain academic recognition."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "At least one student receives academic recognition.",
      "All students have the opportunity to participate in academic competitions.",
      "If a student wins an academic competition, they gain academic recognition.",
      "If a student does not win an academic competition, they do not receive a merit award.",
      "All students can access faculty mentorship.",
      "If a student engages in research, they increase their chances of winning an academic competition.",
      "All students benefit from faculty mentorship.",
      "If failing to win a competition results in no merit award, then all students should seek faculty mentorship.",
      "If failing to win a competition results in no merit award, then engaging in research increases the likelihood of winning.",
      "If all students have the opportunity to participate in competitions, then winning leads to academic recognition.",
      "If a student engages in research, they are more likely to receive academic recognition.",
      "If a student does not receive a merit award, they have fewer scholarship opportunities."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x(ReceivesAcademicRecognition(x))",
      "∀x(Student(x) → OpportunityAcademicCompetition(x))",
      "∀x(WinsCompetition(x) → GainsAcademicRecognition(x))",
      "∀x(¬WinsCompetition(x) → ¬ReceivesMeritAward(x))",
      "∀x(Student(x) → AccessFacultyMentorship(x))",
      "∀x(EngagesResearch(x) → IncreasedChanceWinsCompetition(x))",
      "∀x(Student(x) → BenefitsFromMentorship(x))",
      "(∀x(¬WinsCompetition(x) → ¬ReceivesMeritAward(x)) → ∀x(SeeksMentorship(x)))",
      "(∀x(¬WinsCompetition(x) → ¬ReceivesMeritAward(x)) → (EngagesResearch(x) → IncreasedChanceWinsCompetition(x)))",
      "(∀x(OpportunityAcademicCompetition(x)) → (WinsCompetition(x) → GainsAcademicRecognition(x)))",
      "∀x(EngagesResearch(x) → GainsAcademicRecognition(x))",
      "∀x(¬ReceivesMeritAward(x) → FewerScholarshipOpportunities(x))"
    ],
    "choices": [
      "Engaging in research improves a student's chances of gaining academic recognition.",
      "A student who does not win an academic competition can still receive a merit award.",
      "If a student participates in academic competitions, they will receive academic recognition."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement is correct?"
    ],
    "premises-NL": [
      "At least one student receives a scholarship.",
      "All students have the opportunity to apply for scholarships.",
      "If a student maintains a high GPA, they qualify for a merit-based scholarship.",
      "If a student does not maintain a high GPA, they do not qualify for a merit-based scholarship.",
      "All students can seek financial aid counseling.",
      "If a student engages in extracurricular activities, they improve their scholarship eligibility.",
      "All students benefit from financial aid counseling.",
      "If failing to maintain a high GPA results in losing a scholarship, then all students should seek financial aid counseling.",
      "If failing to maintain a high GPA results in losing a scholarship, then engaging in extracurricular activities increases the chances of receiving financial aid.",
      "If all students have the opportunity to apply for scholarships, then maintaining a high GPA leads to scholarship eligibility.",
      "If a student engages in extracurricular activities, they are more likely to receive a scholarship.",
      "If a student does not receive a scholarship, they may face financial difficulties in funding their education."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x(ReceivesScholarship(x))",
      "∀x(Student(x) → OpportunityApplyScholarship(x))",
      "∀x(MaintainsHighGPA(x) → QualifiesMeritScholarship(x))",
      "∀x(¬MaintainsHighGPA(x) → ¬QualifiesMeritScholarship(x))",
      "∀x(Student(x) → CanSeekFinancialAidCounseling(x))",
      "∀x(EngagesExtracurriculars(x) → ImprovesScholarshipEligibility(x))",
      "∀x(Student(x) → BenefitsFromFinancialAidCounseling(x))",
      "(∀x(¬MaintainsHighGPA(x) → ¬ReceivesScholarship(x)) → ∀x(SeeksFinancialAidCounseling(x)))",
      "(∀x(¬MaintainsHighGPA(x) → ¬ReceivesScholarship(x)) → (EngagesExtracurriculars(x) → IncreasedChanceReceivesFinancialAid(x)))",
      "(∀x(OpportunityApplyScholarship(x)) → (MaintainsHighGPA(x) → QualifiesMeritScholarship(x)))",
      "∀x(EngagesExtracurriculars(x) → IncreasedLikelihoodReceivesScholarship(x))",
      "∀x(¬ReceivesScholarship(x) → MayFaceFinancialDifficulties(x))"
    ],
    "choices": [
      "If a student maintains a high GPA, they are more likely to receive a scholarship.",
      "A student who does not maintain a high GPA can still qualify for a merit-based scholarship.",
      "If a student does not engage in extracurricular activities, they will never receive a scholarship."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises above, which of the following statements can be logically concluded?"
    ],
    "premises-NL": [
      "At least one student receives financial aid.",
      "All students can apply for financial aid.",
      "If a student has a low family income, they qualify for need-based financial aid.",
      "Students from middle- or high-income families are not eligible for need-based aid.",
      "All students can seek financial aid counseling.",
      "If a student applies for financial aid, they increase their chances of receiving financial support.",
      "If a student receives financial aid, their tuition burden is reduced.",
      "If a student's tuition burden is reduced, they have less financial stress.",
      "If a student has less financial stress, they can focus better on their studies.",
      "If a student focuses better on their studies, their academic performance improves.",
      "If a student's academic performance improves, they may become eligible for merit-based scholarships.",
      "If a student does not receive financial aid, they may have to take on student loans."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x(ReceivesFinancialAid(x))",
      "∀x(Student(x) → CanApplyFinancialAid(x))",
      "∀x(LowFamilyIncome(x) → QualifiesNeedBasedAid(x))",
      "∀x(¬LowFamilyIncome(x) → ¬QualifiesNeedBasedAid(x))",
      "∀x(Student(x) → CanSeekFinancialAidCounseling(x))",
      "∀x(AppliesFinancialAid(x) → IncreasesChanceFinancialSupport(x))",
      "∀x(ReceivesFinancialAid(x) → ReducedTuitionBurden(x))",
      "∀x(ReducedTuitionBurden(x) → LessFinancialStress(x))",
      "∀x(LessFinancialStress(x) → BetterStudyFocus(x))",
      "∀x(BetterStudyFocus(x) → ImprovesAcademicPerformance(x))",
      "∀x(ImprovesAcademicPerformance(x) → EligibleMeritScholarship(x))",
      "∀x(¬ReceivesFinancialAid(x) → MayTakeStudentLoans(x))"
    ],
    "choices": [
      "If a student applies for financial aid and qualifies, they are more likely to receive support and reduce financial stress.",
      "If a student has less financial stress, they are more likely to perform better academically.",
      "If a student does not qualify for any aid and takes no counseling, they are guaranteed to take on student loans.",
      "If a student receives financial aid, their tuition burden remains the same."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be logically inferred?"
    ],
    "premises-NL": [
      "At least one student is learning Python.",
      "All students can access Python learning resources.",
      "If a student practices Python regularly, they improve their coding skills.",
      "If a student does not practice Python, their coding skills do not improve.",
      "All students can participate in coding challenges.",
      "If a student solves coding challenges, they gain problem-solving skills.",
      "If a student gains problem-solving skills, they become proficient in Python.",
      "If a student is proficient in Python, they qualify for software development internships.",
      "If a student gets an internship, they gain real-world experience.",
      "If a student gains real-world experience, their job prospects improve.",
      "If a student does not practice coding, they may struggle in technical interviews.",
      "If a student participates in open-source projects, they build a strong portfolio."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x (LearningPython(x))",
      "∀x (Student(x) → AccessPythonResources(x))",
      "∀x (PracticesPython(x) → ImprovesCodingSkills(x))",
      "∀x (¬PracticesPython(x) → ¬ImprovesCodingSkills(x))",
      "∀x (Student(x) → CanJoinCodingChallenges(x))",
      "∀x (SolvesChallenges(x) → GainsProblemSolvingSkills(x))",
      "∀x (GainsProblemSolvingSkills(x) → ProficientPython(x))",
      "∀x (ProficientPython(x) → QualifiesInternship(x))",
      "∀x (GetsInternship(x) → GainsRealWorldExperience(x))",
      "∀x (GainsRealWorldExperience(x) → ImprovesJobProspects(x))",
      "∀x (¬PracticesCoding(x) → StrugglesTechnicalInterviews(x))",
      "∀x (ParticipatesOpenSource(x) → BuildsStrongPortfolio(x))"
    ],
    "choices": [
      "Practicing Python regularly always results in worse coding skills.",
      "Practicing Python regularly improves coding skills.",
      "Students who do not practice Python regularly become proficient in Python.",
      "Practicing Python has no effect on a student’s coding abilities."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a Raspberry Pi system is simple to use, then it is cost-effective.",
      "There exists at least one Raspberry Pi system that is cost-effective.",
      "If a Raspberry Pi system is not simple to use, then it is not versatile.",
      "If a Raspberry Pi system is simple to use, then it is versatile.",
      "There exists at least one Raspberry Pi system that is versatile.",
      "Every Raspberry Pi system is thoroughly tested and well-documented.",
      "If being simple to use implies cost-effectiveness for a Raspberry Pi system, then every Raspberry Pi system is thoroughly tested and well-documented.",
      "If there exists at least one cost-effective Raspberry Pi system, then there exists at least one versatile Raspberry Pi system.",
      "If a Raspberry Pi system is connected to online resources, then it is thoroughly tested and well-documented.",
      "If a Raspberry Pi system is connected to online resources, then it is versatile.",
      "There exists at least one Raspberry Pi system that is connected to online resources and benefits from active community support.",
      "If a Raspberry Pi system is cost-effective but not thoroughly tested and well-documented, then it might not support all versatile use-cases."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, (RaspberryPiSimpleToUse(x) → RaspberryPiCostEffective(x)))",
      "Exists(x, RaspberryPiCostEffective(x))",
      "ForAll(x, (¬RaspberryPiSimpleToUse(x) → ¬RaspberryPiVersatile(x)))",
      "ForAll(x, (RaspberryPiSimpleToUse(x) → RaspberryPiVersatile(x)))",
      "Exists(x, RaspberryPiVersatile(x))",
      "ForAll(x, RaspberryPiTestedAndDocumented(x))",
      "((ForAll(x, (RaspberryPiSimpleToUse(x) → RaspberryPiCostEffective(x)))) → ForAll(x, RaspberryPiTestedAndDocumented(x)))",
      "(Exists(x, RaspberryPiCostEffective(x)) → Exists(x, RaspberryPiVersatile(x)))",
      "ForAll(x, (RaspberryPiConnectedOnline(x) → RaspberryPiTestedAndDocumented(x)))",
      "ForAll(x, (RaspberryPiConnectedOnline(x) → RaspberryPiVersatile(x)))",
      "Exists(x, RaspberryPiConnectedOnline(x))",
      "ForAll(x, ((RaspberryPiCostEffective(x) ∧ ¬RaspberryPiTestedAndDocumented(x)) → ¬SupportsAllVersatileUseCases(x)))"
    ],
    "choices": [
      "A cost-effective Raspberry Pi system may fail to support all versatile use-cases if it is not thoroughly tested and well-documented.",
      "Every Raspberry Pi system is necessarily versatile if it is cost-effective.",
      "If a Raspberry Pi system is cost-effective but not thoroughly tested and well-documented, then it is still versatile.",
      "A Raspberry Pi system is necessarily versatile even if it is not cost-effective."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which of the following conclusions can be inferred?"
    ],
    "premises-NL": [
      "Every EV charging station supports fast charging.",
      "There exists at least one EV charging station that is widely available.",
      "If an EV charging station supports fast charging, then it is reliable.",
      "Every EV charging station meets safety standards.",
      "If an EV charging station is not widely available, then it is not thoroughly maintained.",
      "If an EV charging station is widely available, then it supports fast charging.",
      "If not being widely available implies not being thoroughly maintained, then any widely available EV charging station supports fast charging.",
      "If not being widely available implies not being thoroughly maintained, then every EV charging station meets safety standards.",
      "If an EV charging station meets safety standards, then it is thoroughly maintained.",
      "If an EV charging station is not cost-effective, then it is not widely available.",
      "Every EV charging station is thoroughly maintained."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, SupportsFastCharging(x))",
      "Exists(x, WidelyAvailable(x))",
      "(SupportsFastCharging(x) → Reliable(x))",
      "ForAll(x, MeetsSafetyStandards(x))",
      "(¬WidelyAvailable(x) → ¬ThoroughlyMaintained(x))",
      "(WidelyAvailable(x) → SupportsFastCharging(x))",
      "((¬WidelyAvailable(x) → ¬ThoroughlyMaintained(x)) → (WidelyAvailable(x) → SupportsFastCharging(x)))",
      "((¬WidelyAvailable(x) → ¬ThoroughlyMaintained(x)) → ForAll(x, MeetsSafetyStandards(x)))",
      "(MeetsSafetyStandards(x) → ThoroughlyMaintained(x))",
      "(¬CostEffective(x) → ¬WidelyAvailable(x))",
      "ForAll(x, ThoroughlyMaintained(x))"
    ],
    "choices": [
      "It is not the case that if an EV charging station being not widely available implies that it is not thoroughly maintained then every EV charging station meets safety standards.",
      "If it is true that if an EV charging station being not widely available implies that it is not thoroughly maintained then every EV charging station meets safety standards, then it follows that if an EV charging station being not widely available implies that it is not thoroughly maintained then every EV charging station meets safety standards.",
      "Both that if an EV charging station being not widely available implies that it is not thoroughly maintained then every EV charging station meets safety standards, and that it is not the case that if an EV charging station being not widely available implies that it is not thoroughly maintained then every EV charging station meets safety standards.",
      "If an EV charging station being not widely available implies that it is not thoroughly maintained, then every EV charging station meets safety standards."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which of the following conclusions can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one functional microchip.",
      "If a microchip does not have a stable power supply, then it does not operate efficiently.",
      "If a microchip does not operate efficiently, then it does not have a stable power supply.",
      "All microchips pass quality tests.",
      "There exists at least one microchip that meets performance standards.",
      "If a microchip is not functional, then it does not have a stable power supply.",
      "If a microchip is not functional, then it does not meet performance standards.",
      "All microchips are functional.",
      "If a microchip is functional, then it is properly integrated into the circuit.",
      "There exists at least one properly integrated microchip.",
      "If all microchips pass quality tests, then if a microchip does not have a stable power supply, it will not operate efficiently.",
      "If not being functional implies not having a stable power supply, then there exists at least one microchip that meets performance standards.",
      "If a microchip is functional, then it has a stable power supply.",
      "If a microchip is not properly integrated into the circuit, then it does not have a stable power supply.",
      "All microchips operate efficiently.",
      "If a microchip does not meet performance standards, then it is not functional.",
      "If a microchip does not operate efficiently, then it does not meet performance standards.",
      "There exists at least one microchip that passes quality tests.",
      "If a microchip is properly integrated into the circuit, then it meets performance standards."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "Exists(x, Functional(x))",
      "(not Stable(x) implies not OperatesEfficiently(x))",
      "(not OperatesEfficiently(x) implies not Stable(x))",
      "ForAll(x, PassesQualityTests(x))",
      "Exists(x, MeetsPerformanceStandards(x))",
      "(not Functional(x) implies not Stable(x))",
      "(not Functional(x) implies not MeetsPerformanceStandards(x))",
      "ForAll(x, Functional(x))",
      "(Functional(x) implies ProperlyIntegrated(x))",
      "Exists(x, ProperlyIntegrated(x))",
      "(ForAll(x, PassesQualityTests(x)) implies (not Stable(x) implies not OperatesEfficiently(x)))",
      "((not Functional(x) implies not Stable(x)) implies Exists(x, MeetsPerformanceStandards(x)))",
      "(Functional(x) implies Stable(x))",
      "(not ProperlyIntegrated(x) implies not Stable(x))",
      "ForAll(x, OperatesEfficiently(x))",
      "(not MeetsPerformanceStandards(x) implies not Functional(x))",
      "(not OperatesEfficiently(x) implies not MeetsPerformanceStandards(x))",
      "Exists(x, PassesQualityTests(x))",
      "(ProperlyIntegrated(x) implies MeetsPerformanceStandards(x))"
    ],
    "choices": [
      "If it is the case that if a microchip not being functional implies that it does not have a stable power supply then there exists at least one microchip that meets performance standards, then it follows that if a microchip not being functional implies that it does not have a stable power supply then there exists at least one microchip that meets performance standards.",
      "If a microchip not being functional implies that it does not have a stable power supply, then there exists at least one microchip that meets performance standards.",
      "Both the statement that if a microchip not being functional implies that it does not have a stable power supply then there exists at least one microchip that meets performance standards and the statement that it is not the case that if a microchip not being functional implies that it does not have a stable power supply then there exists at least one microchip that meets performance standards are true.",
      "It is not the case that if a microchip not being functional implies that it does not have a stable power supply, then there exists at least one microchip that meets performance standards."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every transportation system in the city is equipped with modern technology.",
      "Every transportation system in the city is safe.",
      "There exists at least one transportation system that is cost-effective.",
      "If a transportation system is not equipped with modern technology, then it is not cost-effective.",
      "If a transportation system is not eco-friendly, then it is not thoroughly tested.",
      "If a transportation system is not eco-friendly, then it is not equipped with modern technology.",
      "If there exists at least one cost-effective transportation system, then every transportation system in the city is safe.",
      "If not being equipped with modern technology implies not being cost-effective, then every transportation system in the city is safe.",
      "If a transportation system is not thoroughly tested, then it is not reliable.",
      "If a transportation system is not safe, then it is not equipped with modern technology.",
      "If a transportation system is eco-friendly, then it is cost-effective.",
      "If a transportation system is safe but not eco-friendly, then it is not necessarily cost-effective."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "Exists(x, CostEffective(x))",
      "Exists(x, EquippedWithModernTechnology(x))",
      "Exists(x, Safe(x))",
      "ForAll(x, EquippedWithModernTechnology(x))",
      "ForAll(x, Safe(x))",
      "ForAll(x, ¬EquippedWithModernTechnology(x) → ¬CostEffective(x))",
      "ForAll(x, ¬EcoFriendly(x) → ¬ThoroughlyTested(x))",
      "ForAll(x, ¬EcoFriendly(x) → ¬EquippedWithModernTechnology(x))",
      "(Exists(x, CostEffective(x)) → ForAll(x, Safe(x)))",
      "(ForAll(x, ¬EquippedWithModernTechnology(x) → ¬CostEffective(x)) → ForAll(x, Safe(x)))",
      "ForAll(x, ¬ThoroughlyTested(x) → ¬Reliable(x))",
      "ForAll(x, ¬Safe(x) → ¬EquippedWithModernTechnology(x))",
      "ForAll(x, EcoFriendly(x) → CostEffective(x))",
      "ForAll(x, (Safe(x) ∧ ¬EcoFriendly(x)) → ¬Necessarily(CostEffective(x)))"
    ],
    "choices": [
      "It is false that if every transportation system in the city is safe, then there exists at least one transportation system that is cost-effective.",
      "Both (every transportation system in the city is safe implies there exists at least one cost-effective transportation system) and its negation hold, leading to a contradiction.",
      "If every transportation system in the city is safe implies there exists at least one cost-effective transportation system, then this implication is always true.",
      "If every transportation system in the city is safe, then there exists at least one transportation system that is cost-effective."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There is at least one excellent student.",
      "If a student is not excellent, then that student does not receive a scholarship.",
      "If a student does not participate in extracurricular activities, then that student does not receive a scholarship.",
      "If there is at least one excellent student, then if a student is not excellent, that student does not receive a scholarship.",
      "There is at least one student who fully participates in conduct training.",
      "If x is enrolled in the university, then x is an excellent student.",
      "All students must complete the foundational courses.",
      "Every student must submit their research paper.",
      "There is at least one student participating in extracurricular activities.",
      "If a student does not participate in extracurricular activities, they will not develop leadership skills.",
      "If a student does not complete the foundational courses, they will not be eligible for graduation.",
      "If a student enrolls in the honors program, they gain access to advanced research materials.",
      "All students in the honors program must maintain a high GPA.",
      "If a student does not participate in extracurricular activities, they cannot join the student council.",
      "If failing to complete foundational courses leads to ineligibility for graduation, then students in the honors program must gain access to advanced materials.",
      "If students who do not complete foundational courses cannot graduate, then all students in the honors program must maintain a high GPA.",
      "If students who do not participate in extracurricular activities cannot develop leadership skills, then if students who do not complete foundational courses cannot graduate, all students in the honors program must maintain a high GPA.",
      "If (if students who do not participate in extracurricular activities lack leadership skills then if students who do not complete foundational courses cannot graduate, all students in the honors program must maintain a high GPA), then students in the honors program must gain access to advanced materials.",
      "If (if students who do not complete foundational courses cannot graduate then students in the honors program gain access to advanced materials), then all students must complete the foundational courses.",
      "If a student enrolls in the honors program, they must also complete foundational courses.",
      "All students must participate in group projects.",
      "If a student does not submit their research paper, they will not receive a passing grade."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, P(x))",
      "(¬P(x) → ¬U(x))",
      "(¬S(x) → ¬U(x))",
      "(Exists(x, P(x)) → (¬P(x) → ¬U(x)))",
      "Exists(x, R(x))",
      "(Q(x) → P(x))",
      "ForAll(x, CompletesFundamentalCourses(x))",
      "ForAll(x, SubmitsResearchPaper(x))",
      "Exists(x, S(x))",
      "(¬S(x) → ¬DevelopsLeadershipSkills(x))",
      "(¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x))",
      "(EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x))",
      "ForAll(x, EnrolledHonorsProgram(x) → HighGPA(x))",
      "(¬S(x) → ¬JoinsStudentCouncil(x))",
      "((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → (EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x)))",
      "((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → ForAll(x, EnrolledHonorsProgram(x) → HighGPA(x)))",
      "((¬S(x) → ¬DevelopsLeadershipSkills(x)) → ((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → ForAll(x, EnrolledHonorsProgram(x) → HighGPA(x))))",
      "(((¬S(x) → ¬DevelopsLeadershipSkills(x)) → ((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → ForAll(x, EnrolledHonorsProgram(x) → HighGPA(x)))) → (EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x)))",
      "(((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → (EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x))) → ForAll(x, CompletesFundamentalCourses(x)))",
      "(EnrolledHonorsProgram(x) → CompletesFundamentalCourses(x))",
      "ForAll(x, ParticipatesGroupProject(x))",
      "(¬SubmitsResearchPaper(x) → ¬ReceivesPassingGrade(x))"
    ],
    "choices": [
      "If a student receives a scholarship, they must be excellent.",
      "If a student does not participate in extracurricular activities, then they receive a scholarship.",
      "If a student does not submit their research paper, then they are excellent.",
      "If all enrolled students are excellent, then no student without excellence can receive a scholarship."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There is at least one school that has students.",
      "There is at least one school that has a principal.",
      "If there is at least one school that has a principal, then there is at least one school that has teachers.",
      "There is at least one school that has staff.",
      "Every school has a principal.",
      "Every school has staff.",
      "There is at least one school that has both students and teachers.",
      "If there is at least one school that has students, then there is at least one school that has staff.",
      "If a school does not have teachers, then it does not have students.",
      "If (if there is at least one school that has a principal, then there is at least one school that has teachers), then every school has a principal.",
      "If there is at least one school that has staff, then there is at least one school that has teachers.",
      "If (if there is at least one school that has students, then there is at least one school that has teachers), then there is at least one school that has a principal."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "Exists(x, T(x))",
      "Exists(x, P(x))",
      "(Exists(x, P(x)) → Exists(x, R(x)))",
      "Exists(x, Q(x))",
      "ForAll(x, P(x))",
      "ForAll(x, Q(x))",
      "Exists(x, (T(x) ∧ R(x)))",
      "(Exists(x, T(x)) → Exists(x, Q(x)))",
      "(¬R(x) → ¬T(x))",
      "((Exists(x, P(x)) → Exists(x, R(x))) → ForAll(x, P(x)))",
      "(Exists(x, Q(x)) → Exists(x, R(x)))",
      "((Exists(x, T(x)) → Exists(x, R(x))) → Exists(x, P(x)))"
    ],
    "choices": [
      "If a school does not have a principal, then it cannot have students.",
      "If a school has students, then it must also have staff and teachers.",
      "If a school has staff, then it must have a principal.",
      "Every school has both students and teachers."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There is at least one researcher.",
      "Everyone is a teacher.",
      "If everyone is a teacher, then there is at least one researcher.",
      "Everyone is a student.",
      "If someone is not a student, then they are not a teacher.",
      "There is at least one person who is both a teacher and a university staff member.",
      "If everyone is a university staff member, then there is at least one teacher.",
      "If there is at least one researcher, then everyone is a university staff member.",
      "If someone is not a university staff member, then they are not a researcher.",
      "If (if everyone is a student, then everyone is a teacher), then there is at least one researcher.",
      "If everyone is a teacher, then everyone is a student.",
      "If (if someone is not a student, then they are not a teacher), then everyone is a university staff member."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, R(x))",
      "ForAll(x, T(x))",
      "(ForAll(x, T(x)) → Exists(x, R(x)))",
      "ForAll(x, P(x))",
      "(¬P(x) → ¬T(x))",
      "Exists(x, (T(x) ∧ S(x)))",
      "(ForAll(x, S(x)) → Exists(x, T(x)))",
      "(Exists(x, R(x)) → ForAll(x, S(x)))",
      "(¬S(x) → ¬R(x))",
      "((ForAll(x, P(x)) → ForAll(x, T(x))) → Exists(x, R(x)))",
      "(ForAll(x, T(x)) → ForAll(x, P(x)))",
      "((¬P(x) → ¬T(x)) → ForAll(x, S(x)))"
    ],
    "choices": [
      "If everyone is a student, and if someone not being a student implies they are not a teacher, then everyone is a university staff member.",
      "If there is at least one researcher, then there is no university staff member.",
      "If everyone is a teacher, then there is no researcher.",
      "If someone is not a student, then they are a researcher."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Everyone in the university is a student.",
      "Every student fully participates in conduct training.",
      "If x fully participates in conduct training, then x is a student.",
      "If every student fully participates in conduct training, then if x fully participates in conduct training, x is a student.",
      "If x does not fully participate in social work, then x is not eligible for graduation.",
      "There is at least one student eligible for graduation.",
      "There is at least one student who fully participates in conduct training.",
      "If everyone in the university is a student, then there is at least one student eligible for graduation.",
      "If there is at least one student who fully participates in social work, then everyone is a student.",
      "If x does not fully participate in conduct training, then x is not eligible for graduation.",
      "If (if every student fully participates in conduct training, then everyone is a student), then there is at least one student who fully participates in social work.",
      "If everyone in the university is a student, then everyone fully participates in social work.",
      "If (if x does not fully participate in social work, then x is not eligible for graduation), then every student fully participates in conduct training."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, S(x))",
      "ForAll(x, R(x))",
      "(R(x) → S(x))",
      "(ForAll(x, R(x)) → (R(x) → S(x)))",
      "(¬T(x) → ¬P(x))",
      "Exists(x, P(x))",
      "Exists(x, (S(x) ∧ R(x)))",
      "(ForAll(x, S(x)) → Exists(x, P(x)))",
      "(Exists(x, T(x)) → ForAll(x, S(x)))",
      "(¬R(x) → ¬P(x))",
      "((ForAll(x, R(x)) → ForAll(x, S(x))) → Exists(x, T(x)))",
      "(ForAll(x, S(x)) → ForAll(x, T(x)))",
      "((¬T(x) → ¬P(x)) → ForAll(x, R(x)))"
    ],
    "choices": [
      "If someone does not fully participate in conduct training, then they are not eligible for graduation.",
      "If someone does not fully participate in social work, then everyone is a student.",
      "If everyone in the university is a student, then there is at least one student eligible for graduation.",
      "If there exists a student eligible for graduation, then no student fully participates in conduct training."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If x participates in social work, then x meets extracurricular requirements.",
      "If x meets academic requirements, then x is a student.",
      "If (if x meets academic requirements then x is a student), then (if x fully participates in conduct training then x is eligible for graduation).",
      "There is at least one student who participates in social work.",
      "Every student fully participates in conduct training."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "(T(x) → U(x))",
      "(P(x) → S(x))",
      "((P(x) → S(x)) → (R(x) → Q(x)))",
      "Exists(x, (S(x) ∧ T(x)))",
      "ForAll(x, (S(x) → R(x)))"
    ],
    "choices": [
      "If a student participates in social work, then they meet academic requirements.",
      "If someone participates in social work, then they meet extracurricular requirements.",
      "If someone meets academic requirements, then they are not a student.",
      "If a student meets academic requirements, they are not eligible for graduation."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student completes the fundamental courses.",
      "If a student submits their assignments on time, then they achieve good grades.",
      "If submitting assignments on time implies achieving good grades, then not attending review sessions implies not completing the fundamental courses.",
      "If a student does not attend review sessions, then they do not earn extra credit.",
      "If a student participates in study groups, then they achieve good grades."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, CompletesFundamentalCourses(x))",
      "(SubmitsAssignmentsOnTime(x) → AchievesGoodGrades(x))",
      "((SubmitsAssignmentsOnTime(x) → AchievesGoodGrades(x)) → (¬AttendsReviewSessions(x) → ¬CompletesFundamentalCourses(x)))",
      "(¬AttendsReviewSessions(x) → ¬EarnsExtraCredit(x))",
      "(ParticipatesInStudyGroups(x) → AchievesGoodGrades(x))"
    ],
    "choices": [
      "If a student does not attend review sessions, then they do not earn extra credit.",
      "If a student does not participate in study groups, they will fail.",
      "If a student submits assignments on time, they do not achieve good grades.",
      "If a student does not complete fundamental courses, then they did not attend review sessions."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student attends classes, then they receive extra credit.",
      "If a student achieves good grades, then they study regularly.",
      "If not receiving extra credit implies not submitting assignments on time, then if a student achieves good grades, they study regularly.",
      "If achieving good grades implies studying regularly, then not receiving extra credit implies that the student does not submit assignments on time.",
      "There exists at least one student who submits assignments on time.",
      "There exists at least one student who attends classes."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(AttendsClasses(x) → ReceivesExtraCredit(x))",
      "(AchievesGoodGrades(x) → StudiesRegularly(x))",
      "((¬ReceivesExtraCredit(x) → ¬SubmitsAssignmentsOnTime(x)) → (AchievesGoodGrades(x) → StudiesRegularly(x)))",
      "((AchievesGoodGrades(x) → StudiesRegularly(x)) → (¬ReceivesExtraCredit(x) → ¬SubmitsAssignmentsOnTime(x)))",
      "Exists(x, SubmitsAssignmentsOnTime(x))",
      "Exists(x, AttendsClasses(x))"
    ],
    "choices": [
      "If a student attends classes, then they receive extra credit.",
      "If a student receives extra credit, then they do not study regularly.",
      "If a student studies regularly, then they do not achieve good grades.",
      "If a student submits assignments on time, then they do not receive extra credit."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student attends classes.",
      "If a student does not study regularly, then they do not achieve high scores.",
      "If every student completes their assignments, then if a student does not study regularly, they do not achieve high scores.",
      "If not studying regularly implies not achieving high scores, then every student attends classes.",
      "If a student studies regularly, then they complete their assignments.",
      "If a student does not submit their homework on time, then they do not receive bonus points."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, AttendsClasses(x))",
      "(¬StudiesRegularly(x) → ¬AchievesHighScores(x))",
      "(ForAll(x, CompletesAssignments(x)) → (¬StudiesRegularly(x) → ¬AchievesHighScores(x)))",
      "((¬StudiesRegularly(x) → ¬AchievesHighScores(x)) → ForAll(x, AttendsClasses(x)))",
      "(StudiesRegularly(x) → CompletesAssignments(x))",
      "(¬SubmitsHomeworkOnTime(x) → ¬ReceivesBonusPoints(x))"
    ],
    "choices": [
      "If a student does not complete their assignments, then they do not achieve high scores.",
      "If a student submits homework on time, then they receive bonus points.",
      "If a student does not attend class, they will achieve high scores.",
      "If a student achieves high scores, then they did not study regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student studies regularly, then they achieve good grades.",
      "There exists at least one student who submits assignments on time.",
      "If at least one student submits assignments on time, then for any student, not receiving extra credit implies not submitting assignments on time.",
      "There exists at least one student who studies regularly.",
      "If a student submits assignments on time, then they receive extra credit."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(StudiesRegularly(x) → AchievesGoodGrades(x))",
      "Exists(x, SubmitsAssignmentsOnTime(x))",
      "(Exists(x, SubmitsAssignmentsOnTime(x)) → (¬ReceivesExtraCredit(x) → ¬SubmitsAssignmentsOnTime(x)))",
      "Exists(x, StudiesRegularly(x))",
      "(SubmitsAssignmentsOnTime(x) → ReceivesExtraCredit(x))"
    ],
    "choices": [
      "If a student submits assignments on time, then they receive extra credit.",
      "If a student receives extra credit, then they study regularly.",
      "If a student achieves good grades, then they do not receive extra credit.",
      "If a student does not submit assignments on time, then they study regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student receives extra credit.",
      "Every student attends classes.",
      "If a student does not submit assignments on time, then they do not attend classes.",
      "If not submitting assignments on time implies not attending classes, then every student attends classes.",
      "If a student attends classes, then they receive extra credit.",
      "If a student does not achieve good grades, then they do not submit assignments on time."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, ReceivesExtraCredit(x))",
      "ForAll(x, AttendsClasses(x))",
      "(¬SubmitsAssignmentsOnTime(x) → ¬AttendsClasses(x))",
      "((¬SubmitsAssignmentsOnTime(x) → ¬AttendsClasses(x)) → ForAll(x, AttendsClasses(x)))",
      "(AttendsClasses(x) → ReceivesExtraCredit(x))",
      "(¬AchievesGoodGrades(x) → ¬SubmitsAssignmentsOnTime(x))"
    ],
    "choices": [
      "If a student does not achieve good grades, then they do not receive extra credit.",
      "If a student receives extra credit, then they achieve good grades.",
      "If a student does not attend class, they receive extra credit.",
      "If a student submits assignments on time, then they do not receive extra credit."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not take advanced courses, then they do not participate in research.",
      "Every student takes advanced courses.",
      "If at least one student wins a scholarship, then every student takes advanced courses.",
      "If every student takes advanced courses, then at least one student wins a scholarship.",
      "Every student wins a scholarship.",
      "Every student participates in research."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(¬TakesAdvancedCourses(x) → ¬ParticipatesInResearch(x))",
      "ForAll(x, TakesAdvancedCourses(x))",
      "(Exists(x, WinsScholarship(x)) → ForAll(x, TakesAdvancedCourses(x)))",
      "(ForAll(x, TakesAdvancedCourses(x)) → Exists(x, WinsScholarship(x)))",
      "ForAll(x, WinsScholarship(x))",
      "ForAll(x, ParticipatesInResearch(x))"
    ],
    "choices": [
      "If every student participates in research, then every student takes advanced courses.",
      "If a student does not participate in research, then they do not win a scholarship.",
      "If a student takes advanced courses, then they participate in research.",
      "If every student wins a scholarship, then no student participates in research."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If x is a student, then x takes advanced courses.",
      "If x takes advanced courses, then x wins a scholarship.",
      "If all students take advanced courses, then everyone takes advanced courses.",
      "If x wins a scholarship, then x publishes research.",
      "At least one person publishes research."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(Student(x) → TakesAdvancedCourses(x))",
      "(TakesAdvancedCourses(x) → WinsScholarship(x))",
      "((Student(x) → TakesAdvancedCourses(x)) → ForAll(x, TakesAdvancedCourses(x)))",
      "(WinsScholarship(x) → PublishesResearch(x))",
      "Exists(x, PublishesResearch(x))"
    ],
    "choices": [
      "If a student wins a scholarship, then they publish research.",
      "If a student publishes research, then they take advanced courses.",
      "If a student is not a student, then they do not win a scholarship.",
      "If someone does not take advanced courses, then they cannot publish research."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student.",
      "Everyone takes courses.",
      "If x is a student, then x is a researcher.",
      "If x is not qualified, then x is not a researcher.",
      "If x is a professor, then x teaches."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Student(x))",
      "ForAll(x, TakesCourses(x))",
      "(Student(x) → Researcher(x))",
      "(¬Qualified(x) → ¬Researcher(x))",
      "(Professor(x) → Teaches(x))"
    ],
    "choices": [
      "If someone is a researcher, then they are qualified.",
      "If someone is a professor, then they are not qualified.",
      "If someone is qualified, then they are a student.",
      "If someone takes courses, then they are a professor."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Everyone takes courses.",
      "If x is not qualified, then x does not pass the exam.",
      "If 'not being a student implies not taking courses' is true, then everyone takes courses.",
      "Everyone understands the lectures.",
      "If x is not a student, then x does not understand the lectures."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, TakesCourses(x))",
      "(¬Qualified(x) → ¬Passes(x))",
      "((¬Student(x) → ¬TakesCourses(x)) → ForAll(x, TakesCourses(x)))",
      "ForAll(x, Understands(x))",
      "(¬Student(x) → ¬Understands(x))"
    ],
    "choices": [
      "If someone passes the exam, they are qualified.",
      "If someone takes courses, then they are qualified.",
      "If someone is not a student, they take courses.",
      "If someone understands the lecture, then they are not a student."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If x understands the lecture, then x passes the exam.",
      "There exists at least one student.",
      "If 'understanding the lecture implies taking the course' is true, then 'understanding the lecture implies passing the exam' is also true.",
      "If x is not registered for the course, then x does not take the course.",
      "If x is registered for the course, then x is a student."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (U(x) → P(x))",
      "∃x S(x)",
      "(∀x (U(x) → T(x)) → ∀x (U(x) → P(x)))",
      "∀x (¬R(x) → ¬T(x))",
      "∀x (R(x) → S(x))"
    ],
    "choices": [
      "If someone takes the course, then they are a student.",
      "If someone is a student, then they understand the lecture.",
      "If someone is not registered for the course, they pass the exam.",
      "If someone understands the lecture, then they are not a student."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "At least one person is registered for a course.",
      "Everyone understands the lecture.",
      "If at least one person is registered for a course, then everyone understands the lecture.",
      "If a person is qualified, then they are registered.",
      "If a person does not take a course, then they are not a student."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, R(x))",
      "ForAll(x, U(x))",
      "(Exists(x, R(x)) → ForAll(x, U(x)))",
      "(Q(x) → R(x))",
      "(¬T(x) → ¬S(x))"
    ],
    "choices": [
      "If someone is a student, then they are taking a course.",
      "If someone is taking a course, then they are a student.",
      "If someone is qualified, then they are a student.",
      "If someone is not a student, then they are not qualified."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person is not registered, then they are not qualified.",
      "If a person studies, then they are qualified.",
      "If a person trains, then they are qualified.",
      "If training makes someone qualified, then studying should also make them qualified.",
      "If a person is not registered, then they do not study.",
      "If a person is not qualified, then they are not registered."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(¬R(x) → ¬Q(x))",
      "(S(x) → Q(x))",
      "(T(x) → Q(x))",
      "((T(x) → Q(x)) → (S(x) → Q(x)))",
      "(¬R(x) → ¬S(x))",
      "(¬Q(x) → ¬R(x))"
    ],
    "choices": [
      "A person is qualified if and only if they are registered.",
      "A person is qualified only if they are not registered.",
      "A person is registered only if they do not study.",
      "A person is qualified only if they do not train."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person is an undergraduate, then they must be registered.",
      "Everyone is registered.",
      "If undergraduates are required to register, then everyone must register.",
      "If a person does not study, then they are not registered.",
      "Everyone is an undergraduate."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(U(x) → R(x))",
      "ForAll(x, R(x))",
      "((U(x) → R(x)) → ForAll(x, R(x)))",
      "(¬S(x) → ¬R(x))",
      "ForAll(x, U(x))"
    ],
    "choices": [
      "Everyone studies.",
      "Everyone is not registered.",
      "If someone is registered, then they are not an undergraduate.",
      "No one is qualified."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "At least one student has submitted their final project before the deadline.",
      "Every student enrolled in the course is required to complete at least 80% of the assignments.",
      "If a student attends all lectures, then they have a higher chance of passing the final exam.",
      "If a student does not participate in class discussions, then they are less likely to receive a high participation grade.",
      "Every teacher in the school has at least a master's degree in their subject area.",
      "At least one student has received a scholarship based on academic excellence.",
      "If all students complete their homework regularly, then the overall class performance improves.",
      "If a student fails two or more courses in a semester, then they are placed on academic probation.",
      "If a student attends a tutoring session, then they are more likely to improve their grades.",
      "If a student does not submit their research paper, then they automatically fail the course.",
      "If a teacher provides detailed feedback on assignments, then students are more likely to improve their writing skills.",
      "Every university student is required to complete an internship before graduation."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "Exists(x, SubmittedFinalProjectBeforeDeadline(x))",
      "ForAll(x, (EnrolledInCourse(x) → CompletedAtLeast80PercentAssignments(x)))",
      "(AttendsAllLectures(x) → HigherChancePassingFinalExam(x))",
      "(¬ParticipatesInClassDiscussions(x) → LessLikelyToReceiveHighParticipationGrade(x))",
      "ForAll(x, (Teacher(x) → HasMastersDegreeInSubject(x)))",
      "Exists(x, ReceivedScholarshipForAcademicExcellence(x))",
      "(ForAll(x, CompletesHomeworkRegularly(x)) → ImprovesOverallClassPerformance(x))",
      "(FailsTwoOrMoreCourses(x) → PlacedOnAcademicProbation(x))",
      "(AttendsTutoringSession(x) → MoreLikelyToImproveGrades(x))",
      "(¬SubmitsResearchPaper(x) → AutomaticallyFailsCourse(x))",
      "(ProvidesDetailedFeedback(x) → StudentsMoreLikelyToImproveWritingSkills(x))",
      "ForAll(x, (UniversityStudent(x) → RequiredToCompleteInternship(x)))"
    ],
    "choices": [
      "'If a student does not attend all lectures and does not participate in class discussions, they will fail the final exam and receive a low participation grade.'",
      "'If a student attends a tutoring session and completes at least 80% of the assignments, they are more likely to improve their grades and pass the course.'",
      "'Every teacher in the school has at least a doctoral degree in their subject area and provides detailed feedback on assignments.'",
      "'If a student does not complete at least 80% of the assignments and does not submit their research paper, they will fail the course and be placed on academic probation.'"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion is correct?"
    ],
    "premises-NL": [
      "All students must complete the foundational courses.",
      "Every student must submit their research paper.",
      "There is at least one student participating in extracurricular activities.",
      "If a student does not participate in extracurricular activities, they will not develop leadership skills.",
      "If a student does not complete the foundational courses, they will not be eligible for graduation.",
      "If a student enrolls in the honors program, they gain access to advanced research materials.",
      "All students in the honors program must maintain a high GPA.",
      "If a student does not participate in extracurricular activities, they cannot join the student council.",
      "If failing to complete foundational courses leads to ineligibility for graduation, then students in the honors program must maintain a high GPA.",
      "If students who do not complete foundational courses cannot graduate, then all students in the honors program must maintain a high GPA.",
      "If students who do not participate in extracurricular activities cannot develop leadership skills, then students who do not complete foundational courses will also not meet requirements.",
      "If students who do not participate in extracurricular activities lack leadership skills, then all students in the honors program must complete additional coursework.",
      "If students who do not complete foundational courses cannot graduate, then all students must complete the foundational courses.",
      "If a student enrolls in the honors program, they must also complete additional coursework.",
      "All students must participate in group projects.",
      "If a student does not submit their research paper, they will not receive a passing grade."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, CompletesFundamentalCourses(x))",
      "ForAll(x, SubmitsResearchPaper(x))",
      "Exists(x, ParticipatesExtracurricular(x))",
      "(¬ParticipatesExtracurricular(x) → ¬DevelopsLeadershipSkills(x))",
      "(¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x))",
      "(EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x))",
      "ForAll(x, EnrolledHonorsProgram(x))",
      "(¬ParticipatesExtracurricular(x) → ¬JoinsStudentCouncil(x))",
      "((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → (EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x)))",
      "((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → ForAll(x, EnrolledHonorsProgram(x)))",
      "((¬ParticipatesExtracurricular(x) → ¬DevelopsLeadershipSkills(x)) → ((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → ForAll(x, EnrolledHonorsProgram(x))))",
      "(((¬ParticipatesExtracurricular(x) → ¬DevelopsLeadershipSkills(x)) → ((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → ForAll(x, EnrolledHonorsProgram(x)))) → (EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x)))",
      "(((¬CompletesFundamentalCourses(x) → ¬EligibleGraduation(x)) → (EnrolledHonorsProgram(x) → HasAccessAdvancedMaterials(x))) → ForAll(x, CompletesFundamentalCourses(x)))",
      "(EnrolledHonorsProgram(x) → CompletesFundamentalCourses(x))",
      "ForAll(x, ParticipatesGroupProject(x))",
      "(¬SubmitsResearchPaper(x) → ¬ReceivesPassingGrade(x))"
    ],
    "choices": [
      "If students who do not complete foundational courses cannot graduate, then all students must complete the foundational courses.",
      "If failing to complete foundational courses leads to ineligibility for graduation, then all students must complete the foundational courses.",
      "If students who do not submit their research papers cannot receive a passing grade, then all students must participate in group projects.",
      "If a student does not participate in extracurricular activities, they will develop leadership skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students must complete their coursework.",
      "If a student participates in research projects, they gain academic recognition.",
      "If a student does not maintain a high GPA, they will not be eligible for scholarships.",
      "If a student attends academic conferences, they gain knowledge in their field.",
      "If a student does not receive academic recognition, they will not be selected for advanced research programs.",
      "If a student maintains a high GPA, they will be eligible for scholarships.",
      "All students must follow the university's academic regulations.",
      "If students who do not receive academic recognition are not selected for advanced research programs, then students who do not maintain a high GPA will not be eligible for scholarships.",
      "If attending academic conferences leads to gaining knowledge, then students who do not maintain a high GPA will not be eligible for scholarships.",
      "If maintaining a high GPA leads to eligibility for scholarships, then attending academic conferences leads to gaining knowledge.",
      "If all students must complete their coursework, then students who do not receive academic recognition will not be selected for advanced research programs.",
      "If attending academic conferences leads to gaining knowledge, then maintaining a high GPA leads to eligibility for scholarships.",
      "If a student follows the university's academic regulations, they will gain academic recognition.",
      "All students must participate in at least one extracurricular activity."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Coursework(x))",
      "(Research(x) → Recognition(x))",
      "(¬HighGPA(x) → ¬Scholarship(x))",
      "(Conference(x) → Knowledge(x))",
      "(¬Recognition(x) → ¬AdvancedResearch(x))",
      "(HighGPA(x) → Scholarship(x))",
      "ForAll(x, Regulations(x))",
      "((¬Recognition(x) → ¬AdvancedResearch(x)) → (¬HighGPA(x) → ¬Scholarship(x)))",
      "((Conference(x) → Knowledge(x)) → (¬HighGPA(x) → ¬Scholarship(x)))",
      "((HighGPA(x) → Scholarship(x)) → (Conference(x) → Knowledge(x)))",
      "(ForAll(x, Coursework(x)) → (¬Recognition(x) → ¬AdvancedResearch(x)))",
      "((Conference(x) → Knowledge(x)) → (HighGPA(x) → Scholarship(x)))",
      "(Regulations(x) → Recognition(x))",
      "ForAll(x, Extracurricular(x))"
    ],
    "choices": [
      "If attending academic conferences leads to gaining knowledge, then maintaining a high GPA leads to eligibility for scholarships.",
      "If attending academic conferences leads to gaining knowledge, then students who do not maintain a high GPA will not be eligible for scholarships.",
      "If attending academic conferences leads to gaining knowledge, then all students must complete their coursework.",
      "If attending academic conferences leads to gaining knowledge, then students who do not receive academic recognition will not be selected for advanced research programs."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement can be logically inferred?"
    ],
    "premises-NL": [
      "If a student does not attend classes, they will not pass the exams.",
      "If a student does not attend classes, they will not complete assignments.",
      "All students must complete assignments.",
      "If a student completes assignments, they will pass the exams.",
      "If a student conducts research, they will receive academic recognition.",
      "If a student completes assignments, they will conduct research.",
      "If a student passes the exams, they will conduct research.",
      "There exists at least one student who attends classes.",
      "There exists at least one student who passes the exams.",
      "If conducting research leads to academic recognition, then students who do not attend classes will not pass the exams.",
      "If students who do not attend classes do not pass exams, then completing assignments ensures passing exams.",
      "If at least one student passes the exams, then students who do not attend classes will not pass the exams.",
      "If all students must complete assignments, then students who do not attend classes will not pass the exams.",
      "All students attend classes.",
      "All students pass the exams.",
      "If a student attends classes, they will pass the exams.",
      "If a student passes the exams, they will complete assignments."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(¬AttendsClass(x) → ¬PassExam(x))",
      "(¬AttendsClass(x) → ¬CompleteAssignment(x))",
      "ForAll(x, CompleteAssignment(x))",
      "(CompleteAssignment(x) → PassExam(x))",
      "(ConductsResearch(x) → ReceivesRecognition(x))",
      "(CompleteAssignment(x) → ConductsResearch(x))",
      "(PassExam(x) → ConductsResearch(x))",
      "Exists(x, AttendsClass(x))",
      "Exists(x, PassExam(x))",
      "((ConductsResearch(x) → ReceivesRecognition(x)) → (¬AttendsClass(x) → ¬PassExam(x)))",
      "((¬AttendsClass(x) → ¬PassExam(x)) → (CompleteAssignment(x) → PassExam(x)))",
      "(Exists(x, PassExam(x)) → (¬AttendsClass(x) → ¬PassExam(x)))",
      "(ForAll(x, CompleteAssignment(x)) → (¬AttendsClass(x) → ¬PassExam(x)))",
      "ForAll(x, AttendsClass(x))",
      "ForAll(x, PassExam(x))",
      "(AttendsClass(x) → PassExam(x))",
      "(PassExam(x) → CompleteAssignment(x))"
    ],
    "choices": [
      "If all students must complete assignments and if a student does not attend classes, they will not complete assignments, then students who do not attend classes will not pass the exams.",
      "If all students must complete assignments and if a student does not attend classes, they will not complete assignments, then students who do not attend classes will pass the exams.",
      "If all students must complete assignments and if a student does not attend classes, they will not complete assignments, then all students will not pass the exams.",
      "If all students must complete assignments and if a student does not attend classes, they will not complete assignments, then some students will not pass the exams."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement can be logically inferred?"
    ],
    "premises-NL": [
      "If a student does not study, they will not pass the test.",
      "There exists at least one student who participates in extracurricular activities.",
      "All students are required to complete coursework.",
      "If a student does not submit assignments, they will not receive a grade.",
      "All students participate in extracurricular activities.",
      "There exists at least one student who submits assignments.",
      "All students pass the test.",
      "If a student passes the test, then they have studied.",
      "If all students complete coursework, then all students participate in extracurricular activities.",
      "If all students completing coursework implies that all students participate in extracurricular activities, then at least one student participates in extracurricular activities.",
      "If at least one student participates in extracurricular activities, then at least one student submits assignments.",
      "If at least one student participating in extracurricular activities implies that at least one student submits assignments, then the same implication holds itself.",
      "If a student not studying leads to failing the test, then a student not submitting assignments leads to not receiving a grade.",
      "If a student completes coursework, then they submit assignments.",
      "All students submit assignments.",
      "If a student does not participate in extracurricular activities, they will not pass the test."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(¬Studies(x) → ¬PassTest(x))",
      "Exists(x, Participates(x))",
      "ForAll(x, Coursework(x))",
      "(¬SubmitsAssignment(x) → ¬ReceivesGrade(x))",
      "ForAll(x, Participates(x))",
      "Exists(x, SubmitsAssignment(x))",
      "ForAll(x, PassTest(x))",
      "(PassTest(x) → Studies(x))",
      "(ForAll(x, Coursework(x)) → ForAll(x, Participates(x)))",
      "((ForAll(x, Coursework(x)) → ForAll(x, Participates(x))) → Exists(x, Participates(x)))",
      "(Exists(x, Participates(x)) → Exists(x, SubmitsAssignment(x)))",
      "((Exists(x, Participates(x)) → Exists(x, SubmitsAssignment(x))) → (Exists(x, Participates(x)) → Exists(x, SubmitsAssignment(x))))",
      "((¬Studies(x) → ¬PassTest(x)) → (¬SubmitsAssignment(x) → ¬ReceivesGrade(x)))",
      "(Coursework(x) → SubmitsAssignment(x))",
      "ForAll(x, SubmitsAssignment(x))",
      "(¬Participates(x) → ¬PassTest(x))"
    ],
    "choices": [
      "If all students pass the test and if a student passing the test implies they have studied, then all students have studied.",
      "If all students pass the test and if a student passing the test implies they have studied, then not all students have studied.",
      "If all students pass the test and if a student passing the test implies they have studied, then some students have not studied.",
      "If all students pass the test and if a student passing the test implies they have studied, then no students have studied."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which of the following statements can be inferred?"
    ],
    "premises-NL": [
      "All students are required to submit assignments.",
      "If a student qualifies for a scholarship, they must have good academic standing.",
      "If a student participates in extracurricular activities, then they qualify for a scholarship.",
      "If a student does not submit assignments, then they cannot participate in extracurricular activities.",
      "If a student participates in extracurricular activities, then they must maintain good academic performance.",
      "There exists at least one student who submits assignments.",
      "All students participate in extracurricular activities.",
      "If all students participate in extracurricular activities, then all students must submit assignments.",
      "If at least one student submits assignments, then this is always true.",
      "If the above statement is always true, then it remains valid for all cases.",
      "There exists at least one student who qualifies for a scholarship.",
      "If a student does not submit assignments, then they cannot maintain good academic performance."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, SubmitAssignment(x))",
      "(QualifiesScholarship(x) → GoodAcademicStanding(x))",
      "(Extracurricular(x) → QualifiesScholarship(x))",
      "(¬SubmitAssignment(x) → ¬Extracurricular(x))",
      "(Extracurricular(x) → GoodAcademicPerformance(x))",
      "Exists(x, SubmitAssignment(x))",
      "ForAll(x, Extracurricular(x))",
      "(ForAll(x, Extracurricular(x)) → ForAll(x, SubmitAssignment(x)))",
      "(Exists(x, SubmitAssignment(x)) → Exists(x, SubmitAssignment(x)))",
      "((Exists(x, SubmitAssignment(x)) → Exists(x, SubmitAssignment(x))) → (Exists(x, SubmitAssignment(x)) → Exists(x, SubmitAssignment(x))))",
      "Exists(x, QualifiesScholarship(x))",
      "(¬SubmitAssignment(x) → ¬GoodAcademicPerformance(x))"
    ],
    "choices": [
      "If there exists at least one student who submits assignments and if at least one student submits assignments, then this is always true, then the statement 'If at least one student submits assignments, then this is always true' holds.",
      "If there exists at least one student who submits assignments and if at least one student submits assignments, then this is always true, then the statement 'If at least one student submits assignments, then this is always true' does not hold.",
      "If there exists at least one student who submits assignments and if at least one student submits assignments, then this is always true, then the statement 'If at least one student submits assignments, then this is always true' holds in some cases but not all.",
      "If there exists at least one student who submits assignments and if at least one student submits assignments, then this is always true, then the statement 'If at least one student submits assignments, then this is always true' is both true and false at the same time."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which of the following statements can be inferred?"
    ],
    "premises-NL": [
      "All students must complete their coursework.",
      "If a student is not enrolled in a course, they cannot receive a grade.",
      "If a student qualifies for an advanced placement class, they must have high academic performance.",
      "If a student is part of the honor program, then they qualify for an advanced placement class.",
      "At least one student has completed their coursework.",
      "At least one student has received a grade.",
      "If a student has completed their coursework, then they are part of the honor program.",
      "If a student qualifies for an advanced placement class, then they must have completed their coursework.",
      "If all students qualifying for advanced placement must have high academic performance, then they must also have completed their coursework.",
      "If completing coursework ensures that students are part of the honor program, then at least one student must have completed their coursework.",
      "If all students qualifying for advanced placement must have high academic performance, and that leads to completing coursework, then all students who have completed coursework must be in the honor program.",
      "If a student qualifies for an advanced placement class, then they will receive a grade.",
      "If a student has high academic performance, then they will receive a grade.",
      "All students have high academic performance."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, CourseworkCompleted(x))",
      "(¬Enrolled(x) → ¬GradeReceived(x))",
      "(AdvancedPlacement(x) → HighPerformance(x))",
      "(HonorProgram(x) → AdvancedPlacement(x))",
      "Exists(x, CourseworkCompleted(x))",
      "Exists(x, GradeReceived(x))",
      "(CourseworkCompleted(x) → HonorProgram(x))",
      "(AdvancedPlacement(x) → CourseworkCompleted(x))",
      "((AdvancedPlacement(x) → HighPerformance(x)) → (AdvancedPlacement(x) → CourseworkCompleted(x)))",
      "((CourseworkCompleted(x) → HonorProgram(x)) → Exists(x, CourseworkCompleted(x)))",
      "(((AdvancedPlacement(x) → HighPerformance(x)) → (AdvancedPlacement(x) → CourseworkCompleted(x))) → (CourseworkCompleted(x) → HonorProgram(x)))",
      "(AdvancedPlacement(x) → GradeReceived(x))",
      "(HighPerformance(x) → GradeReceived(x))",
      "ForAll(x, HighPerformance(x))"
    ],
    "choices": [
      "If all students qualifying for advanced placement must have high academic performance and if this ensures coursework completion, then students who qualify for advanced placement must have completed their coursework.",
      "If all students qualifying for advanced placement must have high academic performance and if this ensures coursework completion, then students who qualify for advanced placement may not have completed their coursework.",
      "If all students qualifying for advanced placement must have high academic performance and if this ensures coursework completion, then some students who qualify for advanced placement must have completed their coursework.",
      "If all students qualifying for advanced placement must have high academic performance and if this ensures coursework completion, then students who qualify for advanced placement have both completed and not completed their coursework."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students must comply with the university's rules and regulations.",
      "Students who do not comply with the rules will be subject to disciplinary action.",
      "All students must complete the mandatory courses in the curriculum.",
      "Students who do not complete the mandatory courses will not be eligible for graduation.",
      "All lecturers must be familiar with the university's admission regulations.",
      "Lecturers who do not meet the requirements regarding admission regulations must take additional assessments.",
      "Students may extend their study duration up to twice the standard program duration.",
      "Students who exceed the maximum study duration but have not met graduation requirements can complete the remaining conditions within 3 years.",
      "Tuition fees are determined based on the academic field and may change annually.",
      "Students must fulfill their tuition payment obligations to continue their studies."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) → ComplyWithRules(x))",
      "ForAll(x, ¬ComplyWithRules(x) → DisciplinaryAction(x))",
      "ForAll(x, Student(x) → CompleteMandatoryCourses(x))",
      "ForAll(x, ¬CompleteMandatoryCourses(x) → ¬EligibleForGraduation(x))",
      "ForAll(x, Lecturer(x) → UnderstandAdmissionRegulations(x))",
      "ForAll(x, ¬UnderstandAdmissionRegulations(x) → AdditionalTesting(x))",
      "ForAll(x, Student(x) → MaxStudyDuration(x, 2 * StandardDuration))",
      "ForAll(x, (StudyDurationExceeded(x) ∧ ¬EligibleForGraduation(x)) → CompleteRequirementsWithin3Years(x))",
      "ForAll(x, TuitionFee(x) → DeterminedByFieldAndYear(x))",
      "ForAll(x, Student(x) → CompleteTuitionPayment(x))"
    ],
    "choices": [
      "If all students must comply with the university's rules and regulations and students who do not comply with the rules will be subject to disciplinary action, then all students must complete the mandatory courses in the curriculum.",
      "If all students must comply with the university's rules and regulations and students who do not comply with the rules will be subject to disciplinary action, then all students do not need to complete the mandatory courses in the curriculum.",
      "If all students must comply with the university's rules and regulations and students who do not comply with the rules will be subject to disciplinary action, then some students must complete the mandatory courses in the curriculum.",
      "If all students must comply with the university's rules and regulations and students who do not comply with the rules will be subject to disciplinary action, then no students must complete the mandatory courses in the curriculum."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who has received a scholarship.",
      "All students must follow the university’s academic policies.",
      "There exists at least one student who follows the university’s academic policies.",
      "If a course is not accredited, it cannot be counted towards graduation requirements.",
      "There exists at least one student who has passed all required courses.",
      "If a student meets the academic excellence criteria, they are eligible for scholarships.",
      "If a student does not follow the university’s academic policies, they cannot receive a scholarship.",
      "All courses must meet the accreditation standards.",
      "If at least one student has passed all required courses, then at least one student is eligible for a scholarship.",
      "If all students follow the university’s academic policies, then at least one student follows them.",
      "If meeting academic excellence criteria guarantees eligibility for scholarships, then at least one student has passed all required courses.",
      "If at least one student has received a scholarship, then failing to follow academic policies results in no scholarship.",
      "If failing to follow academic policies prevents students from receiving scholarships, then at least one student follows them.",
      "If a student does not follow the university’s academic policies, they cannot take accredited courses.",
      "There exists at least one accredited course.",
      "If a student meets the academic excellence criteria, they have passed all required courses."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Scholarship(x))",
      "ForAll(x, Policy(x))",
      "Exists(x, Policy(x))",
      "(¬Accredited(x) → ¬GraduationCredit(x))",
      "Exists(x, Passed(x))",
      "(Excellence(x) → Scholarship(x))",
      "(¬Policy(x) → ¬Scholarship(x))",
      "ForAll(x, Accredited(x))",
      "(Exists(x, Passed(x)) → Exists(x, Scholarship(x)))",
      "(ForAll(x, Policy(x)) → Exists(x, Policy(x)))",
      "((Excellence(x) → Scholarship(x)) → Exists(x, Passed(x)))",
      "(Exists(x, Scholarship(x)) → (¬Policy(x) → ¬Scholarship(x)))",
      "((¬Policy(x) → ¬Scholarship(x)) → Exists(x, Policy(x)))",
      "(¬Policy(x) → ¬Accredited(x))",
      "Exists(x, Accredited(x))",
      "(Excellence(x) → Passed(x))"
    ],
    "choices": [
      "If at least one student has received a scholarship and if failing to follow academic policies results in no scholarship, then failing to follow academic policies prevents students from receiving scholarships.",
      "If at least one student has received a scholarship and if failing to follow academic policies results in no scholarship, then failing to follow academic policies does not prevent students from receiving scholarships.",
      "If at least one student has received a scholarship and if failing to follow academic policies results in no scholarship, then failing to follow academic policies sometimes prevents students from receiving scholarships.",
      "If at least one student has received a scholarship and if failing to follow academic policies results in no scholarship, then failing to follow academic policies prevents students from receiving scholarships in some cases but not all."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students must comply with the university's examination regulations.",
      "If a student violates the examination regulations, they will be subject to disciplinary action.",
      "At least one student has been found violating the examination regulations.",
      "At least one student has achieved outstanding academic performance.",
      "If a student achieves outstanding academic performance, they will receive a scholarship.",
      "If a student is subject to disciplinary action, they are not eligible to receive a scholarship.",
      "At least one student complies with the examination regulations.",
      "If at least one student achieves outstanding academic performance, then at least one student receives a scholarship.",
      "If at least one student is found violating the examination regulations, the university will take disciplinary action.",
      "If all students comply with the examination regulations, then no student will be subject to disciplinary action.",
      "If having at least one student achieve outstanding academic performance leads to at least one student receiving a scholarship, then all students must comply with the examination regulations.",
      "If at least one student is subject to disciplinary action, then at least one student has violated the examination regulations.",
      "All students have the opportunity to achieve outstanding academic performance.",
      "If a student achieves outstanding academic performance, they are eligible to participate in an international exchange program."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) → ExamCompliant(x))",
      "ForAll(x, ViolateExam(x) → DisciplinaryAction(x))",
      "Exists(x, ViolateExam(x))",
      "Exists(x, OutstandingPerformance(x))",
      "ForAll(x, OutstandingPerformance(x) → Scholarship(x))",
      "ForAll(x, DisciplinaryAction(x) → ¬Scholarship(x))",
      "Exists(x, ExamCompliant(x))",
      "(Exists(x, OutstandingPerformance(x)) → Exists(x, Scholarship(x)))",
      "(Exists(x, ViolateExam(x)) → Exists(x, DisciplinaryAction(x)))",
      "(ForAll(x, ExamCompliant(x)) → ¬Exists(x, DisciplinaryAction(x)))",
      "((Exists(x, OutstandingPerformance(x)) → Exists(x, Scholarship(x))) → ForAll(x, ExamCompliant(x)))",
      "(Exists(x, DisciplinaryAction(x)) → Exists(x, ViolateExam(x)))",
      "ForAll(x, Student(x) → CanAchievePerformance(x))",
      "ForAll(x, OutstandingPerformance(x) → ExchangeEligible(x))"
    ],
    "choices": [
      "If at least one student has achieved outstanding academic performance and if having at least one student achieve outstanding academic performance leads to at least one student receiving a scholarship, then all students must comply with the examination regulations.",
      "If at least one student has achieved outstanding academic performance and if having at least one student achieve outstanding academic performance leads to at least one student receiving a scholarship, then not all students must comply with the examination regulations.",
      "If at least one student has achieved outstanding academic performance and if having at least one student achieve outstanding academic performance leads to at least one student receiving a scholarship, then some students must comply with the examination regulations.",
      "If at least one student has achieved outstanding academic performance and if having at least one student achieve outstanding academic performance leads to at least one student receiving a scholarship, then no students must comply with the examination regulations."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which of the following conclusions is correct?"
    ],
    "premises-NL": [
      "All students must enroll in at least one core subject.",
      "If a student attends all lectures, they will have a higher chance of passing the course.",
      "If a student does not attend all lectures, they might struggle to understand key concepts.",
      "If a student submits all assignments on time, they are likely to achieve a good grade.",
      "If a student does not submit assignments, they will not receive a passing grade.",
      "There exists at least one student who participates in an academic competition.",
      "If a student joins the research group, they gain access to laboratory resources.",
      "If a student joins the research group, they must contribute to at least one published paper.",
      "If failing to submit assignments results in failing the course, then all students must complete their coursework.",
      "If participating in academic competitions leads to skill improvement, then students with strong skills are more likely to receive scholarships.",
      "If at least one student participates in an academic competition, then engaging in research ensures deeper knowledge.",
      "If joining the research group requires contributing to a published paper, then at least one student must be involved in research.",
      "If a student does not participate in academic competitions, they might not gain additional learning experiences.",
      "If a student enrolls in core subjects, they build a strong academic foundation.",
      "If a student attends all lectures and submits assignments on time, they will pass the course.",
      "If a student joins the research group, they must contribute to at least one published paper and actively participate in group discussions. Additionally, if they participate in academic competitions, they can receive academic recognition."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, EnrollsCoreSubject(x))",
      "(AttendsLectures(x) → HigherChancePass(x))",
      "(¬AttendsLectures(x) → StrugglesUnderstanding(x))",
      "(SubmitsAssignments(x) → GoodGrade(x))",
      "(¬SubmitsAssignments(x) → ¬PassesCourse(x))",
      "Exists(x, ParticipatesAcademicCompetition(x))",
      "(JoinsResearchGroup(x) → HasLabAccess(x))",
      "((JoinsResearchGroup(x) → ContributesPublishedPaper(x)))",
      "((¬SubmitsAssignments(x) → ¬PassesCourse(x)) → ForAll(x, CompletesCoursework(x)))",
      "((ParticipatesAcademicCompetition(x) → ImprovesSkills(x)) → (StrongSkills(x) → ReceivesScholarship(x)))",
      "(Exists(x, ParticipatesAcademicCompetition(x)) → (EngagesResearch(x) → GainsDeeperKnowledge(x)))",
      "((JoinsResearchGroup(x) → ContributesPublishedPaper(x)) → Exists(x, EngagesResearch(x)))",
      "(¬ParticipatesAcademicCompetition(x) → ¬GainsAdditionalLearning(x))",
      "(EnrollsCoreSubject(x) → BuildsStrongFoundation(x))",
      "((AttendsLectures(x) ∧ SubmitsAssignments(x)) → PassesCourse(x))",
      "((JoinsResearchGroup(x) → (ContributesPublishedPaper(x) ∧ ParticipatesDiscussions(x))) ∧ (ParticipatesAcademicCompetition(x) → ReceivesAcademicRecognition(x)))"
    ],
    "choices": [
      "If at least one student participates in an academic competition and if joining the research group requires contributing to a published paper, then at least one student must be involved in research, and this leads to contributing to at least one published paper.",
      "If at least one student participates in an academic competition and if joining the research group requires contributing to a published paper, then at least one student must be involved in research, and this leads to not contributing to at least one published paper.",
      "If at least one student participates in an academic competition and if joining the research group requires contributing to a published paper, then at least one student must be involved in research, and this leads to sometimes contributing to at least one published paper.",
      "If at least one student participates in an academic competition and if joining the research group requires contributing to a published paper, then at least one student must be involved in research, and this leads to contributing to at least one published paper in some cases but not all."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which of the following statements is correct?"
    ],
    "premises-NL": [
      "Every student with a GPA of 4.0 is eligible for a full scholarship.",
      "If a student receives a full scholarship, they do not have to pay tuition fees.",
      "A student who maintains a GPA of 4.0 for all semesters will graduate with honors.",
      "There exists at least one student who has received a full scholarship.",
      "If a student participates in research, they have a higher chance of receiving a scholarship.",
      "Students who engage in extracurricular activities have a better chance of getting scholarships.",
      "At least one student who received a full scholarship has participated in research.",
      "If maintaining a GPA of 4.0 leads to graduating with honors, then every honors graduate must have a high GPA.",
      "If research participation improves scholarship chances, then at least one research student has a scholarship.",
      "If all students with a GPA of 4.0 are eligible for scholarships, then top students are financially supported.",
      "If a student has received a full scholarship, they must have demonstrated academic excellence.",
      "If a student does not maintain a high GPA, they might lose their scholarship.",
      "There exists at least one student who has lost a scholarship due to a GPA drop."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, GPA4.0(x) → EligibleForFullScholarship(x))",
      "ForAll(x, ReceivesFullScholarship(x) → ¬PaysTuition(x))",
      "ForAll(x, MaintainsGPA4.0(x) → GraduatesWithHonors(x))",
      "Exists(x, ReceivesFullScholarship(x))",
      "ForAll(x, ParticipatesInResearch(x) → HigherChanceOfScholarship(x))",
      "ForAll(x, EngagesInExtracurriculars(x) → BetterChanceOfScholarship(x))",
      "Exists(x, ReceivesFullScholarship(x) ∧ ParticipatesInResearch(x))",
      "(ForAll(x, MaintainsGPA4.0(x) → GraduatesWithHonors(x)) → ForAll(x, GraduatesWithHonors(x) → HighGPA(x)))",
      "(ForAll(x, ParticipatesInResearch(x) → HigherChanceOfScholarship(x)) → Exists(x, ResearchStudent(x) ∧ ReceivesScholarship(x)))",
      "(ForAll(x, GPA4.0(x) → EligibleForFullScholarship(x)) → ForAll(x, TopStudent(x) → FinanciallySupported(x)))",
      "ForAll(x, ReceivesFullScholarship(x) → DemonstratedAcademicExcellence(x))",
      "ForAll(x, ¬MaintainsHighGPA(x) → MightLoseScholarship(x))",
      "Exists(x, LostScholarship(x) ∧ ¬MaintainsHighGPA(x))"
    ],
    "choices": [
      "If at least one student who received a full scholarship has participated in research and if research participation improves scholarship chances, then at least one research student has a scholarship.",
      "If at least one student who received a full scholarship has participated in research and if research participation improves scholarship chances, then at least one research student does not have a scholarship.",
      "If at least one student who received a full scholarship has participated in research and if research participation improves scholarship chances, then some research students have scholarships while others do not.",
      "If at least one student who received a full scholarship has participated in research and if research participation improves scholarship chances, then at least one research student has a scholarship in some cases but not all."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the rules above, which of the following statements is true?"
    ],
    "premises-NL": [
      "If a student does not follow the school rules, the student will be disciplined.",
      "Every student must arrive at school on time.",
      "If a student violates the school rules, the student will be banned from extracurricular activities.",
      "There exists at least one student who has been disciplined for violating the school rules.",
      "If a student does not follow the dress code, the student will be asked to change their clothes.",
      "Every student must maintain cleanliness in the classroom and around the school premises.",
      "If a student does not complete the assigned tasks in class, the student will not be allowed to participate in after-school activities.",
      "If a student violates the mobile phone policy in class, the student's phone will be confiscated.",
      "If a student does not follow the attendance policy, the student will lose participation points.",
      "If a student violates traffic safety rules, the student will be fined according to the school's regulations."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(¬FollowSchoolRules(x) → Discipline(x))",
      "ForAll(x, OnTime(x))",
      "(ViolateSchoolRules(x) → BanExtracurricular(x))",
      "Exists(x, Discipline(x))",
      "(¬FollowDressCode(x) → AskToChangeClothes(x))",
      "ForAll(x, MaintainCleanliness(x))",
      "(¬CompleteTasks(x) → NoAfterSchoolActivities(x))",
      "(ViolateMobilePhonePolicy(x) → ConfiscatePhone(x))",
      "(¬FollowAttendancePolicy(x) → LoseParticipationPoints(x))",
      "(ViolateTrafficSafety(x) → FineAccordingToRules(x))"
    ],
    "choices": [
      "If a student does not follow the school rules and if a student violates the school rules, they will be disciplined and banned from extracurricular activities, and if a student does not follow the dress code, they will be asked to change their clothes.",
      "If a student does not follow the school rules and if a student violates the school rules, they will not be disciplined and banned from extracurricular activities, and if a student does not follow the dress code, they will be asked to change their clothes.",
      "If a student does not follow the school rules and if a student violates the school rules, they will be disciplined and banned from extracurricular activities, and if a student does not follow the dress code, they will not be asked to change their clothes.",
      "If a student does not follow the school rules and if a student violates the school rules, they will be disciplined and banned from extracurricular activities, and if a student does not follow the dress code, they will be asked to change their clothes in some cases but not all."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises above, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student participates in class according to the class schedule.",
      "If a student completes assignments, then the student will receive points.",
      "If a student does not complete assignments, the student will lose points.",
      "There exists at least one student who participates in extracurricular activities.",
      "There exists at least one student who has completed their final project.",
      "If a student participates in extracurricular activities, then the student will gain additional points.",
      "There exists at least one student who has failed to complete their assignments.",
      "If a student violates the school policy on mobile phones, the student will receive a warning.",
      "If a student has completed their assignments, then the student is eligible for extra participation points.",
      "If a student does not follow the attendance policy, then the student will lose participation points.",
      "If a student violates the school rules on mobile phones, then the student will be penalized.",
      "Every student must follow the attendance policy.",
      "Every student must participate in group projects."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, ParticipateInClass(x))",
      "(CompleteAssignments(x) → ReceivePoints(x))",
      "(¬CompleteAssignments(x) → LosePoints(x))",
      "Exists(x, ParticipateInExtracurricular(x))",
      "Exists(x, CompletedFinalProject(x))",
      "(ParticipateInExtracurricular(x) → GainPoints(x))",
      "Exists(x, FailedToCompleteAssignments(x))",
      "(ViolateMobilePolicy(x) → Warning(x))",
      "(CompletedAssignments(x) → EligibleForExtraPoints(x))",
      "(¬FollowAttendancePolicy(x) → LoseParticipationPoints(x))",
      "(ViolateMobilePolicy(x) → Penalized(x))",
      "ForAll(x, FollowAttendancePolicy(x))",
      "ForAll(x, ParticipateInGroupProjects(x))"
    ],
    "choices": [
      "'If a student participates in extracurricular activities and completes assignments, they will receive points and gain additional points.'",
      "'If a student does not complete assignments and does not follow the attendance policy, they will lose points and lose participation points.'",
      "'If a student participates in extracurricular activities and violates the school policy on mobile phones, they will gain additional points and receive a warning.'",
      "'If a student participates in group projects and completes their final project, they will be penalized and eligible for extra participation points.'"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who has completed their assignments.",
      "There exists at least one student who participates in extracurricular activities.",
      "If a student follows the study plan, then they will pass the exam.",
      "Every student follows the attendance policy.",
      "There exists at least one student who has achieved high marks.",
      "If a student does not complete assignments, they will not pass the exam.",
      "If a student follows the attendance policy, then they will be eligible for participation points.",
      "If a student has completed assignments, then they will be eligible for extra credit.",
      "If a student follows the attendance policy, then they are eligible for participation points.",
      "If a student participates in extracurricular activities, then they will gain extra credit.",
      "If a student does not follow the attendance policy, then they will lose participation points.",
      "Every student participates in group projects."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "Exists(x, CompletedAssignments(x))",
      "Exists(x, ParticipateInExtracurricular(x))",
      "(FollowStudyPlan(x) → PassExam(x))",
      "ForAll(x, FollowAttendancePolicy(x))",
      "Exists(x, AchievedHighMarks(x))",
      "(¬CompleteAssignments(x) → ¬PassExam(x))",
      "(FollowAttendancePolicy(x) → EligibleForParticipationPoints(x))",
      "(CompletedAssignments(x) → EligibleForExtraCredit(x))",
      "(FollowAttendancePolicy(x) → EligibleForParticipationPoints(x))",
      "(ParticipateInExtracurricular(x) → GainExtraCredit(x))",
      "(¬FollowAttendancePolicy(x) → LoseParticipationPoints(x))",
      "ForAll(x, ParticipateInGroupProjects(x))"
    ],
    "choices": [
      "'If a student participates in extracurricular activities and follows the attendance policy, they will gain extra credit and be eligible for participation points.'",
      "'If a student does not complete assignments and does not follow the study plan, they will not pass the exam and not be eligible for extra credit.'",
      "'If a student participates in group projects and does not follow the attendance policy, they will gain extra credit and lose participation points.'",
      "'If a student follows the study plan and completes assignments, they will pass the exam and not be eligible for extra credit.'"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is enrolled in a specific course, then they have access to university resources.",
      "Every student is required to complete a research project.",
      "Every student must participate in extracurricular activities.",
      "If all students participate in extracurricular activities, then enrolling in a specific course grants access to university resources.",
      "If all students must complete a research project, then participation in extracurricular activities ensures that enrolling in a specific course grants access to university resources.",
      "If a student is not enrolled in the course, then they cannot receive a particular scholarship.",
      "Every student is required to complete a qualifying exam."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "(Enrolled(x) → Resources(x))",
      "ForAll(x, ResearchProject(x))",
      "ForAll(x, Extracurricular(x))",
      "(Enrolled(x) → Resources(x))",
      "(Enrolled(x) → Resources(x))",
      "(¬Enrolled(x) → ¬Scholarship(x))",
      "ForAll(x, QualifyingExam(x))"
    ],
    "choices": [
      "((ForAll(x, ResearchProject(x)) → (ForAll(x, Extracurricular(x)) → (Enrolled(x) → Resources(x)))) ∧ ¬(ForAll(x, ResearchProject(x)) → (ForAll(x, Extracurricular(x)) → (Enrolled(x) → Resources(x))))",
      "((ForAll(x, ResearchProject(x)) → (ForAll(x, Extracurricular(x)) → (Enrolled(x) → Resources(x)))) → (ForAll(x, ResearchProject(x)) → (ForAll(x, Extracurricular(x)) → (Enrolled(x) → Resources(x))))",
      "¬(ForAll(x, ResearchProject(x)) → (ForAll(x, Extracurricular(x)) → (Enrolled(x) → Resources(x))))",
      "(ForAll(x, ResearchProject(x)) → (ForAll(x, Extracurricular(x)) → (Enrolled(x) → Resources(x))))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who is enrolled in a specific course.",
      "Every student must complete a qualifying exam.",
      "Every student is enrolled in the specific course.",
      "If every student must complete a qualifying exam, then every student is enrolled in the specific course.",
      "If at least one student is enrolled in the course, then all students must be enrolled in the course.",
      "There exists at least one student who has received a scholarship.",
      "Every student has received a scholarship."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Enrolled(x))",
      "ForAll(x, QualifyingExam(x))",
      "ForAll(x, Enrolled(x))",
      "(ForAll(x, QualifyingExam(x)) → ForAll(x, Enrolled(x)))",
      "(Exists(x, Enrolled(x)) → ForAll(x, Enrolled(x)))",
      "Exists(x, Scholarship(x))",
      "ForAll(x, Scholarship(x))"
    ],
    "choices": [
      "(Exists(x, Enrolled(x)) → ForAll(x, Enrolled(x)))",
      "((Exists(x, Enrolled(x)) → ForAll(x, Enrolled(x))) ∧ ¬(Exists(x, Enrolled(x)) → ForAll(x, Enrolled(x))))",
      "¬(Exists(x, Enrolled(x)) → ForAll(x, Enrolled(x)))",
      "((Exists(x, Enrolled(x)) → ForAll(x, Enrolled(x))) → (Exists(x, Enrolled(x)) → ForAll(x, Enrolled(x))))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student attends class regularly, then they complete their assignments.",
      "If a student is not motivated, then they do not participate in discussions.",
      "All students attend class regularly.",
      "If all students attend class regularly, then attending class regularly implies completing assignments.",
      "If the lack of motivation leads to not participating in discussions, then all students attending class regularly ensures that attending class implies completing assignments.",
      "If a student does not participate in discussions, then they are not motivated.",
      "If a student does not study, then they are not motivated."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (AttendsClass(x) → CompletesAssignments(x))",
      "∀x (¬Motivated(x) → ¬Participates(x))",
      "∀x (AttendsClass(x))",
      "(∀x (AttendsClass(x)) → (AttendsClass(x) → CompletesAssignments(x)))",
      "((¬Motivated(x) → ¬Participates(x)) → (∀x (AttendsClass(x)) → (AttendsClass(x) → CompletesAssignments(x))))",
      "∀x (¬Participates(x) → ¬Motivated(x))",
      "∀x (¬Studies(x) → ¬Motivated(x))"
    ],
    "choices": [
      "If the lack of motivation leads to not participating in discussions, then all students attending class regularly ensures that attending class implies completing assignments.",
      "It is false that if the lack of motivation leads to not participating in discussions, then all students attending class regularly ensures that attending class implies completing assignments.",
      "Both statement A and its negation are true at the same time, leading to a contradiction.",
      "If the lack of motivation leads to not participating in discussions, then all students attending class regularly ensures that attending class implies completing assignments, and this always holds."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises above, which of the following statements can be logically concluded?"
    ],
    "premises-NL": [
      "If a person is a researcher, then they are a professional.",
      "If a person is a professional, then they are a scholar.",
      "All individuals are university members.",
      "If being a professional implies being a scholar, then all individuals are university members.",
      "If all individuals are university members, then being a researcher implies being a professional.",
      "If a person is a university member, then they are a professional.",
      "There exists at least one university member."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "R(x) → P(x)",
      "P(x) → S(x)",
      "∀x U(x)",
      "(P(x) → S(x)) → ∀x U(x)",
      "(∀x U(x)) → (R(x) → P(x))",
      "U(x) → P(x)",
      "∃x U(x)"
    ],
    "choices": [
      "((∀x U(x) → (R(x) → P(x))) ∧ ¬(∀x U(x) → (R(x) → P(x))))",
      "¬(∀x U(x) → (R(x) → P(x)))",
      "(∀x U(x) → (R(x) → P(x)))",
      "((∀x U(x) → (R(x) → P(x))) → (∀x U(x) → (R(x) → P(x))))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not complete their homework, they will not pass the course.",
      "All students complete their homework.",
      "All students attend class regularly.",
      "If all students complete their homework, then all students complete their homework (tautology).",
      "If not completing homework leads to failing the course, then all students attend class regularly.",
      "If a student does not join a study group, they will not complete their homework.",
      "There exists at least one student who is reviewing for the exam."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬DoesHomework(x) → ¬Passes(x))",
      "∀x (DoesHomework(x))",
      "∀x (AttendsClass(x))",
      "(∀x (DoesHomework(x)) → ∀x (DoesHomework(x)))",
      "((¬DoesHomework(x) → ¬Passes(x)) → ∀x (AttendsClass(x)))",
      "∀x (¬JoinsStudyGroup(x) → ¬DoesHomework(x))",
      "∃x (ReviewsForExam(x))"
    ],
    "choices": [
      "If not doing homework leads to failing the course, then all students attend class regularly.",
      "It is false that if not doing homework leads to failing the course, then all students attend class regularly.",
      "The statement 'If not doing homework leads to failing the course, then all students attend class regularly' is both true and false simultaneously.",
      "The statement 'If not doing homework leads to failing the course, then all students attend class regularly' is a tautology."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students attend class.",
      "There exists at least one student who is conducting research.",
      "If a student does not do their homework, then they will not attend class.",
      "If there exists at least one student conducting research, then there exists at least one student conducting research (tautology).",
      "If all students attend class, then at least one student is conducting research.",
      "If a student does not conduct research, then they cannot pass the test.",
      "If a student does their homework, then they will score well."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (AttendsClass(x))",
      "∃x (Researches(x))",
      "∀x (¬DoesHomework(x) → ¬AttendsClass(x))",
      "(∃x (Researches(x)) → ∃x (Researches(x)))",
      "(∀x (AttendsClass(x)) → ∃x (Researches(x)))",
      "∀x (¬Researches(x) → ¬PassesTest(x))",
      "∀x (DoesHomework(x) → ScoresWell(x))"
    ],
    "choices": [
      "If all students attend class, then at least one student is conducting research.",
      "It is false that if all students attend class, then at least one student is conducting research.",
      "The statement 'If all students attend class, then at least one student is conducting research' is always true.",
      "The statement 'If all students attend class, then at least one student is conducting research' is both true and false at the same time."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student studies, then they will pass the exam.",
      "There exists at least one student who does research.",
      "If a student takes a test, then they will pass the exam.",
      "If taking a test leads to passing the exam, then studying also leads to passing the exam.",
      "If studying leads to passing the exam, then the previous rule (if taking a test leads to passing the exam, then studying also leads to passing the exam) holds.",
      "All students are enrolled in the university.",
      "All students conduct research."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (Studies(x) → PassesExam(x))",
      "∃x (Researches(x))",
      "∀x (TakesTest(x) → PassesExam(x))",
      "(∀x (TakesTest(x) → PassesExam(x))) → (∀x (Studies(x) → PassesExam(x)))",
      "(∀x (Studies(x) → PassesExam(x))) → ((∀x (TakesTest(x) → PassesExam(x))) → (∀x (Studies(x) → PassesExam(x))))",
      "∀x (EnrolledInUniversity(x))",
      "∀x (Researches(x))"
    ],
    "choices": [
      "The statement 'If studying leads to passing the exam, then the previous rule (if taking a test leads to passing the exam, then studying also leads to passing the exam) holds' is both true and false at the same time.",
      "If the statement 'If studying leads to passing the exam, then the previous rule holds' is true, then it is always true.",
      "The statement 'If studying leads to passing the exam, then the previous rule holds' is true.",
      "The statement 'If studying leads to passing the exam, then the previous rule holds' is false."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises above, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student studies, then they will understand the material.",
      "There exists at least one student who participates in extracurricular activities.",
      "All students must complete their assignments.",
      "If studying leads to understanding, then all students must complete their assignments.",
      "If the previous statement holds, then at least one student will join a study group.",
      "There exists at least one student who is preparing for an exam.",
      "There exists at least one student who understands the material."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Study(x) → Understand(x))",
      "Exists(x, ParticipateExtracurricular(x))",
      "ForAll(x, CompleteAssignments(x))",
      "ForAll(x, Study(x) → Understand(x)) → ForAll(x, CompleteAssignments(x))",
      "(ForAll(x, Study(x) → Understand(x)) → ForAll(x, CompleteAssignments(x))) → Exists(x, JoinStudyGroup(x))",
      "Exists(x, PreparingForExam(x))",
      "Exists(x, Understand(x))"
    ],
    "choices": [
      "'If the statement “If studying leads to understanding, then all students must complete their assignments” holds, but at the same time does not hold, it creates a contradiction.'",
      "'If studying leads to understanding, then at least one student will join a study group.'",
      "'It is not true that if studying leads to understanding, then at least one student will join a study group.'",
      "'If the previous statement is true, then it must be true in all cases where the same reasoning applies.'"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one AI model that can make predictions.",
      "All AI models require training data.",
      "If an AI system does not use deep learning, then it cannot make predictions.",
      "All AI models utilize deep learning.",
      "There exists at least one AI model that performs classification.",
      "If an AI model is trained, then it can achieve high accuracy.",
      "If an AI model does not perform classification, then it does not utilize deep learning.",
      "If an AI model cannot make predictions, then it does not perform classification.",
      "If an AI model does not use deep learning, then it does not have sufficient data.",
      "If the inability to use deep learning implies a lack of sufficient data, then all AI models require training data.",
      "If an AI model uses deep learning, then it has sufficient data.",
      "All AI models perform classification.",
      "If an AI model can make predictions, then it has sufficient data.",
      "If an AI model cannot make predictions, then it does not require training data.",
      "If an AI model performs classification, then it requires training data."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Predicts(x))",
      "ForAll(x, RequiresTrainingData(x))",
      "(¬UsesDeepLearning(x) → ¬Predicts(x))",
      "ForAll(x, UsesDeepLearning(x))",
      "Exists(x, PerformsClassification(x))",
      "(Trained(x) → HighAccuracy(x))",
      "(¬PerformsClassification(x) → ¬UsesDeepLearning(x))",
      "(¬Predicts(x) → ¬PerformsClassification(x))",
      "(¬UsesDeepLearning(x) → ¬HasSufficientData(x))",
      "((¬UsesDeepLearning(x) → ¬HasSufficientData(x)) → ForAll(x, RequiresTrainingData(x)))",
      "(UsesDeepLearning(x) → HasSufficientData(x))",
      "ForAll(x, PerformsClassification(x))",
      "(Predicts(x) → HasSufficientData(x))",
      "(¬Predicts(x) → ¬RequiresTrainingData(x))",
      "(PerformsClassification(x) → RequiresTrainingData(x))"
    ],
    "choices": [
      "All AI models have sufficient data.",
      "All AI models are untrained.",
      "If an AI model is trained, then it does not have sufficient data.",
      "No AI models use deep learning."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All fundamental concepts in C++ are important for problem-solving.",
      "If a programmer understands variables, then they can understand data types.",
      "If a programmer understands functions, then they understand modular programming.",
      "If a programmer understands loops, then they can apply them to problem-solving.",
      "All programmers who practice coding improve their C++ skills.",
      "If a programmer does not understand pointers, then they will struggle with dynamic memory allocation.",
      "If a programmer does not understand loops, then they will not understand recursion.",
      "If a programmer does not understand C++, then they will struggle with object-oriented programming.",
      "If a programmer understands loops, then they will understand C++.",
      "If all programmers who study regularly improve their debugging skills, then if a programmer does not understand loops, they will not understand recursion.",
      "If all fundamental concepts in C++ are important for problem-solving, then if a programmer understands variables, they can understand data types.",
      "All programmers should practice coding.",
      "There exists at least one programmer who understands loops.",
      "If a programmer understands C++, then they understand object-oriented programming.",
      "There exists at least one programmer who understands C++."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, FundamentalConcepts(x) → ImportantForProblemSolving(x))",
      "(UnderstandsVariables(x) → UnderstandsDataTypes(x))",
      "(UnderstandsFunctions(x) → UnderstandsModularProgramming(x))",
      "(UnderstandsLoops(x) → CanApplyToProblemSolving(x))",
      "ForAll(x, PracticesCoding(x) → ImprovesCppSkills(x))",
      "(¬UnderstandsPointers(x) → StrugglesWithMemoryAllocation(x))",
      "(¬UnderstandsLoops(x) → ¬UnderstandsRecursion(x))",
      "(¬UnderstandsCpp(x) → StrugglesWithOOP(x))",
      "(UnderstandsLoops(x) → UnderstandsCpp(x))",
      "(ForAll(x, StudiesRegularly(x) → ImprovesDebuggingSkills(x)) → (¬UnderstandsLoops(x) → ¬UnderstandsRecursion(x)))",
      "(ForAll(x, FundamentalConcepts(x) → ImportantForProblemSolving(x)) → (UnderstandsVariables(x) → UnderstandsDataTypes(x)))",
      "ForAll(x, ShouldPracticeCoding(x))",
      "Exists(x, UnderstandsLoops(x))",
      "(UnderstandsCpp(x) → UnderstandsOOP(x))",
      "Exists(x, UnderstandsCpp(x))"
    ],
    "choices": [
      "If a programmer understands loops, then they understand object-oriented programming.",
      "If a programmer does not understand recursion, then they do not understand loops.",
      "If a programmer does not study regularly, they will not improve debugging skills.",
      "If a programmer does not use functions, then they do not understand modular programming."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion is correct?"
    ],
    "premises-NL": [
      "If a student does not submit the exam, then they fail.",
      "All students who study regularly pass the exam.",
      "There exists at least one student who passed the exam.",
      "If a student passes the exam, then they meet the course requirements.",
      "If a student fails the exam, then they must retake the course.",
      "If a student scores exactly 100%, then they receive a distinction.",
      "If a student does not study, then they do not pass.",
      "There exists at least one student who scored above 90%.",
      "If a student scores above 90%, then they receive a certificate of excellence.",
      "If passing implies meeting course requirements, then all passing students meet the course requirements.",
      "If scoring above 90% implies receiving a certificate, then students who do not receive a certificate did not score above 90%.",
      "If a student does not submit the exam, then they do not pass.",
      "If a student receives a distinction, then they have a high academic standing.",
      "All students who receive a certificate of excellence are honored.",
      "There exists at least one student who studied but did not pass.",
      "There exists at least one student who failed but improved later.",
      "If a student does not pass, then they do not meet the course requirements."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ¬Submitted(x) → Fail(x))",
      "ForAll(x, StudyRegularly(x) → Pass(x))",
      "Exists(x, Pass(x))",
      "ForAll(x, Pass(x) → MeetCourseReq(x))",
      "ForAll(x, Fail(x) → RetakeCourse(x))",
      "ForAll(x, Score(x) = 100 → Distinction(x))",
      "ForAll(x, ¬Study(x) → ¬Pass(x))",
      "Exists(x, Score(x) > 90)",
      "ForAll(x, Score(x) > 90 → CertificateExcellence(x))",
      "((ForAll(x, Pass(x) → MeetCourseReq(x))) → ForAll(x, Pass(x)))",
      "((ForAll(x, Score(x) > 90 → CertificateExcellence(x))) → (ForAll(x, ¬CertificateExcellence(x) → Score(x) <= 90)))",
      "ForAll(x, ¬Submitted(x) → ¬Pass(x))",
      "ForAll(x, Distinction(x) → HighAcademicStanding(x))",
      "ForAll(x, CertificateExcellence(x) → Honored(x))",
      "Exists(x, StudyButFail(x))",
      "Exists(x, FailThenImprove(x))",
      "ForAll(x, ¬Pass(x) → ¬MeetCourseReq(x))"
    ],
    "choices": [
      "If a student scores above 90%, then they are honored.",
      "If a student is honored, then they scored above 90%.",
      "If a student is not honored, then they did not receive a certificate of excellence.",
      "If a student receives a certificate of excellence, then they have a distinction."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion is correct?"
    ],
    "premises-NL": [
      "If a student completes all required courses, then they are eligible for graduation.",
      "If a student has a GPA below 2.0, then they are not eligible for graduation.",
      "All students must complete a final project.",
      "If a student is eligible for graduation, then they receive a diploma.",
      "If a student completes an internship, then they have completed all required courses.",
      "There exists at least one student who graduates with honors.",
      "If a student has a GPA of at least 3.5, then they graduate with honors.",
      "There exists at least one student who has completed an internship.",
      "If a student has completed all required courses, then they meet the academic requirements.",
      "If all students with a GPA of at least 3.5 graduate with honors, then all students eligible for honors have a good GPA.",
      "If all students who complete an internship fulfill the graduation requirements, then those who have not completed an internship are not eligible for graduation.",
      "If a student completes a final project, then they meet the academic requirements.",
      "If a student meets the academic requirements, then they receive a diploma.",
      "All students must meet the academic requirements.",
      "All students who receive a diploma must have completed all graduation requirements.",
      "There exists at least one student who graduates with a distinction.",
      "There exists at least one student who is eligible for graduation.",
      "If a student does not complete a final project, then they do not meet the academic requirements."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, CompletedCourses(x) → EligibleForGraduation(x))",
      "ForAll(x, GPA(x) < 2.0 → ¬EligibleForGraduation(x))",
      "ForAll(x, MustCompleteFinalProject(x))",
      "ForAll(x, EligibleForGraduation(x) → ReceivesDiploma(x))",
      "ForAll(x, InternshipCompleted(x) → CompletedCourses(x))",
      "Exists(x, GraduatesWithHonors(x))",
      "ForAll(x, GPA(x) >= 3.5 → GraduatesWithHonors(x))",
      "Exists(x, InternshipCompleted(x))",
      "ForAll(x, CompletedCourses(x) → MeetsAcademicRequirements(x))",
      "((ForAll(x, GPA(x) >= 3.5 → GraduatesWithHonors(x))) → ForAll(x, EligibleForHonors(x) → GoodGPA(x)))",
      "((ForAll(x, InternshipCompleted(x) → MeetsGraduationRequirements(x))) → ForAll(x, ¬InternshipCompleted(x) → ¬EligibleForGraduation(x)))",
      "ForAll(x, FinalProjectCompleted(x) → MeetsAcademicRequirements(x))",
      "ForAll(x, MeetsAcademicRequirements(x) → ReceivesDiploma(x))",
      "ForAll(x, MustMeetAcademicRequirements(x))",
      "ForAll(x, ReceivesDiploma(x) → CompletedGraduationRequirements(x))",
      "Exists(x, GraduatesWithDistinction(x))",
      "Exists(x, EligibleForGraduation(x))",
      "ForAll(x, ¬FinalProjectCompleted(x) → ¬MeetsAcademicRequirements(x))"
    ],
    "choices": [
      "If a student completes a final project, then they receive a diploma.",
      "If a student completes an internship, then they receive a certificate of excellence.",
      "If a student receives a diploma, then they have completed a final project.",
      "If a student is eligible for graduation, then they have graduated with distinction."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which conclusion can be inferred?"
    ],
    "premises-NL": [
      "If a Python code is not well-tested, then it is not optimized.",
      "All Python projects are easy to maintain.",
      "All Python code follows PEP 8 standards.",
      "If a Python project is easy to maintain, then it is well-tested.",
      "There exists at least one Python project that is well-tested.",
      "All Python code is well-tested.",
      "If a Python code does not follow PEP 8 standards, then it is not well-tested.",
      "If a Python project is not optimized, then it is not well-tested.",
      "If a Python code is easy to maintain, then it follows PEP 8 standards.",
      "If a Python code is well-tested, then it follows PEP 8 standards.",
      "If a Python project is easy to maintain, then it is well-tested.",
      "All Python projects have clean and readable code.",
      "If a Python project is well-tested, then it is optimized."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ¬WellTested(x) → ¬Optimized(x))",
      "ForAll(x, EasyToMaintain(x))",
      "ForAll(x, FollowsPEP8(x))",
      "ForAll(x, EasyToMaintain(x) → WellTested(x))",
      "Exists(x, WellTested(x))",
      "ForAll(x, WellTested(x))",
      "ForAll(x, ¬FollowsPEP8(x) → ¬WellTested(x))",
      "ForAll(x, ¬Optimized(x) → ¬WellTested(x))",
      "ForAll(x, EasyToMaintain(x) → FollowsPEP8(x))",
      "ForAll(x, WellTested(x) → FollowsPEP8(x))",
      "ForAll(x, EasyToMaintain(x) → WellTested(x))",
      "ForAll(x, CleanReadableCode(x))",
      "ForAll(x, WellTested(x) → Optimized(x))"
    ],
    "choices": [
      "All Python code is optimized.",
      "All optimized code is not well-tested.",
      "If a Python code is optimized, then it is not well-tested.",
      "No Python code follows PEP 8 standards."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a chemical reaction is not balanced, then it is not stoichiometrically correct.",
      "All chemical equations must follow the law of conservation of mass.",
      "All chemical reactions involve energy changes.",
      "If a reaction is balanced, then it is stoichiometrically correct.",
      "There exists at least one reaction that is exothermic.",
      "All chemical reactions are exothermic or endothermic.",
      "If a reaction involves energy changes, then it is either exothermic or endothermic.",
      "If a reaction is exothermic, then it releases heat.",
      "If a reaction is balanced, then it follows the law of conservation of mass.",
      "If a reaction involves energy changes, then it is balanced.",
      "All chemical reactions follow the law of conservation of mass.",
      "If a reaction is stoichiometrically correct, then it is balanced."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ¬Balanced(x) → ¬StoichiometricallyCorrect(x))",
      "ForAll(x, ChemicalEquation(x) → FollowsConservationOfMass(x))",
      "ForAll(x, ChemicalReaction(x) → InvolvesEnergyChange(x))",
      "ForAll(x, Balanced(x) → StoichiometricallyCorrect(x))",
      "Exists(x, Exothermic(x))",
      "ForAll(x, (Exothermic(x) ∨ Endothermic(x)))",
      "ForAll(x, InvolvesEnergyChange(x) → (Exothermic(x) ∨ Endothermic(x)))",
      "ForAll(x, Exothermic(x) → ReleasesHeat(x))",
      "ForAll(x, Balanced(x) → FollowsConservationOfMass(x))",
      "ForAll(x, InvolvesEnergyChange(x) → Balanced(x))",
      "ForAll(x, FollowsConservationOfMass(x))",
      "ForAll(x, StoichiometricallyCorrect(x) → Balanced(x))"
    ],
    "choices": [
      "All stoichiometrically correct reactions are balanced.",
      "If a reaction is balanced, then it is not stoichiometrically correct.",
      "A reaction is stoichiometrically correct if and only if it is unbalanced.",
      "No reaction can follow the law of conservation of mass."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person reads a book, then they gain knowledge.",
      "All people who read books gain knowledge.",
      "If a person does not understand the content, they do not gain knowledge.",
      "If a person reads a book, they gain wisdom.",
      "All people who read books gain wisdom.",
      "If a person gains wisdom, they gain knowledge.",
      "If a person does not gain knowledge, they have not understood the content.",
      "If a person reads a book and gains wisdom, they gain knowledge.",
      "Everyone who reads books gains knowledge.",
      "If a person has gained knowledge and wisdom, they have mastered the content.",
      "Everyone who has gained knowledge has read a book."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(ReadsBook(x) → GainsKnowledge(x))",
      "ForAll(x, ReadsBook(x) → GainsKnowledge(x))",
      "(¬UnderstandsContent(x) → ¬GainsKnowledge(x))",
      "(ReadsBook(x) → GainsWisdom(x))",
      "ForAll(x, ReadsBook(x) → GainsWisdom(x))",
      "(GainsWisdom(x) → GainsKnowledge(x))",
      "(¬GainsKnowledge(x) → ¬UnderstandsContent(x))",
      "(ReadsBook(x) ∧ GainsWisdom(x) → GainsKnowledge(x))",
      "ForAll(x, ReadsBook(x) → GainsKnowledge(x))",
      "(GainsKnowledge(x) ∧ GainsWisdom(x) → MasteredContent(x))",
      "ForAll(x, GainsKnowledge(x) → ReadsBook(x))"
    ],
    "choices": [
      "A person gains knowledge if and only if they understand the content.",
      "A person gains knowledge if and only if they have read a book.",
      "A person who gains knowledge does not necessarily understand the content.",
      "A person understands content if and only if they gain wisdom."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Does a dataset with missing values always hurt a model’s performance?"
    ],
    "premises-NL": [
      "All machine learning models require data preprocessing.",
      "If a dataset has missing values, then the model's performance decreases.",
      "If a dataset is not normalized, then it affects model accuracy.",
      "If a model performs well, then its dataset is properly preprocessed.",
      "If a dataset is not normalized, then it has missing values."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Model(x) → ∃y (Dataset(y) ∧ TrainedOn(y, x) ∧ PreprocessingRequired(y)))",
      "∀x (Dataset(x) ∧ MissingValues(x) → ∃y (Model(y) ∧ TrainedOn(x, y) ∧ DecreasedPerformance(y)))",
      "∀x (Dataset(x) ∧ ¬Normalized(x) → ∃y (Model(y) ∧ TrainedOn(x, y) ∧ AffectsAccuracy(y)))",
      "∀x (Model(x) ∧ GoodPerformance(x) → ∃y (Dataset(y) ∧ TrainedOn(y, x) ∧ ProperlyPreprocessed(y)))",
      "∀x (Dataset(x) ∧ ¬Normalized(x) → MissingValues(x))"
    ],
    "choices": [
      "Yes, performance always decreases.",
      "No, some models perform well anyway.",
      "Only non-normalized datasets hurt performance.",
      "Missing values only affect accuracy."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Can a symmetric matrix ever fail to be invertible?"
    ],
    "premises-NL": [
      "There exists at least one singular matrix.",
      "If a matrix has a nonzero determinant, then it is invertible.",
      "If a matrix is symmetric, then it is orthogonally diagonalizable.",
      "If a matrix is orthogonally diagonalizable, then it is symmetric.",
      "All diagonal matrices are invertible."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (Matrix(x) ∧ SingularMatrix(x))",
      "∀x (Matrix(x) ∧ NonzeroDet(x) → Invertible(x))",
      "∀x (Matrix(x) ∧ Symmetric(x) → OrthogonallyDiagonalizable(x))",
      "∀x (Matrix(x) ∧ OrthogonallyDiagonalizable(x) → Symmetric(x))",
      "∀x (Matrix(x) ∧ DiagonalMatrix(x) → Invertible(x))"
    ],
    "choices": [
      "Yes, some symmetric matrices are not invertible.",
      "No, all symmetric matrices are invertible.",
      "Only diagonal symmetric matrices are invertible.",
      "Symmetry has no relation to invertibility."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Do all students who learn C++ understand object-oriented programming?"
    ],
    "premises-NL": [
      "All students eventually learn C++.",
      "If a student learns C++, then they will understand object-oriented programming.",
      "All students eventually understand memory management.",
      "If a student does not understand pointers, then they will not understand memory management.",
      "If a student does not understand pointers, then they will not understand C++.",
      "If a student does not understand pointers, then they will not understand data structures."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) → LearnsCPP(x))",
      "∀x (Student(x) ∧ LearnsCPP(x) → UnderstandsOOP(x))",
      "∀x (Student(x) → UnderstandsMemoryManagement(x))",
      "∀x (Student(x) ∧ ¬UnderstandsPointers(x) → ¬UnderstandsMemoryManagement(x))",
      "∀x (Student(x) ∧ ¬UnderstandsPointers(x) → ¬UnderstandsCPP(x))",
      "∀x (Student(x) ∧ ¬UnderstandsPointers(x) → ¬UnderstandsDataStructures(x))"
    ],
    "choices": [
      "Yes, they all understand OOP.",
      "No, some don’t understand OOP.",
      "Only Python learners understand OOP.",
      "C++ doesn’t involve OOP."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Will understanding concepts help students improve their skills?"
    ],
    "premises-NL": [
      "If a student understands concepts, then they practice regularly.",
      "If a student practices regularly, then they improve their skills.",
      "All students take notes.",
      "If a student takes notes, then they study theory."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ UnderstandsConcepts(x) → PracticesRegularly(x))",
      "∀x (Student(x) ∧ PracticesRegularly(x) → ImprovesSkills(x))",
      "∀x (Student(x) → TakesNotes(x))",
      "∀x (Student(x) ∧ TakesNotes(x) → StudiesTheory(x))"
    ],
    "choices": [
      "Yes, it leads to skill improvement.",
      "No, skills improve without concepts.",
      "Only note-taking improves skills.",
      "Concepts and skills are unrelated."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Do students who submit work always meet all assignment requirements?"
    ],
    "premises-NL": [
      "If a student submits an assignment, then they receive a score.",
      "All students submit work.",
      "If a student submits work, then they follow the guidelines.",
      "If a student follows the guidelines, then they complete all requirements."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ SubmitsAssignment(x) → ReceivesScore(x))",
      "∀x (Student(x) → SubmitsWork(x))",
      "∀x (Student(x) ∧ SubmitsWork(x) → FollowsGuidelines(x))",
      "∀x (Student(x) ∧ FollowsGuidelines(x) → CompletesRequirements(x))"
    ],
    "choices": [
      "Yes, they meet all requirements.",
      "No, some don’t meet requirements.",
      "Only graded work meets requirements.",
      "Submitting work isn’t related to requirements."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Do all models that learn representations need to be trained?"
    ],
    "premises-NL": [
      "If a model is trained on a dataset, then it learns representations.",
      "If a model learns representations, then it can extract features.",
      "If a model extracts features, then it has been trained.",
      "There exists a neural network that has been trained."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Model(x) ∧ Trained(x) → LearnsRepresentations(x))",
      "∀x (Model(x) ∧ LearnsRepresentations(x) → ExtractsFeatures(x))",
      "∀x (Model(x) ∧ ExtractsFeatures(x) → Trained(x))",
      "∃x (Model(x) ∧ NeuralNetwork(x) ∧ Trained(x))"
    ],
    "choices": [
      "Yes, they must be trained.",
      "No, some learn without training.",
      "Only neural networks learn representations.",
      "Representations don’t require training."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Do students who study regularly always perform well on the test?"
    ],
    "premises-NL": [
      "If a student studies regularly, then they understand key concepts.",
      "If a student understands key concepts, then they perform well in the test.",
      "All students who study regularly pass the semester test.",
      "There exists a student who studies effectively and passes the test."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ StudyRegularly(x) → UnderstandsKeyConcepts(x))",
      "∀x (Student(x) ∧ UnderstandsKeyConcepts(x) → PerformsWell(x))",
      "∀x (Student(x) ∧ StudyRegularly(x) → PassesSemesterTest(x))",
      "∃x (Student(x) ∧ StudiesEffectively(x) ∧ PassesSemesterTest(x))"
    ],
    "choices": [
      "Yes, they perform well.",
      "No, some don’t perform well.",
      "Only effective studiers perform well.",
      "Studying doesn’t affect performance."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Do students who turn in assignments on time always do well on exams?"
    ],
    "premises-NL": [
      "If a student completes assignments on time, then they understand the material.",
      "If a student understands the material, then they perform well on exams.",
      "If a student practices regularly, then they study effectively.",
      "If a student completes assignments on time, then they achieve an A grade."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → UnderstandsMaterial(x))",
      "∀x (Student(x) ∧ UnderstandsMaterial(x) → PerformsWellOnExams(x))",
      "∀x (Student(x) ∧ PracticesRegularly(x) → StudiesEffectively(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → AchievesAGrade(x))"
    ],
    "choices": [
      "Yes, they perform well.",
      "No, some don’t perform well.",
      "Only A-grade students perform well.",
      "Assignments don’t affect exam performance."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one person who has submitted a scholarship application.",
      "If a person has submitted a scholarship application, then they meet the scholarship eligibility criteria.",
      "There exists at least one student.",
      "If there exists a student, then someone has submitted a scholarship application.",
      "If there exists a student, then (if there exists a student, then someone has submitted a scholarship application).",
      "Every person is a student.",
      "If a person meets the scholarship eligibility criteria, then they are a student."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "Exists(x, SubmittedScholarshipApplication(x))",
      "∀x (SubmittedScholarshipApplication(x) → MeetsScholarshipEligibility(x))",
      "Exists(x, Student(x))",
      "Exists(x, Student(x)) → Exists(y, SubmittedScholarshipApplication(y))",
      "Exists(x, Student(x)) → (Exists(y, Student(y)) → Exists(z, SubmittedScholarshipApplication(z)))",
      "∀x (Person(x) → Student(x))",
      "∀x (MeetsScholarshipEligibility(x) → Student(x))"
    ],
    "choices": [
      "If there exists a student, then someone has submitted a scholarship application, but not everyone who submitted a scholarship application meets the scholarship eligibility criteria.",
      "If there exists a student, then someone has submitted a scholarship application, and every person who submitted a scholarship application meets the scholarship eligibility criteria.",
      "If there exists a student, then someone has submitted a scholarship application, and every person is a student.",
      "If there exists a student, then someone has submitted a scholarship application, but not every person is a student."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person has not complied with the new attendance rule, then they are not allowed to attend class.",
      "Everyone is allowed to attend class.",
      "If a person received a warning for previous absences, then they acknowledged the new attendance policy.",
      "If everyone is allowed to attend class, then if a person has not complied with the new attendance rule, then they are not allowed to attend class.",
      "If (a person received a warning for previous absences implies they acknowledged the new attendance policy), then (a person not complying with the new rule implies they are not allowed to attend class).",
      "There exists someone who has complied with the new attendance rule.",
      "If a person is not allowed to attend class, then they have not complied with the new attendance rule."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (¬CompliedWithRule(x) → ¬AllowedToAttendClass(x))",
      "∀x (AllowedToAttendClass(x))",
      "∀x (ReceivedWarning(x) → AcknowledgedPolicy(x))",
      "∀x (ForAll(y, AllowedToAttendClass(y)) → (¬CompliedWithRule(x) → ¬AllowedToAttendClass(x)))",
      "∀x ((ReceivedWarning(x) → AcknowledgedPolicy(x)) → (¬CompliedWithRule(x) → ¬AllowedToAttendClass(x)))",
      "Exists(x, CompliedWithRule(x))",
      "∀x (¬AllowedToAttendClass(x) → ¬CompliedWithRule(x))"
    ],
    "choices": [
      "If everyone is allowed to attend class, then if a person has not complied with the new attendance rule, they are not allowed to attend class, and there exists someone who has not complied with the new attendance rule.",
      "If a person received a warning for previous absences, then they acknowledged the new attendance policy, and if they acknowledged the new attendance policy, then not complying with the new rule implies they are not allowed to attend class.",
      "If everyone is allowed to attend class, then if a person has not complied with the new attendance rule, they are allowed to attend class.",
      "If a person received a warning for previous absences, then they acknowledged the new attendance policy, and if they acknowledged the new attendance policy, then they are allowed to attend class even if they have not complied with the new rule."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person registered to attend the AI seminar, then they are allowed to attend the seminar.",
      "All individuals are part of the educational institution.",
      "If a person did not submit the seminar participation form, then they did not register to attend the seminar.",
      "If (a person did not submit the form implies they did not register), then (a person registered implies they are allowed to attend).",
      "If (a person not submitting the form implies they did not register) implies ((a person not submitting implies they did not register) implies (a person registering implies being allowed to attend)).",
      "If a person is not allowed to attend the seminar, then they did not register.",
      "There exists someone who submitted the seminar participation form."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Registered(x) → AllowedToAttend(x))",
      "∀x (PartOfInstitution(x))",
      "∀x (¬SubmittedForm(x) → ¬Registered(x))",
      "∀x ((¬SubmittedForm(x) → ¬Registered(x)) → (Registered(x) → AllowedToAttend(x)))",
      "∀x ((¬SubmittedForm(x) → ¬Registered(x)) → ((¬SubmittedForm(x) → ¬Registered(x)) → (Registered(x) → AllowedToAttend(x))))",
      "∀x (¬AllowedToAttend(x) → ¬Registered(x))",
      "Exists(x, SubmittedForm(x))"
    ],
    "choices": [
      "If a person did not submit the seminar participation form, then they did not register to attend the seminar, and there exists someone who did not submit the form.",
      "If a person did not submit the seminar participation form, then they did not register to attend the seminar, and if they registered, they are allowed to attend the seminar.",
      "If a person did not submit the seminar participation form, then they are allowed to attend the seminar even if they did not register.",
      "If a person did not submit the seminar participation form, then they did not register to attend the seminar, and if they did not register, they are still allowed to attend the seminar."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person attends the English club, then they improve English communication skills.",
      "There exists someone who signed up for the English club.",
      "Everyone attends the English club.",
      "If everyone attends the English club, then if a person attends the club, they improve their communication skills.",
      "If (a person attending the club implies they improve their communication), then someone has signed up for the club.",
      "Everyone improves their English communication skills.",
      "If a person was invited by a teacher, then they attend the English club."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (AttendsClub(x) → ImprovesCommunication(x))",
      "Exists(x, SignedUpForClub(x))",
      "∀x (AttendsClub(x))",
      "∀x (ForAll(y, AttendsClub(y)) → (AttendsClub(x) → ImprovesCommunication(x)))",
      "∀x ((AttendsClub(x) → ImprovesCommunication(x)) → Exists(y, SignedUpForClub(y)))",
      "∀x (ImprovesCommunication(x))",
      "∀x (InvitedByTeacher(x) → AttendsClub(x))"
    ],
    "choices": [
      "If everyone attends the English club, then if a person attends the club, they improve their communication skills, and there exists someone who signed up for the club.",
      "If a person was invited by a teacher, then they attend the English club, and if they attend the club, they improve their communication skills.",
      "If everyone improves their English communication skills, then there exists someone who signed up for the club.",
      "If a person was invited by a teacher, then they attend the English club, and if they attend the club, they do not improve their communication skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists someone who is eligible for the exchange program.",
      "If a person applied for the exchange opportunity, then they are eligible for the exchange program.",
      "If a person is not eligible, then they were not selected for the exchange program.",
      "If (a person applying implies they are eligible), then (a person not eligible implies they were not selected).",
      "If ((a person applying implies eligibility) implies (not eligible implies not selected)), then (a person applying implies eligibility).",
      "If a person did not apply, then they were not contacted by the international office.",
      "If a person did not complete all required documents, then they did not apply."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "Exists(x, Eligible(x))",
      "∀x (Applied(x) → Eligible(x))",
      "∀x (¬Eligible(x) → ¬Selected(x))",
      "∀x ((Applied(x) → Eligible(x)) → (¬Eligible(x) → ¬Selected(x)))",
      "∀x (((Applied(x) → Eligible(x)) → (¬Eligible(x) → ¬Selected(x))) → (Applied(x) → Eligible(x)))",
      "∀x (¬Applied(x) → ¬Contacted(x))",
      "∀x (¬CompletedDocuments(x) → ¬Applied(x))"
    ],
    "choices": [
      "If a person applied for the exchange opportunity, then they are eligible for the exchange program, and if they are eligible, they were selected for the exchange program.",
      "If a person applied for the exchange opportunity, then they are eligible for the exchange program, and if they are not eligible, they were not selected for the exchange program.",
      "If a person applied for the exchange opportunity, then they are eligible for the exchange program, but if they are eligible, they were not selected for the exchange program.",
      "If a person applied for the exchange opportunity, then they are eligible for the exchange program, and if they are eligible, they were not selected for the exchange program."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person did not participate in organizing the cultural festival, then they did not present any performance or exhibit.",
      "There exists someone who learned about different cultures through the festival.",
      "There exists someone who attended the cultural festival.",
      "If someone attended the cultural festival, then someone learned about different cultures.",
      "If (a person not participating in organizing implies they did not present), then there exists someone who learned about different cultures.",
      "If a person participated in organizing the festival, then they developed teamwork skills.",
      "Everyone learned about different cultures through the festival."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (¬ParticipatedInOrganizing(x) → ¬Presented(x))",
      "Exists(x, LearnedAboutCultures(x))",
      "Exists(x, AttendedFestival(x))",
      "Exists(x, AttendedFestival(x)) → Exists(y, LearnedAboutCultures(y))",
      "∀x ((¬ParticipatedInOrganizing(x) → ¬Presented(x)) → Exists(y, LearnedAboutCultures(y)))",
      "∀x (ParticipatedInOrganizing(x) → DevelopedTeamworkSkills(x))",
      "∀x (LearnedAboutCultures(x))"
    ],
    "choices": [
      "If a person did not participate in organizing the cultural festival, then they did not present any performance or exhibit, and there exists someone who attended the festival.",
      "If a person did not participate in organizing the cultural festival, then they did not present any performance or exhibit, and if someone attended the festival, then someone learned about different cultures.",
      "If a person did not participate in organizing the cultural festival, then they did not present any performance or exhibit, and everyone learned about different cultures through the festival.",
      "If a person did not participate in organizing the cultural festival, then they did not present any performance or exhibit, and if they did not present, they did not learn about different cultures."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person did not do regular exercise, then they did not receive bonus points.",
      "If a person did not follow the school’s physical activity schedule, then they did not avoid penalty points.",
      "Everyone received bonus points.",
      "If everyone received bonus points, then if a person did not follow the activity schedule, they did not avoid penalty points.",
      "If (a person not following the activity schedule implies they did not avoid penalties), then everyone received bonus points.",
      "All individuals are students.",
      "If a person did not submit the exercise log, then they did not receive bonus points."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬DidRegularExercise(x) → ¬ReceivedBonusPoints(x))",
      "∀x (¬FollowedActivitySchedule(x) → ¬AvoidedPenaltyPoints(x))",
      "∀x (ReceivedBonusPoints(x))",
      "∀x (ForAll(y, ReceivedBonusPoints(y)) → (¬FollowedActivitySchedule(x) → ¬AvoidedPenaltyPoints(x)))",
      "∀x ((¬FollowedActivitySchedule(x) → ¬AvoidedPenaltyPoints(x)) → ForAll(y, ReceivedBonusPoints(y)))",
      "∀x (Student(x))",
      "∀x (¬SubmittedExerciseLog(x) → ¬ReceivedBonusPoints(x))"
    ],
    "choices": [
      "If a person did not follow the school’s physical activity schedule, then they did not avoid penalty points, and everyone received bonus points.",
      "If a person did not follow the school’s physical activity schedule, then they did not avoid penalty points, but not everyone received bonus points.",
      "If a person did not follow the school’s physical activity schedule, then they did not avoid penalty points, and if they did not avoid penalty points, they did not receive bonus points.",
      "If a person did not follow the school’s physical activity schedule, then they did not avoid penalty points, and if they did not avoid penalty points, they received bonus points."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students are active in school activities.",
      "If a person participated in the school’s leadership skills workshop, then they improved their teamwork ability.",
      "If a person did not participate in the leadership workshop, then they did not lead a team project in class.",
      "If (participating in the workshop implies teamwork improvement), then (not participating implies not leading a team project).",
      "If all students are active in school activities, then participating in the workshop implies teamwork improvement.",
      "There exists someone who received positive feedback from peers.",
      "If a person did not improve their teamwork ability, then they were not selected to represent the class in a school event."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) → ActiveInSchoolActivities(x))",
      "∀x (ParticipatedInWorkshop(x) → ImprovedTeamwork(x))",
      "∀x (¬ParticipatedInWorkshop(x) → ¬LedTeamProject(x))",
      "∀x ((ParticipatedInWorkshop(x) → ImprovedTeamwork(x)) → (¬ParticipatedInWorkshop(x) → ¬LedTeamProject(x)))",
      "∀x (ForAll(y, ActiveInSchoolActivities(y)) → (ParticipatedInWorkshop(x) → ImprovedTeamwork(x)))",
      "Exists(x, ReceivedPositiveFeedback(x))",
      "∀x (¬ImprovedTeamwork(x) → ¬SelectedToRepresent(x))"
    ],
    "choices": [
      "If all students are active in school activities, then participating in the workshop implies teamwork improvement, and there exists someone who received positive feedback from peers.",
      "If all students are active in school activities, then participating in the workshop implies teamwork improvement, and if a person participated in the workshop, they improved their teamwork ability.",
      "If all students are active in school activities, then participating in the workshop implies teamwork improvement, but if a person participated in the workshop, they did not improve their teamwork ability.",
      "If all students are active in school activities, then participating in the workshop implies teamwork improvement, and if a person did not improve their teamwork ability, they were not selected to represent the class in a school event."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All individuals attend soft skill seminars.",
      "If a person learns new soft skills in the seminar, then they improve their communication or leadership skills.",
      "If a person did not participate in the previous seminar, then they did not learn new soft skills in the seminar.",
      "If (not participating in the previous seminar implies not learning new skills), then (learning new skills implies improving communication or leadership skills).",
      "If all individuals attend soft skill seminars, then learning new skills implies improving communication or leadership skills.",
      "Everyone learns new soft skills in the seminar.",
      "If a person participated in the seminar, then they successfully apply the soft skills in their daily activities."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (AttendsSeminar(x))",
      "∀x (LearnedNewSkills(x) → (ImprovedCommunication(x) ∨ ImprovedLeadership(x)))",
      "∀x (¬ParticipatedInPreviousSeminar(x) → ¬LearnedNewSkills(x))",
      "∀x ((¬ParticipatedInPreviousSeminar(x) → ¬LearnedNewSkills(x)) → (LearnedNewSkills(x) → (ImprovedCommunication(x) ∨ ImprovedLeadership(x))))",
      "∀x (ForAll(y, AttendsSeminar(y)) → (LearnedNewSkills(x) → (ImprovedCommunication(x) ∨ ImprovedLeadership(x))))",
      "∀x (LearnedNewSkills(x))",
      "∀x (ParticipatedInSeminar(x) → SuccessfullyAppliedSkills(x))"
    ],
    "choices": [
      "If all individuals attend soft skill seminars, then learning new skills implies improving communication or leadership skills, and everyone learns new soft skills in the seminar.",
      "If all individuals attend soft skill seminars, then learning new skills implies improving communication or leadership skills, but not everyone learns new soft skills in the seminar.",
      "If all individuals attend soft skill seminars, then learning new skills implies improving communication or leadership skills, and if a person learns new skills, they improve their communication or leadership skills.",
      "If all individuals attend soft skill seminars, then learning new skills implies improving communication or leadership skills, but if a person learns new skills, they do not improve their communication or leadership skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students attend the course.",
      "There exists someone who attended the midterm exam.",
      "If a person did not complete the required attendance, then they did not attend the course.",
      "If all students attend the course, then (not completing attendance implies not attending the course).",
      "If there exists someone who attended the midterm exam, then all students attend the course.",
      "If a person did not attend the course, then they did not attend the final exam.",
      "There exists someone who attended the final exam."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AttendsCourse(x))",
      "Exists(x, AttendedMidterm(x))",
      "∀x (¬CompletedAttendance(x) → ¬AttendsCourse(x))",
      "∀x (ForAll(y, AttendsCourse(y)) → (¬CompletedAttendance(x) → ¬AttendsCourse(x)))",
      "Exists(x, AttendedMidterm(x)) → ForAll(y, AttendsCourse(y))",
      "∀x (¬AttendsCourse(x) → ¬AttendedFinal(x))",
      "Exists(x, AttendedFinal(x))"
    ],
    "choices": [
      "If there exists someone who attended the midterm exam, then all students attend the course, and there exists someone who attended the final exam.",
      "If there exists someone who attended the midterm exam, then all students attend the course, and if a person did not complete the required attendance, then they did not attend the course.",
      "If there exists someone who attended the midterm exam, then all students attend the course, but if a person did not complete the required attendance, they still attended the course.",
      "If there exists someone who attended the midterm exam, then all students attend the course, and if a person did not attend the course, they did not attend the final exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists someone who lends money to a friend.",
      "If a person has the maturity to lend money, then they lend money to a friend.",
      "If a person can make responsible financial decisions, then they are mature.",
      "If there exists someone who lends money to a friend, then (a person having the maturity to lend money implies they lend money to a friend).",
      "If (someone lending money to a friend implies maturity), then a person lends money to a friend.",
      "If a person is reckless with money, then they cannot make responsible financial decisions.",
      "If a person lends money to a friend, then they have learned from the experience."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, LendsMoney(x))",
      "∀x (HasMaturityToLend(x) → LendsMoney(x))",
      "∀x (CanMakeResponsibleDecisions(x) → Mature(x))",
      "Exists(x, LendsMoney(x)) → ∀y (HasMaturityToLend(y) → LendsMoney(y))",
      "∀x ((LendsMoney(x) → Mature(x)) → LendsMoney(x))",
      "∀x (RecklessWithMoney(x) → ¬CanMakeResponsibleDecisions(x))",
      "∀x (LendsMoney(x) → LearnedFromExperience(x))"
    ],
    "choices": [
      "If there exists someone who lends money to a friend, then a person having the maturity to lend money implies they lend money to a friend, and if a person lends money to a friend, they have learned from the experience.",
      "If there exists someone who lends money to a friend, then a person having the maturity to lend money implies they lend money to a friend, but if a person lends money to a friend, they have not learned from the experience.",
      "If there exists someone who lends money to a friend, then a person having the maturity to lend money implies they lend money to a friend, and if a person is reckless with money, they cannot make responsible financial decisions.",
      "If there exists someone who lends money to a friend, then a person having the maturity to lend money implies they lend money to a friend, but if a person is reckless with money, they can still make responsible financial decisions."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists someone who uses university facilities responsibly.",
      "If a person has the maturity to use facilities responsibly, then they use university facilities responsibly.",
      "If a person understands the proper rules and usage of facilities, then they are mature in using them.",
      "If there exists someone who uses university facilities responsibly, then (a person having the maturity to use facilities responsibly implies they use them responsibly).",
      "If (using facilities responsibly implies maturity), then a person uses university facilities responsibly.",
      "If a person misuses university facilities, then they cannot understand the proper rules and usage.",
      "If a person uses university facilities responsibly, then they respect the university’s policies."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, UsesFacilitiesResponsibly(x))",
      "∀x (HasMaturityToUseFacilities(x) → UsesFacilitiesResponsibly(x))",
      "∀x (UnderstandsRules(x) → MatureInUsingFacilities(x))",
      "Exists(x, UsesFacilitiesResponsibly(x)) → ∀y (HasMaturityToUseFacilities(y) → UsesFacilitiesResponsibly(y))",
      "∀x ((UsesFacilitiesResponsibly(x) → MatureInUsingFacilities(x)) → UsesFacilitiesResponsibly(x))",
      "∀x (MisusesFacilities(x) → ¬UnderstandsRules(x))",
      "∀x (UsesFacilitiesResponsibly(x) → RespectsPolicies(x))"
    ],
    "choices": [
      "If there exists someone who uses university facilities responsibly, then a person having the maturity to use facilities responsibly implies they use them responsibly, and if a person uses university facilities responsibly, they respect the university’s policies.",
      "If there exists someone who uses university facilities responsibly, then a person having the maturity to use facilities responsibly implies they use them responsibly, but if a person uses university facilities responsibly, they do not respect the university’s policies.",
      "If there exists someone who uses university facilities responsibly, then a person having the maturity to use facilities responsibly implies they use them responsibly, and if a person misuses university facilities, they cannot understand the proper rules and usage.",
      "If there exists someone who uses university facilities responsibly, then a person having the maturity to use facilities responsibly implies they use them responsibly, but if a person misuses university facilities, they can still understand the proper rules and usage."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Everyone studies independently at home.",
      "Everyone engages in self-study regularly.",
      "There exists someone who has the discipline to self-study at home.",
      "If there exists someone with the discipline to self-study at home, then everyone studies independently at home.",
      "If everyone engages in self-study regularly, then there exists someone who has the discipline to self-study at home.",
      "If a person does not engage in self-study regularly, then they do not improve their academic performance.",
      "If a person does not study independently at home, then they do not improve their academic performance."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (StudiesIndependentlyAtHome(x))",
      "∀x (EngagesInSelfStudy(x))",
      "Exists(x, HasDisciplineToSelfStudy(x))",
      "Exists(x, HasDisciplineToSelfStudy(x)) → ∀y (StudiesIndependentlyAtHome(y))",
      "∀x (EngagesInSelfStudy(x)) → Exists(y, HasDisciplineToSelfStudy(y))",
      "∀x (¬EngagesInSelfStudy(x) → ¬ImprovesAcademicPerformance(x))",
      "∀x (¬StudiesIndependentlyAtHome(x) → ¬ImprovesAcademicPerformance(x))"
    ],
    "choices": [
      "If everyone engages in self-study regularly, then there exists someone who has the discipline to self-study at home, and if there exists someone with the discipline to self-study at home, then everyone studies independently at home.",
      "If everyone engages in self-study regularly, then there exists someone who has the discipline to self-study at home, but if there exists someone with the discipline to self-study at home, then not everyone studies independently at home.",
      "If everyone engages in self-study regularly, then there exists someone who has the discipline to self-study at home, and if a person does not engage in self-study regularly, then they do not improve their academic performance.",
      "If everyone engages in self-study regularly, then there exists someone who has the discipline to self-study at home, but if a person does not engage in self-study regularly, then they still improve their academic performance."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists a student who is allowed to borrow books from the library.",
      "If a person has not borrowed more than 5 books at once, then they are allowed to borrow books.",
      "If a person has permission to borrow books from the library, then they are a student allowed to borrow books.",
      "If (a person having permission to borrow books implies they are allowed to borrow books), then (not borrowing more than 5 books implies they are allowed to borrow books).",
      "If (a person having permission to borrow books implies being allowed to borrow books), then there exists a student who is allowed to borrow books.",
      "If a person does not have permission to borrow books, then they are not allowed to borrow books.",
      "If a person is not allowed to borrow books, then they have not borrowed more than 5 books."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Student(x) ∧ AllowedToBorrowBooks(x))",
      "∀x (¬BorrowedMoreThan5Books(x) → AllowedToBorrowBooks(x))",
      "∀x (HasPermissionToBorrowBooks(x) → (Student(x) ∧ AllowedToBorrowBooks(x)))",
      "∀x ((HasPermissionToBorrowBooks(x) → AllowedToBorrowBooks(x)) → (¬BorrowedMoreThan5Books(x) → AllowedToBorrowBooks(x)))",
      "∀x ((HasPermissionToBorrowBooks(x) → AllowedToBorrowBooks(x)) → Exists(y, Student(y) ∧ AllowedToBorrowBooks(y)))",
      "∀x (¬HasPermissionToBorrowBooks(x) → ¬AllowedToBorrowBooks(x))",
      "∀x (¬AllowedToBorrowBooks(x) → ¬BorrowedMoreThan5Books(x))"
    ],
    "choices": [
      "If a person has permission to borrow books from the library, then they are a student allowed to borrow books, and if there exists a student who is allowed to borrow books, then there exists someone who has not borrowed more than 5 books at once.",
      "If a person has permission to borrow books from the library, then they are a student allowed to borrow books, but if there exists a student who is allowed to borrow books, then there exists someone who has borrowed more than 5 books at once.",
      "If a person has permission to borrow books from the library, then they are a student allowed to borrow books, and if a person does not have permission to borrow books, then they are not allowed to borrow books.",
      "If a person has permission to borrow books from the library, then they are a student allowed to borrow books, but if a person does not have permission to borrow books, then they are still allowed to borrow books."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person is participating in the buddy program, then they gain 5 bonus points and money.",
      "All students are receiving help through the buddy program.",
      "If a person is participating in the buddy program, then they are a student receiving help.",
      "If all students are receiving help, then if a person is participating in the buddy program, then they gain 5 bonus points and money.",
      "If participating in the buddy program implies receiving help, then all students are receiving help.",
      "There exists a student who gains 5 bonus points and money through the program.",
      "All students are participating in the buddy program."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (ParticipatesInBuddyProgram(x) → (GainsBonusPoints(x) ∧ GainsMoney(x)))",
      "∀x (Student(x) → ReceivesHelp(x))",
      "∀x (ParticipatesInBuddyProgram(x) → (Student(x) ∧ ReceivesHelp(x)))",
      "∀x (ForAll(y, ReceivesHelp(y)) → (ParticipatesInBuddyProgram(x) → (GainsBonusPoints(x) ∧ GainsMoney(x))))",
      "∀x ((ParticipatesInBuddyProgram(x) → ReceivesHelp(x)) → ForAll(y, ReceivesHelp(y)))",
      "Exists(x, (Student(x) ∧ GainsBonusPoints(x) ∧ GainsMoney(x)))",
      "∀x (Student(x) → ParticipatesInBuddyProgram(x))"
    ],
    "choices": [
      "If all students are participating in the buddy program, then if a person is participating in the buddy program, they gain 5 bonus points and money, and there exists a student who gains 5 bonus points and money through the program.",
      "If all students are participating in the buddy program, then if a person is participating in the buddy program, they gain 5 bonus points and money, but there does not exist a student who gains 5 bonus points and money through the program.",
      "If all students are participating in the buddy program, then if a person is participating in the buddy program, they gain 5 bonus points and money, and if a person is participating in the buddy program, they are a student receiving help.",
      "If all students are participating in the buddy program, then if a person is participating in the buddy program, they gain 5 bonus points and money, but if a person is participating in the buddy program, they are not a student receiving help."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students are enrolled in the PE course.",
      "If a person has not attended the PE course, then they are not attending the PE course this semester.",
      "There exists a student who is enrolled in the PE course.",
      "If (not attending the PE course implies not attending this semester), then there exists a student who is enrolled in the PE course.",
      "If (there exists a student in the PE course implies not attending the PE course), then (not attending implies not attending this semester).",
      "If a person has not attended the PE course, then they have not fulfilled all course requirements.",
      "There exists a student who attended at least 2 PE courses during the 9 semesters."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) → EnrolledInPE(x))",
      "∀x (¬AttendedPE(x) → ¬AttendingPEThisSemester(x))",
      "Exists(x, Student(x) ∧ EnrolledInPE(x))",
      "∀x ((¬AttendedPE(x) → ¬AttendingPEThisSemester(x)) → Exists(y, Student(y) ∧ EnrolledInPE(y)))",
      "∀x ((Exists(y, Student(y) ∧ EnrolledInPE(y)) → ¬AttendedPE(x)) → (¬AttendedPE(x) → ¬AttendingPEThisSemester(x)))",
      "∀x (¬AttendedPE(x) → ¬FulfilledRequirements(x))",
      "Exists(x, Student(x) ∧ AttendedAtLeast2PE(x))"
    ],
    "choices": [
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, and there exists a student who is enrolled in the PE course.",
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, but there does not exist a student who is enrolled in the PE course.",
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, and if a person has not attended the PE course, they have not fulfilled all course requirements.",
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, but if a person has not attended the PE course, they have fulfilled all course requirements."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students are enrolled in the PE course.",
      "If a person has not attended the PE course, then they are not attending the PE course this semester.",
      "There exists a student who is enrolled in the PE course.",
      "If (not attending the PE course implies not attending this semester), then there exists a student who is enrolled in the PE course.",
      "If (there exists a student in the PE course implies not attending the PE course), then (not attending implies not attending this semester).",
      "If a person has not attended the PE course, then they have not fulfilled all course requirements.",
      "There exists a student who attended at least 2 PE courses during the 9 semesters."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) → EnrolledInPE(x))",
      "∀x (¬AttendedPE(x) → ¬AttendingPEThisSemester(x))",
      "Exists(x, Student(x) ∧ EnrolledInPE(x))",
      "∀x ((¬AttendedPE(x) → ¬AttendingPEThisSemester(x)) → Exists(y, Student(y) ∧ EnrolledInPE(y)))",
      "∀x ((Exists(y, Student(y) ∧ EnrolledInPE(y)) → ¬AttendedPE(x)) → (¬AttendedPE(x) → ¬AttendingPEThisSemester(x)))",
      "∀x (¬AttendedPE(x) → ¬FulfilledRequirements(x))",
      "Exists(x, Student(x) ∧ AttendedAtLeast2PE(x))"
    ],
    "choices": [
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, and there exists a student who is enrolled in the PE course.",
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, but there does not exist a student who is enrolled in the PE course.",
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, and if a person has not attended the PE course, they have not fulfilled all course requirements.",
      "If all students are enrolled in the PE course, then if a person has not attended the PE course, they are not attending the PE course this semester, but if a person has not attended the PE course, they have fulfilled all course requirements."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person has an English certificate, then they have at least 6.0 IELTS or a TOEFL score above 600.",
      "There exists someone who has successfully obtained the English certificate.",
      "Everyone is required to have the English certificate.",
      "If there exists someone who has obtained the English certificate, then everyone is required to have the English certificate.",
      "If (having an English certificate implies having at least 6.0 IELTS or a TOEFL score), then everyone is required to have the English certificate.",
      "There exists someone who has completed the language proficiency test.",
      "There exists someone eligible for a language proficiency scholarship."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (HasEnglishCertificate(x) → (IELTS(x) ≥ 6.0 ∨ TOEFL(x) > 600))",
      "Exists(x, HasEnglishCertificate(x))",
      "∀x (RequiredToHaveEnglishCertificate(x))",
      "Exists(x, HasEnglishCertificate(x)) → ∀y (RequiredToHaveEnglishCertificate(y))",
      "∀x ((HasEnglishCertificate(x) → (IELTS(x) ≥ 6.0 ∨ TOEFL(x) > 600)) → ∀y (RequiredToHaveEnglishCertificate(y)))",
      "Exists(x, CompletedLanguageProficiencyTest(x))",
      "Exists(x, EligibleForLanguageScholarship(x))"
    ],
    "choices": [
      "If there exists someone who has successfully obtained the English certificate, then everyone is required to have the English certificate, and if a person has an English certificate, then they have at least 6.0 IELTS or a TOEFL score above 600.",
      "If there exists someone who has successfully obtained the English certificate, then everyone is required to have the English certificate, but if a person has an English certificate, then they do not have at least 6.0 IELTS or a TOEFL score above 600.",
      "If there exists someone who has successfully obtained the English certificate, then everyone is required to have the English certificate, and there exists someone who has completed the language proficiency test.",
      "If there exists someone who has successfully obtained the English certificate, then everyone is required to have the English certificate, but there does not exist someone who has completed the language proficiency test."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists someone who has obtained both MOS certifications in Word and Excel.",
      "If x did not register for the seminar, then x is not allowed to submit the report.",
      "If x registered for the seminar, then x has completed all requirements to register for the seminar.",
      "If x did not submit the required report, then x is not allowed to submit the report for the seminar.",
      "If x is eligible to attend the seminar, then x has the required certifications."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∃x HasBothCertifications(x)",
      "∀x (¬RegisteredSeminar(x) → ¬AllowedSubmitReport(x))",
      "∀x (RegisteredSeminar(x) → CompletedRequirements(x))",
      "∀x (¬SubmittedReport(x) → ¬AllowedSubmitReport(x))",
      "∀x (EligibleSeminar(x) → HasBothCertifications(x))"
    ],
    "choices": [
      "If someone is eligible for the seminar, they have completed registration requirements.",
      "Everyone who submits a report has both certifications.",
      "Someone eligible for the seminar has both certifications.",
      "Not registering for the seminar means you have certifications."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about student eligibility?"
    ],
    "premises-NL": [
      "If x does not attend the orientation, then x is not eligible to register for the next academic year",
      "All students are required to attend the orientation",
      "If all students are required to attend the orientation, then if x does not attend, then x is not eligible to register",
      "If (all students required to attend implies non-attendance leads to ineligibility), then non-attendance leads to ineligibility",
      "If a student is not required to attend the orientation, then they are not eligible to register"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ¬AttendsOrientation(x) → ¬EligibleToRegister(x))",
      "ForAll(x, Student(x) → RequiredToAttend(x))",
      "ForAll(x, Student(x) → RequiredToAttend(x)) → ForAll(x, ¬AttendsOrientation(x) → ¬EligibleToRegister(x))",
      "(ForAll(x, Student(x) → RequiredToAttend(x)) → ForAll(x, ¬AttendsOrientation(x) → ¬EligibleToRegister(x))) → ForAll(x, ¬AttendsOrientation(x) → ¬EligibleToRegister(x))",
      "ForAll(x, Student(x) ∧ ¬RequiredToAttend(x) → ¬EligibleToRegister(x))"
    ],
    "choices": [
      "All students are eligible to register.",
      "Some students are not eligible to register.",
      "No students are eligible to register.",
      "Eligibility to register depends on year level."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about healthcare eligibility?"
    ],
    "premises-NL": [
      "If x is not required to attend the healthcare appointment, then x does not attend the appointment",
      "If x is not eligible for healthcare services, then x is not registered for healthcare services",
      "All individuals are required to attend the healthcare appointment",
      "If (not required to attend the appointment implies not attending), then all individuals are required to attend the appointment",
      "If (not required to attend implies not attending) then all individuals must attend the appointment",
      "If x is required to attend the appointment, then x is eligible for healthcare services",
      "Everyone is registered for healthcare services"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ¬RequiredToAttend(x) → ¬AttendsAppointment(x))",
      "ForAll(x, ¬EligibleForServices(x) → ¬RegisteredForServices(x))",
      "ForAll(x, RequiredToAttend(x))",
      "ForAll(x, ¬RequiredToAttend(x) → ¬AttendsAppointment(x)) → ForAll(x, RequiredToAttend(x))",
      "ForAll(x, ¬RequiredToAttend(x) → ¬AttendsAppointment(x)) → ForAll(x, AttendsAppointment(x))",
      "ForAll(x, RequiredToAttend(x) → EligibleForServices(x))",
      "ForAll(x, RegisteredForServices(x))"
    ],
    "choices": [
      "All individuals are eligible for healthcare services.",
      "Some individuals are not eligible for healthcare services.",
      "No individuals are eligible for healthcare services.",
      "Eligibility depends on attending the appointment."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students and the subject?"
    ],
    "premises-NL": [
      "If x attends the lab for the subject, then x is required to attend the lab for the subject.",
      "There exists a student who is enrolled in the subject.",
      "If (being enrolled in the subject implies attending the lab), then (not being enrolled implies not attending the lab).",
      "If x attends the lab, then x completes the subject successfully.",
      "If x attends the lab, then x is enrolled in the subject."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (A(x) → R(x))",
      "∃x (S(x) ∧ E(x))",
      "(∀x (E(x) → A(x))) → ∀x (¬E(x) → ¬A(x)))",
      "∀x (A(x) → C(x))",
      "∀x (A(x) → E(x)))"
    ],
    "choices": [
      "If a student is enrolled, they complete the subject successfully.",
      "If a student attends the lab, they are not enrolled.",
      "All students are required to attend the lab.",
      "No student completes the subject successfully."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "There exists a student who actively searches for lectures to help in studying.",
      "All students are actively engaged in studying.",
      "There exists a student who successfully finds lectures to help in studying.",
      "If a student actively searches for lectures, then they successfully find them.",
      "If x attends classes regularly, then x improves their understanding by finding lectures.",
      "If x does not improve their understanding, then x has not found lectures to help in studying."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ A(x))",
      "∀x (S(x) → E(x))",
      "∃x (S(x) ∧ F(x))",
      "∀x ((S(x) ∧ A(x)) → F(x))",
      "∀x (C(x) → (I(x) ∧ F(x)))",
      "∀x (¬I(x) → ¬F(x))"
    ],
    "choices": [
      "If a student attends classes regularly, they successfully find lectures.",
      "If a student is engaged in studying, they improve their understanding.",
      "All students actively search for lectures.",
      "No student finds lectures to help in studying."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "There exists a student who has received the company stamp for their internship.",
      "There exists a student who has received feedback from the company for their internship.",
      "If x completes the necessary internship requirements, then x has received the company stamp for their internship.",
      "If x completes the necessary internship requirements, then x has received feedback from the company.",
      "If x has received the company stamp, then x has received feedback from the company."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ T(x))",
      "∃x (S(x) ∧ F(x))",
      "∀x (C(x) → T(x))",
      "∀x (C(x) → F(x))",
      "∀x (T(x) → F(x))"
    ],
    "choices": [
      "If a student has feedback, they completed the internship requirements.",
      "If a student has the stamp, they have feedback.",
      "All students have the company stamp.",
      "No student has feedback."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "If x has not paid the fees, then x raised an issue about paying fees.",
      "All students have paid the fees.",
      "All students are required to pay the fees.",
      "If x completed the payment, then x received confirmation of payment.",
      "If x did not pay the fees, then x is not eligible for training."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬P(x) → I(x))",
      "∀x (S(x) → P(x))",
      "∀x (S(x) → R(x))",
      "∀x (C(x) → F(x))",
      "∀x (¬P(x) → ¬T(x))"
    ],
    "choices": [
      "All students are eligible for training.",
      "All students raised issues about paying fees.",
      "No students received confirmation of payment.",
      "All students are not eligible for training."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "All students complete exercises.",
      "All students complete assignments.",
      "If x has completed all course activities, then x has passed the course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → E(x))",
      "∀x (S(x) → A(x))",
      "∀x (C(x) → P(x))"
    ],
    "choices": [
      "All students have passed the course.",
      "All students complete exercises but not assignments.",
      "No students complete assignments.",
      "No students have passed the course."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "If x does not donate blood on the university campus, then x does not receive social work points for graduation.",
      "If x is not involved in social work, then x does not donate blood on the university campus.",
      "If x is eligible for receiving social work points, then x is involved in social work activities.",
      "All students donate blood on the university campus.",
      "If x participates in university activities, then x earns graduation points."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬D(x) → ¬P(x))",
      "∀x (¬W(x) → ¬D(x))",
      "∀x (E(x) → W(x))",
      "∀x (S(x) → D(x))",
      "∀x (A(x) → G(x))"
    ],
    "choices": [
      "All students receive social work points.",
      "All students are eligible for social work points.",
      "No students are involved in social work.",
      "No students donate blood."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "All students pay the required fees within the specified period.",
      "If x does not pay the required fees, then x is not allowed to continue studies at the university.",
      "If x is not allowed to continue studying, then x has not paid the fees."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → P(x))",
      "∀x (¬P(x) → ¬C(x))",
      "∀x (¬C(x) → ¬P(x))"
    ],
    "choices": [
      "All students are allowed to continue studying.",
      "All students do not pay the required fees.",
      "No students are allowed to continue studying.",
      "Some students pay the fees but cannot continue studying."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "All students have completed all quizzes.",
      "If x finishes all quizzes, then x is eligible for the final exam.",
      "If x completes all course requirements, then x is eligible for the final exam.",
      "If x has not completed all course requirements, then x has not completed all quizzes.",
      "If x has not finished all quizzes, then x is not eligible for the final exam."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → Q(x))",
      "∀x (Q(x) → E(x))",
      "∀x (C(x) → E(x))",
      "∀x (¬C(x) → ¬Q(x))",
      "∀x (¬Q(x) → ¬E(x))"
    ],
    "choices": [
      "All students are eligible for the final exam.",
      "All students have not completed course requirements.",
      "No students are eligible for the final exam.",
      "Some students complete quizzes but are not eligible."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "All students are required to wear a blouse in the chemistry lab.",
      "If x is enrolled in the chemistry course, then x has met the safety requirements for the lab.",
      "All students are enrolled in the chemistry course.",
      "If x does not wear a blouse, then x is not enrolled in the chemistry course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → B(x))",
      "∀x (E(x) → R(x))",
      "∀x (S(x) → E(x))",
      "∀x (¬B(x) → ¬E(x))"
    ],
    "choices": [
      "All students have met the safety requirements for the lab.",
      "All students are not enrolled in the chemistry course.",
      "No students are required to wear a blouse in the lab.",
      "Some students meet safety requirements but do not wear a blouse."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "There exists a student who is careful with the food at the university canteen.",
      "If x does not consume food at the canteen, then x does not get sick from eating the food.",
      "There exists a student who eats food from the canteen.",
      "If x is not careful with the food, then x is not careful with the food at the university canteen."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ C(x))",
      "∀x (¬E(x) → ¬K(x))",
      "∃x (S(x) ∧ E(x))",
      "∀x (¬F(x) → ¬C(x))"
    ],
    "choices": [
      "All students who eat food from the canteen get sick.",
      "All students are careful with the food at the canteen.",
      "No students eat food from the canteen.",
      "Some students do not get sick from eating canteen food."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "If x is enrolled in a course, then x completes the course successfully.",
      "All students complete the course successfully.",
      "There exists a student who is eligible for graduation.",
      "If x has completed all course requirements, then x is eligible for graduation."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x (E(x) → C(x))",
      "∀x (S(x) → C(x))",
      "∃x (S(x) ∧ G(x))",
      "∀x (R(x) → G(x))"
    ],
    "choices": [
      "All students are eligible for graduation.",
      "All students are enrolled in a course.",
      "No students complete the course successfully.",
      "Some students complete the course but are not eligible for graduation."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "There exists a student who is enrolled in a course.",
      "If x is enrolled in a course, then x has passed the course.",
      "If x has not completed the prerequisite for the course, then x is not eligible for the next course.",
      "If x is working on a project, then x completes the project successfully."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ E(x))",
      "∀x (E(x) → P(x))",
      "∀x (¬R(x) → ¬N(x))",
      "∀x (W(x) → C(x))"
    ],
    "choices": [
      "All students are enrolled in a course.",
      "All students have passed the course.",
      "Some students are eligible for the next course.",
      "Some students work on a project but don’t complete it."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students based on the premises?"
    ],
    "premises-NL": [
      "All students use the library from 12:00 PM to 1:00 PM for sleeping.",
      "If x uses the library for sleeping, then x sleeps in the library during the designated time.",
      "If x does not use the library for sleeping, then x is not allowed to sleep in the library."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → U(x))",
      "∀x (U(x) → L(x))",
      "∀x (¬U(x) → ¬A(x))"
    ],
    "choices": [
      "All students sleep in the library during the designated time.",
      "All students are allowed to sleep in the library.",
      "No students use the library for sleeping.",
      "Some students are not allowed to sleep in the library."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If x is not enrolled in the university, then x does not complete their studies successfully",
      "There exists a student who is enrolled in the university",
      "All students are actively studying",
      "All students attend all required lectures"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬E(x) → ¬C(x))",
      "∃x (S(x) ∧ E(x))",
      "∀x (S(x) → A(x))",
      "∀x (S(x) → L(x))"
    ],
    "choices": [
      "Some students complete their studies successfully",
      "All students are enrolled in the university",
      "Some students are not actively studying",
      "Some students do not attend all required lectures"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about individuals?"
    ],
    "premises-NL": [
      "All individuals are engaged in educational activities",
      "If x does not complete assignments, then x has not successfully completed a task or requirement",
      "All individuals have successfully completed tasks or requirements",
      "If x is enrolled in a course, then x is engaged in an educational activity",
      "There exists an individual enrolled in a course"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x E(x)",
      "∀x (¬A(x) → ¬T(x))",
      "∀x T(x)",
      "∀x (C(x) → E(x))",
      "∃x C(x)"
    ],
    "choices": [
      "All individuals complete assignments",
      "All individuals are enrolled in a course",
      "Some individuals do not complete tasks",
      "Some individuals are not engaged in educational activities"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "There exists a student who is applying for a scholarship",
      "If x has not completed all required tasks for the scholarship, then x has not received a scholarship",
      "If x is applying for a scholarship, then x has received a scholarship",
      "There exists a student who has completed all required tasks for the scholarship",
      "If x is eligible for the scholarship, then x has received a scholarship"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ A(x))",
      "∀x (¬T(x) → ¬R(x))",
      "∀x (A(x) → R(x))",
      "∃x (S(x) ∧ T(x))",
      "∀x (E(x) → R(x))"
    ],
    "choices": [
      "All students applying for a scholarship have completed all required tasks",
      "All students have received a scholarship",
      "Some students apply but have not received a scholarship",
      "Some students are eligible but have not received a scholarship"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If x is not studying offline, then x does not successfully complete offline study tasks",
      "If x is not studying online, then x does not successfully complete online study tasks",
      "There exists a student who successfully completes offline study tasks",
      "If x is studying online, then x is able to effectively manage offline and online study time",
      "If x is not successfully completing offline study tasks, then x is not completing online study tasks"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬F(x) → ¬T(x))",
      "∀x (¬N(x) → ¬O(x))",
      "∃x (S(x) ∧ T(x))",
      "∀x (N(x) → M(x))",
      "∀x (¬T(x) → ¬O(x))"
    ],
    "choices": [
      "Some students study offline",
      "All students complete online study tasks",
      "Some students do not complete offline tasks",
      "All students manage offline and online study time effectively"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If x is not studying offline, then x does not successfully complete offline study tasks",
      "If x is not studying online, then x does not successfully complete online study tasks",
      "There exists a student who successfully completes offline study tasks",
      "If x is studying online, then x is able to effectively manage offline and online study time",
      "If x is not successfully completing offline study tasks, then x is not completing online study tasks"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬F(x) → ¬T(x))",
      "∀x (¬N(x) → ¬O(x))",
      "∃x (S(x) ∧ T(x))",
      "∀x (N(x) → M(x))",
      "∀x (¬T(x) → ¬O(x))"
    ],
    "choices": [
      "Some students study offline",
      "All students study online",
      "Some students do not complete offline tasks",
      "All students manage offline and online study time effectively"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student lacks training, then they lack problem-solving skills.",
      "All students are undergoing training.",
      "If a student has problem-solving skills, then they have foundational knowledge.",
      "If a student has university readiness, then they have problem-solving skills."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ ¬participates_training(x) → ¬problem_solving_skills(x))",
      "∀x (Student(x) → participates_training(x))",
      "∀x (Student(x) ∧ problem_solving_skills(x) → foundational_knowledge(x))",
      "∀x (Student(x) ∧ university_ready(x) → problem_solving_skills(x))"
    ],
    "choices": [
      "Some students with problem-solving skills lack university readiness.",
      "All students with problem-solving skills have university readiness.",
      "If a student is trained, they have university readiness.",
      "If problem-solving skills imply university readiness, then training implies problem-solving skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student has training, then they have skills.",
      "All students have training.",
      "Some students have reasoning skills if any student has skills.",
      "All students have proficiency.",
      "If a student has proficiency, then they have qualifications.",
      "If a student lacks qualifications, then they lack understanding."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ training(x) → skills(x))",
      "∀x (Student(x) → training(x))",
      "∀x (Student(x) ∧ skills(x) → ∃y (Student(y) ∧ reasoning_skills(y)))",
      "∀x (Student(x) → proficiency(x))",
      "∀x (Student(x) ∧ proficiency(x) → qualifications(x))",
      "∀x (Student(x) ∧ ¬qualifications(x) → ¬understanding(x))"
    ],
    "choices": [
      "If no student lacks skills, then no student has reasoning skills.",
      "If lacking qualifications means lacking skills, then some student has reasoning skills.",
      "Some students lack reasoning skills despite having skills.",
      "All students with skills have reasoning skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student has training, then they have skills.",
      "All students have training.",
      "Some students have reasoning skills if any student has skills.",
      "All students have proficiency.",
      "If a student has proficiency, then they have qualifications.",
      "If a student lacks qualifications, then they lack understanding."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ training(x) → skills(x))",
      "∀x (Student(x) → training(x))",
      "∀x (Student(x) ∧ skills(x) → ∃y (Student(y) ∧ reasoning_skills(y)))",
      "∀x (Student(x) → proficiency(x))",
      "∀x (Student(x) ∧ proficiency(x) → qualifications(x))",
      "∀x (Student(x) ∧ ¬qualifications(x) → ¬understanding(x))"
    ],
    "choices": [
      "If no student lacks skills, then no student has reasoning skills.",
      "If lacking qualifications means lacking skills, then some student has reasoning skills.",
      "Some students lack reasoning skills despite having skills.",
      "All students with skills have reasoning skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students receive training.",
      "If a student does not receive training, then they do not have a research foundation.",
      "At least one student has completed a course.",
      "At least one student is certified.",
      "If a student does not receive training, then they do not have pedagogical skills.",
      "If a student does not receive training, then they are not certified.",
      "If a student lacks pedagogical skills, then they cannot teach.",
      "If a student is not certified, then they cannot teach.",
      "If a student has pedagogical skills, then they have received training.",
      "All students have pedagogical skills.",
      "If a student cannot teach, then they lack a research foundation.",
      "If at least one student is certified, then if a lack of research foundation leads to not being certified, then not being able to teach leads to a lack of research foundation.",
      "If a student has completed a course, then the above logical rule holds true.",
      "All students are certified."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x student(x) → receives_training(x)",
      "∀x (¬receives_training(x) → ¬research_foundation(x))",
      "∃x completed_course(x)",
      "∃x certified(x)",
      "∀x (¬receives_training(x) → ¬pedagogical_skills(x))",
      "∀x (¬receives_training(x) → ¬certified(x))",
      "∀x (¬pedagogical_skills(x) → ¬can_teach(x))",
      "∀x (¬certified(x) → ¬can_teach(x))",
      "∀x (pedagogical_skills(x) → receives_training(x))",
      "∀x pedagogical_skills(x)",
      "∀x (¬can_teach(x) → ¬research_foundation(x))",
      "(∃x certified(x)) → ((∀x (¬research_foundation(x) → ¬certified(x))) → (∀x (¬can_teach(x) → ¬research_foundation(x))))",
      "∀x (completed_course(x) → ((∃x certified(x)) → ((∀x (¬research_foundation(x) → ¬certified(x))) → (∀x (¬can_teach(x) → ¬research_foundation(x))))))",
      "∀x certified(x)"
    ],
    "choices": [
      "((¬certified(x) → ¬can_teach(x)) ∧ ¬(¬can_teach(x) → ¬research_foundation(x)))",
      "((¬certified(x) → ¬can_teach(x)) → (¬can_teach(x) → ¬research_foundation(x)))",
      "((¬can_teach(x) → ¬research_foundation(x)) → (¬certified(x) → ¬can_teach(x)))",
      "¬((¬certified(x) → ¬can_teach(x)) → (¬can_teach(x) → ¬research_foundation(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students have knowledge.",
      "At least one student conducts research.",
      "If a student conducts research, then they publish papers.",
      "At least one student publishes papers.",
      "If a student teaches, then they conduct research.",
      "All students conduct research.",
      "If a student has knowledge, then they teach.",
      "If a student does not publish papers, then they do not give seminars.",
      "If a student does not teach, then they do not understand the subject.",
      "At least one student teaches.",
      "If a student publishes papers, then they conduct research.",
      "At least one student has knowledge.",
      "If having knowledge leads to teaching, then teaching leads to conducting research.",
      "If at least one student teaches, then at least one student conducts research.",
      "All students teach.",
      "If a student has knowledge, then they give seminars."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x knowledge(x)",
      "∃x conducts_research(x)",
      "∀x (conducts_research(x) → publishes_papers(x))",
      "∃x publishes_papers(x)",
      "∀x (teaches(x) → conducts_research(x))",
      "∀x conducts_research(x)",
      "∀x (knowledge(x) → teaches(x))",
      "∀x (¬publishes_papers(x) → ¬gives_seminars(x))",
      "∀x (¬teaches(x) → ¬understands_subject(x))",
      "∃x teaches(x)",
      "∀x (publishes_papers(x) → conducts_research(x))",
      "∃x knowledge(x)",
      "(∀x (knowledge(x) → teaches(x))) → (∀x (teaches(x) → conducts_research(x)))",
      "(∃x teaches(x)) → (∃x conducts_research(x))",
      "∀x teaches(x)",
      "∀x (knowledge(x) → gives_seminars(x))"
    ],
    "choices": [
      "∀x (publishes_papers(x) → teaches(x))",
      "(∀x (teaches(x) → publishes_papers(x)) ∧ ¬∀x (teaches(x) → publishes_papers(x)))",
      "∀x (teaches(x) → publishes_papers(x))",
      "¬∀x (teaches(x) → publishes_papers(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student completes prerequisite courses, then they are eligible for advanced training.",
      "There exists at least one student who is eligible for advanced training.",
      "There exists at least one student who has received a qualification.",
      "If a student does not meet the requirements, then they do not receive a qualification.",
      "If a student completes prerequisite courses, then they are able to conduct research.",
      "If a student does not meet the requirements, then they do not engage in training.",
      "All students complete prerequisite courses.",
      "If a student meets the requirements, then they engage in independent learning.",
      "If a student meets the requirements, then they receive a qualification.",
      "If a student receives a qualification, then they meet the requirements.",
      "All students meet the requirements.",
      "If a student meets the requirements, then they engage in training.",
      "If the inability to meet the requirements leads to the inability to receive a qualification, then the inability to receive a qualification leads to the inability to conduct research.",
      "If the inability to engage in training leads to the inability to receive a qualification, then the inability to receive a qualification leads to the inability to conduct research.",
      "If a student meets the requirements, then they engage in training.",
      "If a student completes prerequisite courses, then they can engage in training."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (C(x) → E(x))",
      "∃x E(x)",
      "∃x P(x)",
      "∀x (¬Q(x) → ¬P(x))",
      "∀x (C(x) → R(x))",
      "∀x (¬Q(x) → ¬T(x))",
      "∀x C(x)",
      "∀x (Q(x) → U(x))",
      "∀x (Q(x) → P(x))",
      "∀x (P(x) → Q(x))",
      "∀x Q(x)",
      "∀x (Q(x) → T(x))",
      "∀x ((¬Q(x) → ¬P(x)) → (¬P(x) → ¬R(x)))",
      "∀x ((¬T(x) → ¬P(x)) → (¬P(x) → ¬R(x)))",
      "∀x (Q(x) → T(x))",
      "∀x (C(x) → T(x))"
    ],
    "choices": [
      "∀x (R(x) → P(x))",
      "(∀x (P(x) → R(x)) ∧ ¬∀x (P(x) → R(x)))",
      "∀x (P(x) → R(x))",
      "¬∀x (P(x) → R(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not receive a qualification, then they cannot conduct research.",
      "There exists at least one student who is engaged in training.",
      "If a student does not meet the requirements, then they do not receive a qualification.",
      "There exists at least one student who has received a qualification.",
      "If a student does not receive a qualification, then they cannot participate in advanced seminars.",
      "If a student does not engage in independent learning, then they cannot conduct research.",
      "If a student is engaged in training, then they receive a qualification.",
      "If a student engages in independent learning, then they meet the requirements.",
      "There exists at least one student who is participating in advanced seminars.",
      "If a student does not receive a qualification, then they do not engage in independent learning.",
      "There exists at least one student who is conducting research.",
      "All students receive qualifications.",
      "If independent learning leads to meeting the requirements, then lack of qualification leads to inability to conduct research.",
      "If the lack of meeting requirements leads to no qualification, then lack of qualification leads to no participation in advanced seminars.",
      "If a student does not participate in advanced seminars, then they cannot conduct research.",
      "All students are engaged in training."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (¬P(x) → ¬R(x))",
      "∃x T(x)",
      "∀x (¬Q(x) → ¬P(x))",
      "∃x P(x)",
      "∀x (¬P(x) → ¬S(x))",
      "∀x (¬U(x) → ¬R(x))",
      "∀x (T(x) → P(x))",
      "∀x (U(x) → Q(x))",
      "∃x S(x)",
      "∀x (¬P(x) → ¬U(x))",
      "∃x R(x)",
      "∀x P(x)",
      "∀x ((U(x) → Q(x)) → (¬P(x) → ¬R(x)))",
      "∀x ((¬Q(x) → ¬P(x)) → (¬P(x) → ¬S(x)))",
      "∀x (¬S(x) → ¬R(x))",
      "∀x T(x)"
    ],
    "choices": [
      "∀x (S(x) → Q(x))",
      "(∀x (Q(x) → S(x)) ∧ ¬∀x (Q(x) → S(x)))",
      "∀x (Q(x) → S(x))",
      "¬∀x (Q(x) → S(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students must undergo training.",
      "If a student is trained, then they can conduct research.",
      "If a student is trained, then they can participate in a seminar.",
      "All students are trained.",
      "If a student conducts research, then they receive a qualification.",
      "There exists at least one student who has received a qualification.",
      "There exists at least one student who is trained.",
      "All students conduct research.",
      "There exists at least one student who is conducting research.",
      "If a student does not participate in training, then they cannot conduct research.",
      "If a student does not participate in self-study, then they cannot conduct research.",
      "All students participate in self-study.",
      "If participating in self-study leads to conducting research, then students who do not participate in self-study cannot conduct research.",
      "If participating in self-study leads to receiving qualifications, then students who do not participate in self-study cannot receive a qualification.",
      "If a student does not participate in self-study, they cannot participate in seminars.",
      "There exists at least one student who is participating in self-study."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x T(x)",
      "∀x (T(x) → R(x))",
      "∀x (T(x) → U(x))",
      "∀x T(x)",
      "∀x (R(x) → P(x))",
      "∃x P(x)",
      "∃x T(x)",
      "∀x R(x)",
      "∃x R(x)",
      "∀x (¬T(x) → ¬R(x))",
      "∀x (¬S(x) → ¬R(x))",
      "∀x S(x)",
      "∀x ((S(x) → R(x)) → (¬S(x) → ¬R(x)))",
      "∀x ((S(x) → P(x)) → (¬S(x) → ¬P(x)))",
      "∀x (¬S(x) → ¬U(x))",
      "∃x S(x)"
    ],
    "choices": [
      "∀x (P(x) → S(x))",
      "∀x (S(x) → P(x))",
      "¬∀x (S(x) → P(x))",
      "(∀x (S(x) → P(x)) ∧ ¬∀x (S(x) → P(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students engage in self-study.",
      "If a student participates in research, then they publish papers.",
      "If a student participates in research, then they engage in training.",
      "All students engage in training.",
      "If a student conducts research, then they receive a qualification.",
      "There exists at least one student who has received a qualification.",
      "There exists at least one student who is engaged in training.",
      "All students receive a qualification.",
      "There exists at least one student who is conducting research.",
      "If a student does not engage in training, then they cannot participate in research.",
      "If a student does not engage in self-study, then they cannot receive a qualification.",
      "All students participate in self-study.",
      "If training leads to receiving a qualification, then the inability to participate in self-study leads to the inability to receive a qualification.",
      "If the inability to engage in self-study leads to not receiving a qualification, then the inability to participate in training leads to the inability to conduct research.",
      "If a student participates in self-study, then they are engaged in research.",
      "If a student does not participate in self-study, then they cannot participate in training."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x S(x)",
      "∀x (R(x) → U(x))",
      "∀x (R(x) → T(x))",
      "∀x T(x)",
      "∀x (R(x) → P(x))",
      "∃x P(x)",
      "∃x T(x)",
      "∀x P(x)",
      "∃x R(x)",
      "∀x (¬T(x) → ¬R(x))",
      "∀x (¬S(x) → ¬P(x))",
      "∀x S(x)",
      "∀x ((T(x) → P(x)) → (¬S(x) → ¬P(x)))",
      "∀x ((¬S(x) → ¬P(x)) → (¬T(x) → ¬R(x)))",
      "∀x (S(x) → R(x))",
      "∀x (¬S(x) → ¬T(x))"
    ],
    "choices": [
      "∀x (T(x) → R(x))",
      "∀x (S(x) → P(x))",
      "¬∀x (S(x) → P(x))",
      "(∀x (S(x) → P(x)) ∧ ¬∀x (S(x) → P(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student receives a qualification, then they engage in training.",
      "If a student does not participate in self-study, then they cannot conduct research.",
      "If a student does not engage in independent learning, then they cannot conduct research.",
      "If a student participates in self-study, then they engage in independent learning.",
      "All students engage in self-study.",
      "If a student participates in research, then they receive a qualification.",
      "If a student does not engage in independent learning, then they cannot participate in self-study.",
      "If a student participates in research, then they engage in self-study.",
      "If a student receives a qualification, then they participate in self-study.",
      "If a student does not engage in research, then they cannot receive a qualification.",
      "All students engage in research.",
      "If a student does not participate in self-study, then they cannot engage in research.",
      "If a student does not participate in self-study, then they cannot receive a qualification.",
      "If a student does not participate in self-study, then they cannot participate in independent learning.",
      "If a student engages in research, then they receive a qualification."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (P(x) → T(x))",
      "∀x (¬S(x) → ¬R(x))",
      "∀x (¬U(x) → ¬R(x))",
      "∀x (S(x) → U(x))",
      "∀x S(x)",
      "∀x (R(x) → P(x))",
      "∀x (¬U(x) → ¬S(x))",
      "∀x (R(x) → S(x))",
      "∀x (P(x) → S(x))",
      "∀x (¬R(x) → ¬P(x))",
      "∀x R(x)",
      "∀x (¬S(x) → ¬R(x))",
      "∀x (¬S(x) → ¬P(x))",
      "∀x (¬S(x) → ¬U(x))",
      "∀x (R(x) → P(x))"
    ],
    "choices": [
      "∀x (T(x) → R(x))",
      "¬∀x (S(x) → P(x))",
      "∀x (S(x) → P(x))",
      "(∀x (S(x) → P(x)) ∧ ¬∀x (S(x) → P(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student completes prerequisite courses, then they are eligible for advanced training.",
      "There exists at least one student who has received a qualification.",
      "There exists at least one student who has completed prerequisite courses.",
      "All students are required to undergo training.",
      "All students participate in self-study.",
      "There exists at least one student engaged in independent research.",
      "If a student does not undergo training, then they cannot conduct research.",
      "If a student completes prerequisite courses, then they receive a qualification.",
      "If a student conducts research, then they engage in independent learning.",
      "If a student does not undergo training, then they cannot engage in independent learning.",
      "All students must obtain qualifications.",
      "If a student undergoes training, then they participate in self-study.",
      "If the inability to undergo training leads to the inability to conduct research, then at least one student must receive a qualification.",
      "If there exists at least one student engaged in independent research, then the inability to undergo training leads to the inability to conduct research.",
      "If a student undergoes training, then they engage in independent learning.",
      "If a student completes prerequisite courses, then they are able to conduct research."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (C(x) → T(x))",
      "∃x Q(x)",
      "∃x C(x)",
      "∀x T(x)",
      "∀x S(x)",
      "∃x R(x)",
      "∀x (¬T(x) → ¬R(x))",
      "∀x (C(x) → Q(x))",
      "∀x (R(x) → U(x))",
      "∀x (¬T(x) → ¬U(x))",
      "∀x Q(x)",
      "∀x (T(x) → S(x))",
      "(∀x (¬T(x) → ¬R(x))) → ∃x Q(x)",
      "∃x R(x) → ∀x (¬T(x) → ¬R(x))",
      "∀x (T(x) → U(x))",
      "∀x (C(x) → R(x))"
    ],
    "choices": [
      "∀x (R(x) → Q(x))",
      "∀x (Q(x) → R(x))",
      "¬∀x (R(x) → Q(x))",
      "(∀x (R(x) → Q(x)) ∧ ¬∀x (R(x) → Q(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who participates in extracurricular activities.",
      "All students participate in extracurricular activities.",
      "There exists at least one student who has completed prerequisite courses.",
      "If a student participates in extracurricular activities, then they engage in self-study.",
      "All students engage in self-study.",
      "If a student engages in self-study, then they develop critical thinking skills.",
      "If a student does not undergo training, then they do not engage in self-study.",
      "If a student does not undergo training, then they cannot conduct research.",
      "There exists at least one student who conducts research.",
      "If a student cannot conduct research, then they do not participate in extracurricular activities.",
      "If a student undergoes training, then they have completed prerequisite courses.",
      "All students must complete prerequisite courses.",
      "If there exists at least one student who participates in extracurricular activities, then the inability to undergo training leads to the inability to conduct research.",
      "If participation in extracurricular activities leads to self-study, then all students must participate in extracurricular activities.",
      "All students engage in research.",
      "All students undergo training."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x E(x)",
      "∀x E(x)",
      "∃x C(x)",
      "∀x (E(x) → S(x))",
      "∀x S(x)",
      "∀x (S(x) → K(x))",
      "∀x (¬T(x) → ¬S(x))",
      "∀x (¬T(x) → ¬R(x))",
      "∃x R(x)",
      "∀x (¬R(x) → ¬E(x))",
      "∀x (T(x) → C(x))",
      "∀x C(x)",
      "∃x E(x) → ∀x (¬T(x) → ¬R(x))",
      "(∀x (E(x) → S(x))) → ∀x E(x)",
      "∀x R(x)",
      "∀x T(x)"
    ],
    "choices": [
      "∀x (S(x) → R(x))",
      "∀x (R(x) → S(x))",
      "¬∀x (S(x) → R(x))",
      "(∀x (S(x) → R(x)) ∧ ¬∀x (S(x) → R(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students engage in self-study.",
      "All students undergo training.",
      "There exists at least one student who engages in self-study.",
      "All students participate in projects.",
      "If a student does not undergo training, then they do not engage in extracurricular activities.",
      "If a student does not engage in self-study, then they do not undergo training.",
      "If a student participates in extracurricular activities, then they take part in projects.",
      "There exists at least one student who undergoes training.",
      "All students participate in extracurricular activities.",
      "If a student participates in extracurricular activities, then they contribute to research.",
      "If a student meets a certain qualification, then they engage in self-study.",
      "If a student contributes to research, then they engage in self-study.",
      "If contributing to research leads to self-study, then participating in extracurricular activities leads to research involvement.",
      "If all students participate in projects, then contributing to research leads to self-study.",
      "If a student engages in self-study, then they participate in extracurricular activities.",
      "There exists at least one student who contributes to research."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x S(x)",
      "∀x T(x)",
      "∃x S(x)",
      "∀x P(x)",
      "∀x (¬T(x) → ¬E(x))",
      "∀x (¬S(x) → ¬T(x))",
      "∀x (E(x) → P(x))",
      "∃x T(x)",
      "∀x E(x)",
      "∀x (E(x) → R(x))",
      "∀x (Q(x) → S(x))",
      "∀x (R(x) → S(x))",
      "∀x ((R(x) → S(x)) → (E(x) → R(x)))",
      "∀x P(x) → ∀x (R(x) → S(x))",
      "∀x (S(x) → E(x))",
      "∃x R(x)"
    ],
    "choices": [
      "∀x (S(x) → R(x))",
      "∀x (P(x) → T(x))",
      "¬∀x (S(x) → R(x))",
      "(∀x (S(x) → R(x)) ∧ ¬∀x (S(x) → R(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student has training, then they have proficiency.",
      "If a student lacks qualifications, then they lack proficiency.",
      "All students have qualifications.",
      "If a student lacks understanding, then they lack skills.",
      "There exists at least one student with skills.",
      "There exists at least one student with proficiency.",
      "If a student lacks proficiency, then they lack qualifications.",
      "If a student has skills, then they have understanding.",
      "If a student lacks training, then they lack proficiency.",
      "All students have understanding.",
      "If a student has understanding, then they have qualifications.",
      "If a student lacks proficiency, then they lack recognition.",
      "If lacking proficiency leads to lacking recognition, then lacking qualifications leads to lacking proficiency.",
      "If lacking training leads to lacking proficiency, then training leads to proficiency.",
      "If a student has proficiency, then they receive recognition.",
      "If a student has understanding, then they have skills."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (T(x) → P(x))",
      "∀x (¬Q(x) → ¬P(x))",
      "∀x Q(x)",
      "∀x (¬U(x) → ¬S(x))",
      "∃x S(x)",
      "∃x P(x)",
      "∀x (¬P(x) → ¬Q(x))",
      "∀x (S(x) → U(x))",
      "∀x (¬T(x) → ¬P(x))",
      "∀x U(x)",
      "∀x (U(x) → Q(x))",
      "∀x (¬P(x) → ¬R(x))",
      "∀x ((¬P(x) → ¬R(x)) → (¬Q(x) → ¬P(x)))",
      "∀x ((¬T(x) → ¬P(x)) → (T(x) → P(x)))",
      "∀x (P(x) → R(x))",
      "∀x (U(x) → S(x))"
    ],
    "choices": [
      "∀x (R(x) → T(x))",
      "¬∀x (T(x) → R(x))",
      "∀x (T(x) → R(x))",
      "(∀x (T(x) → R(x)) ∧ ¬∀x (T(x) → R(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students are enrolled in courses.",
      "If a student lacks research, then they lack proficiency.",
      "If a student submits assignments, then they demonstrate knowledge.",
      "If a student lacks participation, then they lack engagement.",
      "There exists at least one student who participates in discussions.",
      "There exists at least one student who has proficiency.",
      "If a student lacks proficiency, then they lack research.",
      "If a student engages, then they have understanding.",
      "If a student lacks training, then they lack proficiency.",
      "All students have access to resources.",
      "If a student has access to resources, then they complete assignments.",
      "If a student lacks proficiency, then they lack certification.",
      "If lacking proficiency leads to lacking certification, then lacking research leads to lacking proficiency.",
      "If lacking training leads to lacking proficiency, then training leads to proficiency.",
      "If a student has proficiency, then they obtain certification.",
      "If a student has access to resources, then they can conduct research."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x E(x)",
      "∀x (¬R(x) → ¬P(x))",
      "∀x (A(x) → K(x))",
      "∀x (¬N(x) → ¬G(x))",
      "∃x D(x)",
      "∃x P(x)",
      "∀x (¬P(x) → ¬R(x))",
      "∀x (G(x) → U(x))",
      "∀x (¬T(x) → ¬P(x))",
      "∀x S(x)",
      "∀x (S(x) → A(x))",
      "∀x (¬P(x) → ¬C(x))",
      "∀x ((¬P(x) → ¬C(x)) → (¬R(x) → ¬P(x)))",
      "∀x ((¬T(x) → ¬P(x)) → (T(x) → P(x)))",
      "∀x (P(x) → C(x))",
      "∀x (S(x) → R(x))"
    ],
    "choices": [
      "∀x (K(x) → S(x))",
      "¬∀x (S(x) → K(x))",
      "∀x (S(x) → K(x))",
      "(∀x (S(x) → K(x)) ∧ ¬∀x (S(x) → K(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student with recognition.",
      "If a student lacks skills, then they lack training.",
      "All students have recognition.",
      "There exists at least one student with training.",
      "If a student lacks proficiency, then they lack skills.",
      "There exists at least one student with skills.",
      "If a student lacks recognition, then they lack qualifications.",
      "If a student has recognition, then they have understanding.",
      "All students have skills.",
      "There exists at least one student with qualifications.",
      "All students have qualifications.",
      "If a student has recognition, then they have qualifications.",
      "If all students have recognition, then all students have skills.",
      "If recognition leads to understanding, then there exists at least one student with recognition.",
      "If a student has proficiency, then they have recognition.",
      "If a student has proficiency, then they have qualifications."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x R(x)",
      "∀x (¬S(x) → ¬T(x))",
      "∀x R(x)",
      "∃x T(x)",
      "∀x (¬P(x) → ¬S(x))",
      "∃x S(x)",
      "∀x (¬R(x) → ¬Q(x))",
      "∀x (R(x) → U(x))",
      "∀x S(x)",
      "∃x Q(x)",
      "∀x Q(x)",
      "∀x (R(x) → Q(x))",
      "∀x R(x) → ∀x S(x)",
      "∀x (R(x) → U(x)) → ∃x R(x)",
      "∀x (P(x) → R(x))",
      "∀x (P(x) → Q(x))"
    ],
    "choices": [
      "∀x (S(x) → R(x))",
      "∀x (R(x) → S(x))",
      "¬∀x (R(x) → S(x))",
      "(∀x (R(x) → S(x)) ∧ ¬∀x (R(x) → S(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students have qualifications.",
      "All students have recognition.",
      "If a student lacks understanding, then they lack recognition.",
      "There exists at least one student with proficiency.",
      "All students have training.",
      "If a student has qualifications, then they have recognition.",
      "If a student has proficiency, then they have qualifications.",
      "There exists at least one student with training.",
      "If a student lacks qualifications, then they lack training.",
      "If a student has proficiency, then they have training.",
      "If a student has training, then they have qualifications.",
      "If a student lacks training, then they lack proficiency.",
      "If lacking training leads to lacking proficiency, then proficiency leads to training.",
      "If lacking understanding leads to lacking recognition, then proficiency leads to qualifications.",
      "There exists at least one student with understanding.",
      "If a student lacks understanding, then they lack training."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x Q(x)",
      "∀x R(x)",
      "∀x (¬U(x) → ¬R(x))",
      "∃x P(x)",
      "∀x T(x)",
      "∀x (Q(x) → R(x))",
      "∀x (P(x) → Q(x))",
      "∃x T(x)",
      "∀x (¬Q(x) → ¬T(x))",
      "∀x (P(x) → T(x))",
      "∀x (T(x) → Q(x))",
      "∀x (¬T(x) → ¬P(x))",
      "∀x ((¬T(x) → ¬P(x)) → (P(x) → T(x)))",
      "∀x ((¬U(x) → ¬R(x)) → (P(x) → Q(x)))",
      "∃x U(x)",
      "∀x (¬U(x) → ¬T(x))"
    ],
    "choices": [
      "∀x (U(x) → P(x))",
      "¬∀x (P(x) → U(x))",
      "∀x (P(x) → U(x))",
      "(∀x (P(x) → U(x)) ∧ ¬∀x (P(x) → U(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students have understanding.",
      "There exists at least one student with training.",
      "If a student has understanding, then they have reasoning skills.",
      "All students have skills.",
      "There exists at least one student with understanding.",
      "If a student lacks skills, then they lack proficiency.",
      "There exists at least one student with skills.",
      "If a student has reasoning skills, then they have understanding.",
      "If a student lacks training, then they lack understanding.",
      "If a student lacks understanding, then they lack reasoning skills.",
      "If a student lacks qualifications, then they lack proficiency.",
      "If a student lacks training, then they lack qualifications.",
      "If there exists at least one student with understanding, then there exists at least one student with training.",
      "If there exists at least one student with skills, then lacking understanding leads to lacking reasoning skills.",
      "If a student lacks reasoning skills, then they lack training.",
      "If a student has proficiency, then they have understanding."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x U(x)",
      "∃x T(x)",
      "∀x (U(x) → R(x))",
      "∀x S(x)",
      "∃x U(x)",
      "∀x (¬S(x) → ¬P(x))",
      "∃x S(x)",
      "∀x (R(x) → U(x))",
      "∀x (¬T(x) → ¬U(x))",
      "∀x (¬U(x) → ¬R(x))",
      "∀x (¬Q(x) → ¬P(x))",
      "∀x (¬T(x) → ¬Q(x))",
      "∃x U(x) → ∃x T(x)",
      "∃x S(x) → ∀x (¬U(x) → ¬R(x))",
      "∀x (¬R(x) → ¬T(x))",
      "∀x (P(x) → U(x))"
    ],
    "choices": [
      "∀x (R(x) → T(x))",
      "∀x (T(x) → R(x))",
      "¬∀x (R(x) → T(x))",
      "(∀x (R(x) → T(x)) ∧ ¬∀x (R(x) → T(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students adhere to HCMUT's code of conduct.",
      "There are vibrant student clubs at HCMUT.",
      "If a student upholds HCMUT's values, then they adhere to HCMUT's code of conduct.",
      "If there are vibrant student clubs at HCMUT, then all students adhere to HCMUT's code of conduct.",
      "If (If there are vibrant student clubs at HCMUT, then all students adhere to HCMUT's code of conduct) is true, then there are vibrant student clubs at HCMUT.",
      "If a student is an executive member of a student club, then they uphold HCMUT's values.",
      "If a student is familiar with HCMUT's code of conduct, then they adhere to HCMUT's code of conduct."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AdheresToCodeOfConduct(x))",
      "∃x VibrantStudentClub(x)",
      "∀x (UpholdsHCMUTValues(x) → AdheresToCodeOfConduct(x))",
      "(∃x VibrantStudentClub(x) → ∀y (Student(y) → AdheresToCodeOfConduct(y)))",
      "((∃x VibrantStudentClub(x) → ∀y (Student(y) → AdheresToCodeOfConduct(y))) → ∃z VibrantStudentClub(z))",
      "∀x (ClubExecutiveMember(x) → UpholdsHCMUTValues(x))",
      "∀x (FamiliarWithCodeOfConduct(x) → AdheresToCodeOfConduct(x))"
    ],
    "choices": [
      "If a student is familiar with HCMUT's code of conduct, then they adhere to HCMUT's code of conduct, and if they adhere to the code of conduct, they uphold HCMUT's values.",
      "If a student is familiar with HCMUT's code of conduct, then they adhere to HCMUT's code of conduct, but if they adhere to the code of conduct, they do not uphold HCMUT's values.",
      "If a student is familiar with HCMUT's code of conduct, then they adhere to HCMUT's code of conduct, and if there are vibrant student clubs at HCMUT, then all students adhere to HCMUT's code of conduct.",
      "If a student is familiar with HCMUT's code of conduct, then they adhere to HCMUT's code of conduct, but if there are vibrant student clubs at HCMUT, then not all students adhere to HCMUT's code of conduct."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is enrolled in a university program, then the student has access to academic resources.",
      "There exists at least one student who is participating in an internship program.",
      "There exists at least one student who has completed a research project.",
      "If a student is enrolled in a university program and has access to academic resources, then there exists at least one student who is participating in an internship program.",
      "If a student is enrolled in a university program and has access to academic resources, then there exists at least one student who has completed a research project.",
      "There exists at least one student who is enrolled in a university program.",
      "If a student is conducting research, then the student has completed a research project."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "(Enrolled(x) → HasAccessResources(x))",
      "Exists(x, Internship(x))",
      "Exists(x, ResearchCompleted(x))",
      "((Enrolled(x) ∧ HasAccessResources(x)) → Exists(y, Internship(y)))",
      "((Enrolled(x) ∧ HasAccessResources(x)) → Exists(y, ResearchCompleted(y)))",
      "Exists(x, Enrolled(x))",
      "(Researching(x) → ResearchCompleted(x))"
    ],
    "choices": [
      "If a student is enrolled in a university program and has access to academic resources, then there exists at least one student who has completed a research project, and there exists at least one student who is participating in an internship program.",
      "If a student is enrolled in a university program and has access to academic resources, then there exists at least one student who has completed a research project, but there does not exist at least one student who is participating in an internship program.",
      "If a student is enrolled in a university program and has access to academic resources, then there exists at least one student who has completed a research project, and if a student is conducting research, then the student has completed a research project.",
      "If a student is enrolled in a university program and has access to academic resources, then there exists at least one student who has completed a research project, but if a student is conducting research, then the student has not completed a research project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is enrolled in a course, then they have access to study materials.",
      "There exists at least one student who is enrolled in a course.",
      "Every student has access to study materials.",
      "If every student has access to study materials, then there exists at least one student who is enrolled in a course.",
      "If (a student being enrolled in a course implies they have access to study materials), then (if every student has access to study materials, there exists at least one student enrolled in a course).",
      "If a student doesn’t have a scholarship, then they don’t pay full tuition.",
      "If a student doesn’t have access to study materials, then they don’t have a scholarship."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "EnrolledInCourse(x) → HasAccessToMaterials(x)",
      "∃x EnrolledInCourse(x)",
      "∀x HasAccessToMaterials(x)",
      "∀x HasAccessToMaterials(x) → ∃x EnrolledInCourse(x)",
      "∀x (EnrolledInCourse(x) → HasAccessToMaterials(x)) → (∀x HasAccessToMaterials(x) → ∃x EnrolledInCourse(x))",
      "¬HasScholarship(x) → ¬PaysFullTuition(x)",
      "¬HasAccessToMaterials(x) → ¬HasScholarship(x)"
    ],
    "choices": [
      "If a student is enrolled in a course, then they have access to study materials, and if every student has access to study materials, then there exists at least one student who is enrolled in a course.",
      "If a student is enrolled in a course, then they have access to study materials, but if every student has access to study materials, then there does not exist at least one student who is enrolled in a course.",
      "If a student is enrolled in a course, then they have access to study materials, and if a student doesn’t have a scholarship, then they don’t pay full tuition.",
      "If a student is enrolled in a course, then they have access to study materials, but if a student doesn’t have a scholarship, then they pay full tuition."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is not studying, then they are not revising.",
      "If a student is not understanding the material, then they are not revising.",
      "There exists at least one student who is taking an exam.",
      "If (a student not understanding the material implies they are not revising), then (a student not studying implies they are not revising).",
      "If (a student not studying implies they are not revising), then there exists at least one student who is taking an exam.",
      "If a student is revising, then they are taking an exam.",
      "If a student is asking questions, then they are understanding the material."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬IsStudying(x) → ¬IsRevising(x))",
      "∀x (¬IsUnderstandingMaterial(x) → ¬IsRevising(x))",
      "∃x IsTakingExam(x)",
      "(∀x (¬IsUnderstandingMaterial(x) → ¬IsRevising(x)) → ∀y (¬IsStudying(y) → ¬IsRevising(y)))",
      "(∀x (¬IsStudying(x) → ¬IsRevising(x)) → ∃z IsTakingExam(z))",
      "∀x (IsRevising(x) → IsTakingExam(x))",
      "∀x (IsAskingQuestions(x) → IsUnderstandingMaterial(x))"
    ],
    "choices": [
      "If a student is not studying, then they are not revising, and if a student is not understanding the material, then they are not revising.",
      "If a student is not studying, then they are not revising, but if a student is not understanding the material, then they are revising.",
      "If a student is not studying, then they are not revising, and if a student is revising, then they are taking an exam.",
      "If a student is not studying, then they are not revising, but if a student is revising, then they are not taking an exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who is studying.",
      "There exists at least one student who is preparing for an exam.",
      "If a student is not teaching, then they are not preparing for an exam.",
      "If there exists at least one student who is preparing for an exam, then there exists at least one student who is studying.",
      "If there exists at least one student who is studying, then there exists at least one student who is preparing for an exam.",
      "Every student is asking questions.",
      "There exists at least one student who is asking questions."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x IsStudying(x)",
      "∃x IsPreparingForExam(x)",
      "∀x (¬IsTeaching(x) → ¬IsPreparingForExam(x))",
      "(∃x IsPreparingForExam(x) → ∃y IsStudying(y))",
      "(∃x IsStudying(x) → ∃y IsPreparingForExam(y))",
      "∀x IsAskingQuestions(x)",
      "∃x IsAskingQuestions(x)"
    ],
    "choices": [
      "If there exists at least one student who is studying, then there exists at least one student who is preparing for an exam, and if there exists at least one student who is preparing for an exam, then there exists at least one student who is studying.",
      "If there exists at least one student who is studying, then there exists at least one student who is preparing for an exam, but if there exists at least one student who is preparing for an exam, then there does not exist at least one student who is studying.",
      "If there exists at least one student who is studying, then there exists at least one student who is preparing for an exam, and every student is asking questions.",
      "If there exists at least one student who is studying, then there exists at least one student who is preparing for an exam, but not every student is asking questions."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student is attending tutorials.",
      "There exists at least one student who is revising.",
      "If a student is revising, then they are studying.",
      "If every student is attending tutorials, then (if a student is revising, they are studying).",
      "If there exists at least one student who is revising, then (if a student is revising, they are studying).",
      "If a student is studying, then they are revising.",
      "There exists at least one student who is preparing for an exam."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x IsAttendingTutorials(x)",
      "∃x IsRevising(x)",
      "∀x (IsRevising(x) → IsStudying(x))",
      "(∀x IsAttendingTutorials(x) → ∀y (IsRevising(y) → IsStudying(y)))",
      "(∃x IsRevising(x) → ∀y (IsRevising(y) → IsStudying(y)))",
      "∀x (IsStudying(x) → IsRevising(x))",
      "∃x IsPreparingForExam(x)"
    ],
    "choices": [
      "If there exists at least one student who is revising, then if a student is revising, they are studying, and if a student is studying, then they are revising.",
      "If there exists at least one student who is revising, then if a student is revising, they are studying, but if a student is studying, then they are not revising.",
      "If there exists at least one student who is revising, then if a student is revising, they are studying, and every student is attending tutorials.",
      "If there exists at least one student who is revising, then if a student is revising, they are studying, but not every student is attending tutorials."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is not understanding the material, then they are not attending tutorials.",
      "If a student is preparing for an exam, then they are asking questions.",
      "If a student is not studying, then they are not attending tutorials.",
      "If (a student preparing for an exam implies they are asking questions), then (a student not understanding the material implies they are not attending tutorials).",
      "If (a student preparing for an exam implies they are asking questions), then (a student not studying implies they are not attending tutorials).",
      "If a student is not revising, then they are not preparing for an exam.",
      "If a student is not attending tutorials, then they are not revising."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬IsUnderstandingMaterial(x) → ¬IsAttendingTutorials(x))",
      "∀x (IsPreparingForExam(x) → IsAskingQuestions(x))",
      "∀x (¬IsStudying(x) → ¬IsAttendingTutorials(x))",
      "(∀x (IsPreparingForExam(x) → IsAskingQuestions(x)) → ∀y (¬IsUnderstandingMaterial(y) → ¬IsAttendingTutorials(y)))",
      "(∀x (IsPreparingForExam(x) → IsAskingQuestions(x)) → ∀z (¬IsStudying(z) → ¬IsAttendingTutorials(z)))",
      "∀x (¬IsRevising(x) → ¬IsPreparingForExam(x))",
      "∀x (¬IsAttendingTutorials(x) → ¬IsRevising(x))"
    ],
    "choices": [
      "If a student is preparing for an exam, then they are asking questions, and if a student is not studying, then they are not attending tutorials.",
      "If a student is preparing for an exam, then they are asking questions, but if a student is not studying, then they are attending tutorials.",
      "If a student is preparing for an exam, then they are asking questions, and if a student is not revising, then they are not preparing for an exam.",
      "If a student is preparing for an exam, then they are asking questions, but if a student is not revising, then they are preparing for an exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is preparing for an exam, then they are understanding the material.",
      "If a student is studying, then they are asking questions.",
      "Every student is attending tutorials.",
      "If (a student studying implies they are asking questions), then every student is attending tutorials.",
      "If (a student preparing for an exam implies they are understanding the material), then every student is attending tutorials.",
      "Every student is preparing for an exam.",
      "If a student is understanding the material, then they are revising."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (IsPreparingForExam(x) → IsUnderstandingMaterial(x))",
      "∀x (IsStudying(x) → IsAskingQuestions(x))",
      "∀x IsAttendingTutorials(x)",
      "(∀x (IsStudying(x) → IsAskingQuestions(x)) → ∀y IsAttendingTutorials(y))",
      "(∀x (IsPreparingForExam(x) → IsUnderstandingMaterial(x)) → ∀y IsAttendingTutorials(y))",
      "∀x IsPreparingForExam(x)",
      "∀x (IsUnderstandingMaterial(x) → IsRevising(x))"
    ],
    "choices": [
      "If a student is preparing for an exam, then they are understanding the material, and every student is attending tutorials.",
      "If a student is preparing for an exam, then they are understanding the material, but not every student is attending tutorials.",
      "If a student is preparing for an exam, then they are understanding the material, and if a student is understanding the material, then they are revising.",
      "If a student is preparing for an exam, then they are understanding the material, but if a student is understanding the material, then they are not revising."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student is preparing for an exam.",
      "If a student is not asking questions, then they are not attending tutorials.",
      "There exists at least one student who is attending tutorials.",
      "If (a student not asking questions implies they are not attending tutorials), then there exists at least one student who is attending tutorials.",
      "If there exists at least one student who is attending tutorials, then (if a student is not asking questions, they are not attending tutorials).",
      "Every student is understanding the material.",
      "There exists at least one student who is preparing for an exam."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x IsPreparingForExam(x)",
      "∀x (¬IsAskingQuestions(x) → ¬IsAttendingTutorials(x))",
      "∃x IsAttendingTutorials(x)",
      "(∀x (¬IsAskingQuestions(x) → ¬IsAttendingTutorials(x)) → ∃y IsAttendingTutorials(y))",
      "(∃x IsAttendingTutorials(x) → ∀y (¬IsAskingQuestions(y) → ¬IsAttendingTutorials(y)))",
      "∀x IsUnderstandingMaterial(x)",
      "∃x IsPreparingForExam(x)"
    ],
    "choices": [
      "If there exists at least one student who is attending tutorials, then if a student is not asking questions, they are not attending tutorials, and every student is preparing for an exam.",
      "If there exists at least one student who is attending tutorials, then if a student is not asking questions, they are not attending tutorials, but not every student is preparing for an exam.",
      "If there exists at least one student who is attending tutorials, then if a student is not asking questions, they are not attending tutorials, and every student is understanding the material.",
      "If there exists at least one student who is attending tutorials, then if a student is not asking questions, they are not attending tutorials, but not every student is understanding the material."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is not revising, then they are not studying.",
      "If a student is not revising, then they are not asking questions.",
      "There exists at least one student who is asking questions.",
      "If there exists at least one student who is asking questions, then (if a student is not revising, they are not asking questions).",
      "If there exists at least one student who is asking questions, then (if a student is not revising, they are not studying).",
      "If a student is not asking questions, then they are not preparing for an exam.",
      "If a student is asking questions, then they are revising."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬IsRevising(x) → ¬IsStudying(x))",
      "∀x (¬IsRevising(x) → ¬IsAskingQuestions(x))",
      "∃x IsAskingQuestions(x)",
      "(∃x IsAskingQuestions(x) → ∀y (¬IsRevising(y) → ¬IsAskingQuestions(y)))",
      "(∃x IsAskingQuestions(x) → ∀y (¬IsRevising(y) → ¬IsStudying(y)))",
      "∀x (¬IsAskingQuestions(x) → ¬IsPreparingForExam(x))",
      "∀x (IsAskingQuestions(x) → IsRevising(x))"
    ],
    "choices": [
      "If there exists at least one student who is asking questions, then if a student is not revising, they are not studying, and if a student is not revising, then they are not asking questions.",
      "If there exists at least one student who is asking questions, then if a student is not revising, they are not studying, but if a student is not revising, then they are asking questions.",
      "If there exists at least one student who is asking questions, then if a student is not revising, they are not studying, and if a student is asking questions, then they are revising.",
      "If there exists at least one student who is asking questions, then if a student is not revising, they are not studying, but if a student is asking questions, then they are not revising."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is not studying, then they are not asking questions.",
      "If a student is attending tutorials, then they are understanding the material.",
      "There exists at least one student who is asking questions.",
      "If (a student attending tutorials implies they are understanding the material), then there exists at least one student who is asking questions.",
      "If (a student attending tutorials implies they are understanding the material), then (if a student attending tutorials implies they are understanding the material, there exists at least one student who is asking questions).",
      "There exists at least one student who is preparing for an exam.",
      "Every student is studying."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬IsStudying(x) → ¬IsAskingQuestions(x))",
      "∀x (IsAttendingTutorials(x) → IsUnderstandingMaterial(x))",
      "∃x IsAskingQuestions(x)",
      "(∀x (IsAttendingTutorials(x) → IsUnderstandingMaterial(x)) → ∃y IsAskingQuestions(y))",
      "(∀x (IsAttendingTutorials(x) → IsUnderstandingMaterial(x)) → (∀z (IsAttendingTutorials(z) → IsUnderstandingMaterial(z)) → ∃w IsAskingQuestions(w)))",
      "∃x IsPreparingForExam(x)",
      "∀x IsStudying(x)"
    ],
    "choices": [
      "If a student is attending tutorials, then they are understanding the material, and there exists at least one student who is asking questions.",
      "If a student is attending tutorials, then they are understanding the material, but there does not exist at least one student who is asking questions.",
      "If a student is attending tutorials, then they are understanding the material, and every student is studying.",
      "If a student is attending tutorials, then they are understanding the material, but not every student is studying."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student is studying.",
      "If a student is attending tutorials, then they are understanding the material.",
      "There exists at least one student who is understanding the material.",
      "If (a student attending tutorials implies they are understanding the material), then every student is studying.",
      "If there exists at least one student who is understanding the material, then (if a student is attending tutorials, they are understanding the material).",
      "There exists at least one student who is preparing for an exam.",
      "If a student is revising, then they are studying."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x IsStudying(x)",
      "∀x (IsAttendingTutorials(x) → IsUnderstandingMaterial(x))",
      "∃x IsUnderstandingMaterial(x)",
      "(∀x (IsAttendingTutorials(x) → IsUnderstandingMaterial(x)) → ∀y IsStudying(y))",
      "(∃x IsUnderstandingMaterial(x) → ∀y (IsAttendingTutorials(y) → IsUnderstandingMaterial(y)))",
      "∃x IsPreparingForExam(x)",
      "∀x (IsRevising(x) → IsStudying(x))"
    ],
    "choices": [
      "If there exists at least one student who is understanding the material, then if a student is attending tutorials, they are understanding the material, and every student is studying.",
      "If there exists at least one student who is understanding the material, then if a student is attending tutorials, they are understanding the material, but not every student is studying.",
      "If there exists at least one student who is understanding the material, then if a student is attending tutorials, they are understanding the material, and if a student is revising, then they are studying.",
      "If there exists at least one student who is understanding the material, then if a student is attending tutorials, they are understanding the material, but if a student is revising, then they are not studying."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student is understanding the material.",
      "Every student is asking questions.",
      "Every student is revising."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x IsUnderstandingMaterial(x)",
      "∀x IsAskingQuestions(x)",
      "∀x IsRevising(x)"
    ],
    "choices": [
      "All students are both revising and understanding the material.",
      "Some students are revising but not understanding the material.",
      "No students are revising or understanding the material.",
      "Understanding the material implies not revising."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student is attending tutorials, then they are revising.",
      "Every student is revising.",
      "If a student is not understanding the material, then they are not revising.",
      "If (a student not understanding the material implies they are not revising), then (a student attending tutorials implies they are revising).",
      "If (the statement that 'if a student not understanding the material implies they are not revising, then a student attending tutorials implies they are revising') is true, then (if a student is not understanding the material, they are not revising).",
      "There exists at least one student who is revising.",
      "If a student is not revising, then they are not attending tutorials."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (IsAttendingTutorials(x) → IsRevising(x))",
      "∀x IsRevising(x)",
      "∀x (¬IsUnderstandingMaterial(x) → ¬IsRevising(x))",
      "(∀x (¬IsUnderstandingMaterial(x) → ¬IsRevising(x)) → ∀y (IsAttendingTutorials(y) → IsRevising(y)))",
      "((∀x (¬IsUnderstandingMaterial(x) → ¬IsRevising(x)) → ∀y (IsAttendingTutorials(y) → IsRevising(y))) → ∀z (¬IsUnderstandingMaterial(z) → ¬IsRevising(z)))",
      "∃x IsRevising(x)",
      "∀x (¬IsRevising(x) → ¬IsAttendingTutorials(x))"
    ],
    "choices": [
      "If a student is not understanding the material, then they are not revising, and if a student is attending tutorials, then they are revising.",
      "If a student is not understanding the material, then they are not revising, but if a student is attending tutorials, then they are not revising.",
      "If a student is not understanding the material, then they are not revising, and every student is revising.",
      "If a student is not understanding the material, then they are not revising, but not every student is revising."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a university student is revising, then they are preparing for an exam.",
      "Every university student is asking questions.",
      "If a university student is studying, then they are understanding the material.",
      "If (a university student revising implies they are preparing for an exam), then (a university student studying implies they are understanding the material).",
      "If (the statement that 'if a university student revising implies they are preparing for an exam, then a university student studying implies they are understanding the material') is true, then (if a university student is studying, they are understanding the material).",
      "There exists at least one university student who is studying.",
      "If a university student is understanding the material, then they are asking questions."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (UniversityStudent(x) → (IsRevising(x) → IsPreparingForExam(x)))",
      "∀x (UniversityStudent(x) → IsAskingQuestions(x))",
      "∀x (UniversityStudent(x) → (IsStudying(x) → IsUnderstandingMaterial(x)))",
      "(∀x (UniversityStudent(x) → (IsRevising(x) → IsPreparingForExam(x))) → ∀y (UniversityStudent(y) → (IsStudying(y) → IsUnderstandingMaterial(y))))",
      "((∀x (UniversityStudent(x) → (IsRevising(x) → IsPreparingForExam(x))) → ∀y (UniversityStudent(y) → (IsStudying(y) → IsUnderstandingMaterial(y)))) → ∀z (UniversityStudent(z) → (IsStudying(z) → IsUnderstandingMaterial(z))))",
      "∃x (UniversityStudent(x) ∧ IsStudying(x))",
      "∀x (UniversityStudent(x) → (IsUnderstandingMaterial(x) → IsAskingQuestions(x)))"
    ],
    "choices": [
      "If a university student is revising, then they are preparing for an exam, and if a university student is studying, then they are understanding the material.",
      "If a university student is revising, then they are preparing for an exam, but if a university student is studying, then they are not understanding the material.",
      "If a university student is revising, then they are preparing for an exam, and if a university student is understanding the material, then they are asking questions.",
      "If a university student is revising, then they are preparing for an exam, but if a university student is understanding the material, then they are not asking questions."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student is studying.",
      "There exists at least one student who is attending tutorials.",
      "There exists at least one student who is revising.",
      "If there exists at least one student who is attending tutorials, then every student is studying.",
      "If there exists at least one student who is revising, then every student is studying.",
      "Every student is attending tutorials.",
      "If a student is not revising, then they are not asking questions."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x IsStudying(x)",
      "∃x IsAttendingTutorials(x)",
      "∃x IsRevising(x)",
      "(∃x IsAttendingTutorials(x) → ∀y IsStudying(y))",
      "(∃x IsRevising(x) → ∀y IsStudying(y))",
      "∀x IsAttendingTutorials(x)",
      "∀x (¬IsRevising(x) → ¬IsAskingQuestions(x))"
    ],
    "choices": [
      "If there exists at least one student who is revising, then every student is studying, and every student is attending tutorials.",
      "If there exists at least one student who is revising, then every student is studying, but not every student is attending tutorials.",
      "If there exists at least one student who is revising, then every student is studying, and if a student is not revising, then they are not asking questions.",
      "If there exists at least one student who is revising, then every student is studying, but if a student is not revising, then they are asking questions."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a high school student studies math diligently, then they understand trigonometry.",
      "There exists at least one high school student who understands trigonometry.",
      "If a high school student is not proficient in algebra, then they will not ace calculus.",
      "If (if a high school student is not proficient in algebra, then they will not ace calculus), then there exists at least one high school student who understands trigonometry.",
      "If (if (if a high school student is not proficient in algebra, then they will not ace calculus), then there exists at least one high school student who understands trigonometry), then there exists at least one high school student who understands trigonometry.",
      "If a high school student does not practice math problems regularly, then they will not ace calculus.",
      "If a high school student does not practice math problems regularly, then they do not study math diligently."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(StudiesMathDiligently(x) → UnderstandsTrigonometry(x))",
      "Exists(x, UnderstandsTrigonometry(x))",
      "(¬IsProficientInAlgebra(x) → ¬AcesCalculus(x))",
      "((¬IsProficientInAlgebra(x) → ¬AcesCalculus(x)) → Exists(x, UnderstandsTrigonometry(x)))",
      "(((¬IsProficientInAlgebra(x) → ¬AcesCalculus(x)) → Exists(x, UnderstandsTrigonometry(x))) → Exists(x, UnderstandsTrigonometry(x)))",
      "(¬PracticesMathRegularly(x) → ¬AcesCalculus(x))",
      "(¬PracticesMathRegularly(x) → ¬StudiesMathDiligently(x))"
    ],
    "choices": [
      "If a high school student is not proficient in algebra, then they will not ace calculus, and if a high school student studies math diligently, then they understand trigonometry.",
      "If a high school student is not proficient in algebra, then they will not ace calculus, but if a high school student studies math diligently, then they do not understand trigonometry.",
      "If a high school student is not proficient in algebra, then they will not ace calculus, and there exists at least one high school student who understands trigonometry.",
      "If a high school student is not proficient in algebra, then they will not ace calculus, but there does not exist at least one high school student who understands trigonometry."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every high school student is studious.",
      "Every high school student participates in extracurricular activities.",
      "Every high school student upholds school values.",
      "If every high school student upholds school values, then every high school student is studious.",
      "If every high school student is studious, then every high school student upholds school values.",
      "If a high school student does not join school clubs, then they do not participate in extracurricular activities.",
      "If a high school student does not volunteer in community events, then they do not uphold school values."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (HighSchoolStudent(x) → IsStudious(x))",
      "∀x (HighSchoolStudent(x) → ParticipatesInExtracurriculars(x))",
      "∀x (HighSchoolStudent(x) → UpholdsSchoolValues(x))",
      "(∀x (HighSchoolStudent(x) → UpholdsSchoolValues(x)) → ∀y (HighSchoolStudent(y) → IsStudious(y)))",
      "(∀x (HighSchoolStudent(x) → IsStudious(x)) → ∀y (HighSchoolStudent(y) → UpholdsSchoolValues(y)))",
      "∀x (HighSchoolStudent(x) → (¬JoinsSchoolClubs(x) → ¬ParticipatesInExtracurriculars(x)))",
      "∀x (HighSchoolStudent(x) → (¬VolunteersInCommunityEvents(x) → ¬UpholdsSchoolValues(x)))"
    ],
    "choices": [
      "Every high school student is studious, and if every high school student is studious, then every high school student upholds school values.",
      "Every high school student is studious, but if every high school student is studious, then every high school student does not uphold school values.",
      "Every high school student is studious, and every high school student participates in extracurricular activities.",
      "Every high school student is studious, but not every high school student participates in extracurricular activities."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every high school student is diligent.",
      "If a high school student attends tutoring sessions, then they improve their grades.",
      "There exists at least one high school student who attends tutoring sessions.",
      "If every high school student is diligent, then (if a high school student attends tutoring sessions, then they improve their grades).",
      "If (if a high school student attends tutoring sessions, then they improve their grades), then every high school student is diligent.",
      "Every high school student is inquisitive.",
      "If a high school student improves their grades, then they achieve academic success."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x IsDiligent(x)",
      "∀x (IsAttendingTutoring(x) → ImprovesGrades(x))",
      "∃x IsAttendingTutoring(x)",
      "(∀x IsDiligent(x) → ∀y (IsAttendingTutoring(y) → ImprovesGrades(y)))",
      "(∀x (IsAttendingTutoring(x) → ImprovesGrades(x)) → ∀y IsDiligent(y))",
      "∀x IsInquisitive(x)",
      "∀x (ImprovesGrades(x) → AchievesAcademicSuccess(x))"
    ],
    "choices": [
      "If a high school student attends tutoring sessions, then they improve their grades, and every high school student is diligent.",
      "If a high school student attends tutoring sessions, then they improve their grades, but not every high school student is diligent.",
      "If a high school student attends tutoring sessions, then they improve their grades, and every high school student is inquisitive.",
      "If a high school student attends tutoring sessions, then they improve their grades, but not every high school student is inquisitive."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "There exists at least one student who has completed the Educational Psychology course",
      "All students are enrolled in the Teacher Education program",
      "All students possess basic teaching skills",
      "If a student has not completed the Educational Psychology course, then that student does not meet the professional teaching standards"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ C(x))",
      "∀x (S(x) → E(x))",
      "∀x (S(x) → T(x))",
      "∀x (S(x) → (¬C(x) → ¬P(x)))"
    ],
    "choices": [
      "Some students meet professional teaching standards",
      "Some students do not possess basic teaching skills",
      "All students have completed the Educational Psychology course",
      "Some students are not enrolled in the Teacher Education program"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "All students are enrolled in a thesis-based program",
      "There exists at least one student who has participated in a research project",
      "If a student has not passed the Research Methodology course, then they are not eligible to apply for graduate scholarships",
      "If a student has not submitted a research proposal, then that student has not participated in a research project",
      "There exists at least one student who has passed the Research Methodology course"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → T(x))",
      "∃x (S(x) ∧ R(x))",
      "∀x (S(x) → (¬M(x) → ¬G(x)))",
      "∀x (S(x) → (¬P(x) → ¬R(x)))",
      "∃x (S(x) ∧ M(x))"
    ],
    "choices": [
      "Some students have submitted a research proposal",
      "All students have passed the Research Methodology course",
      "Some students are not enrolled in a thesis-based program",
      "All students are eligible to apply for graduate scholarships"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about online students?"
    ],
    "premises-NL": [
      "All online students have logged into the online learning platform",
      "There exists at least one online student who has completed a module quiz",
      "If an online student has logged into the learning platform, then they have viewed at least one lecture video",
      "There exists at least one online student who has submitted a course feedback form"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → L(x))",
      "∃x (S(x) ∧ Q(x))",
      "∀x (S(x) → (L(x) → V(x)))",
      "∃x (S(x) ∧ F(x))"
    ],
    "choices": [
      "Some online students have viewed at least one lecture video",
      "All online students have completed a module quiz",
      "Some online students have not logged into the platform",
      "All online students have submitted a course feedback form"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "All students follow the classroom rules",
      "There exists at least one student who is a member of the student council",
      "All students receive positive participation marks"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → R(x))",
      "∃x (S(x) ∧ C(x))",
      "∀x (S(x) → P(x))"
    ],
    "choices": [
      "Some students are members of the student council",
      "All students complete all assignments on time",
      "Some students do not follow the classroom rules",
      "Some students do not receive positive participation marks"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has submitted all required assignments, then they are eligible to take the end-of-term quiz",
      "If a student has not attended the required number of classes, then they are not eligible to take the end-of-term quiz",
      "If a student is eligible to take the end-of-term quiz, then they are qualified for the academic achievement award",
      "All students have attended the required number of classes",
      "If a student has volunteered in school activities, then they receive a community engagement certificate"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (A(x) → E(x)))",
      "∀x (S(x) → (¬C(x) → ¬E(x)))",
      "∀x (S(x) → (E(x) → Q(x)))",
      "∀x (S(x) → C(x))",
      "∀x (S(x) → (V(x) → M(x)))"
    ],
    "choices": [
      "Some students are eligible to take the end-of-term quiz",
      "All students are qualified for the academic achievement award",
      "Some students have not submitted all required assignments",
      "All students have volunteered in school activities"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has not reviewed the course materials, then they are not well-prepared for class discussions",
      "All students participate actively in class",
      "All students are well-prepared for class discussions"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (¬R(x) → ¬W(x)))",
      "∀x (S(x) → P(x))",
      "∀x (S(x) → W(x))"
    ],
    "choices": [
      "All students have reviewed the course materials",
      "Some students have not participated actively in class",
      "Some students are not well-prepared for class discussions",
      "All students have joined a study group"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about participants?"
    ],
    "premises-NL": [
      "If a participant has completed the registration form, then they have received the necessary safety briefing",
      "All participants have completed the registration form",
      "All participants are equipped with proper outdoor gear",
      "If a participant has not signed the liability waiver, then they have not completed the registration form"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (P(x) → (R(x) → S(x)))",
      "∀x (P(x) → R(x))",
      "∀x (P(x) → G(x))",
      "∀x (P(x) → (¬W(x) → ¬R(x)))"
    ],
    "choices": [
      "All participants have signed the liability waiver",
      "Some participants have not received the safety briefing",
      "Some participants are not equipped with proper outdoor gear",
      "All participants have not completed the registration form"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has not submitted the group contract, then they are not considered an active group member",
      "If a student has been invited to the group, then they have agreed to join the group for the assignment",
      "All students have agreed to join a group for the assignment",
      "If a student has not been invited to the group, then they are not considered an active group member"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (¬C(x) → ¬M(x)))",
      "∀x (S(x) → (I(x) → A(x)))",
      "∀x (S(x) → A(x))",
      "∀x (S(x) → (¬I(x) → ¬M(x)))"
    ],
    "choices": [
      "All students have been invited to the group",
      "Some students have not agreed to join a group",
      "Some students are not considered active group members",
      "All students have submitted the group contract"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "All students meet the seminar's eligibility criteria",
      "If a student has not submitted a complete seminar application, then they will not be selected to attend the seminar",
      "All students have shown interest in the seminar"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → E(x))",
      "∀x (S(x) → (¬A(x) → ¬T(x)))",
      "∀x (S(x) → I(x))"
    ],
    "choices": [
      "All students meet the seminar's eligibility criteria",
      "Some students do not meet the seminar's eligibility criteria",
      "Some students have not submitted a complete seminar application",
      "Some students have not shown interest in the seminar"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has not registered for the festival, then they do not have access to festival activities",
      "If a student has not received a festival invitation, then they have not registered for the festival",
      "If a student is attending the university festival, then they have access to festival activities",
      "All students are attending the university festival"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (¬R(x) → ¬A(x)))",
      "∀x (S(x) → (¬I(x) → ¬R(x)))",
      "∀x (S(x) → (F(x) → A(x)))",
      "∀x (S(x) → F(x))"
    ],
    "choices": [
      "All students have received a festival invitation",
      "Some students do not have access to festival activities",
      "Some students are not attending the university festival",
      "All students have not registered for the festival"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has submitted a scholarship application, then they are eligible for the scholarship",
      "If a student has not maintained a good academic standing, then they will not be shortlisted for an interview",
      "There exists at least one student who has maintained a good academic standing",
      "If a student has not maintained a good academic standing, then they will not receive the scholarship",
      "There exists at least one student who has submitted a scholarship application"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (A(x) → E(x)))",
      "∀x (S(x) → (¬G(x) → ¬I(x)))",
      "∃x (S(x) ∧ G(x))",
      "∀x (S(x) → (¬G(x) → ¬R(x)))",
      "∃x (S(x) ∧ A(x))"
    ],
    "choices": [
      "Some students are eligible for the scholarship",
      "All students have maintained a good academic standing",
      "Some students will not be shortlisted for an interview",
      "All students have submitted a scholarship application"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has requested permission to be absent, then they are officially granted that permission",
      "If a student has not requested permission, then they are not granted permission to be absent",
      "All students have requested permission to be absent from class",
      "There exists at least one student who provided a valid reason for absence"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (R(x) → P(x)))",
      "∀x (S(x) → (¬R(x) → ¬P(x)))",
      "∀x (S(x) → R(x))",
      "∃x (S(x) ∧ V(x))"
    ],
    "choices": [
      "All students are officially granted permission to be absent",
      "Some students have not requested permission to be absent",
      "Some students are not granted permission to be absent",
      "All students provided a valid reason for absence"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "There exists at least one student who has shown interest in the start-up competition",
      "There exists at least one student who has submitted a competition application",
      "If a student has not formed a team, then they are not registered for the start-up competition",
      "If a student has not submitted a competition application, then they are not eligible for the pitching round",
      "There exists at least one student who has registered for the start-up competition"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (S(x) ∧ I(x))",
      "∃x (S(x) ∧ A(x))",
      "∀x (S(x) → (¬T(x) → ¬R(x)))",
      "∀x (S(x) → (¬A(x) → ¬P(x)))",
      "∃x (S(x) ∧ R(x))"
    ],
    "choices": [
      "Some students have formed a team",
      "All students have submitted a competition application",
      "Some students are not registered for the competition",
      "All students have shown interest in the competition"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about persons?"
    ],
    "premises-NL": [
      "If a person has not been trained to recognize scams, then they are vulnerable to scammers",
      "All individuals in the university environment are not vulnerable to scammers",
      "All individuals have been trained to recognize scams"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (P(x) → (¬T(x) → V(x)))",
      "∀x (P(x) → ¬V(x))",
      "∀x (P(x) → T(x))"
    ],
    "choices": [
      "All persons have been trained to recognize scams",
      "Some persons are vulnerable to scammers",
      "Some persons have not been trained to recognize scams",
      "All persons are vulnerable to scammers"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If x does not use online documents from the library, then x does not gain more knowledge",
      "There exists a student who gains more knowledge from the online documents",
      "All students actively use the library's online resources"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬U(x) → ¬K(x))",
      "∃x (S(x) ∧ K(x))",
      "∀x (S(x) → U(x))"
    ],
    "choices": [
      "Some students gain more knowledge",
      "All students do not use online documents",
      "Some students do not gain more knowledge",
      "All students use online documents and do not gain knowledge"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "All students have met all academic requirements",
      "If a student has submitted the exam eligibility form, then they have received clearance from the academic office",
      "All students are allowed to attend the final exam",
      "There exists at least one student who has submitted the exam eligibility form"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → M(x))",
      "∀x (S(x) → (E(x) → L(x)))",
      "∀x (S(x) → A(x))",
      "∃x (S(x) ∧ E(x))"
    ],
    "choices": [
      "Some students have received clearance from the academic office",
      "All students have not submitted the exam eligibility form",
      "Some students are not allowed to attend the final exam",
      "All students have confirmed their exam schedule"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student was caught using unauthorized materials, then they were reported for cheating",
      "If a student behaved suspiciously during the exam, then they were caught using unauthorized materials",
      "If a student was reported for cheating, then they behaved suspiciously during the exam",
      "There exists at least one student who attempted to communicate during the exam",
      "If a student behaved suspiciously during the exam, then they are summoned for a disciplinary hearing"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (C(x) → R(x)))",
      "∀x (S(x) → (B(x) → C(x)))",
      "∀x (S(x) → (R(x) → B(x)))",
      "∃x (S(x) ∧ A(x))",
      "∀x (S(x) → (B(x) → D(x)))"
    ],
    "choices": [
      "Some students behaved suspiciously during the exam",
      "All students were caught using unauthorized materials",
      "Some students were not reported for cheating",
      "All students are summoned for a disciplinary hearing"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has attended soft skills workshops, then they have improved their communication skills",
      "If a student did not participate in group projects, then they did not develop leadership abilities",
      "All students have attended soft skills workshops",
      "If a student has developed leadership abilities, then they have improved their communication skills"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (W(x) → C(x)))",
      "∀x (S(x) → (¬P(x) → ¬L(x)))",
      "∀x (S(x) → W(x))",
      "∀x (S(x) → (L(x) → C(x)))"
    ],
    "choices": [
      "All students have improved their communication skills",
      "Some students did not participate in group projects",
      "All students have developed leadership abilities",
      "Some students have not attended soft skills workshops"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has not created a personal study-work schedule, then they do not manage academic deadlines effectively",
      "If a student does not manage deadlines effectively, then they do not maintain consistent academic performance",
      "If a student is employed part-time, then they report feeling balanced between work and study",
      "There exists at least one student who manages academic deadlines effectively"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (¬W(x) → ¬D(x)))",
      "∀x (S(x) → (¬D(x) → ¬P(x)))",
      "∀x (S(x) → (E(x) → B(x)))",
      "∃x (S(x) ∧ D(x))"
    ],
    "choices": [
      "Some students have created a personal study-work schedule",
      "All students are employed part-time",
      "Some students do not maintain consistent academic performance",
      "All students report feeling balanced between work and study"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which of the following can be inferred about students?"
    ],
    "premises-NL": [
      "If a student has not gained international experience through an exchange program, then they are not ready to actively join the international community",
      "If a student has applied for an exchange program, then they have gained international experience",
      "If a student has received support from the university’s international office, then they have gained international experience",
      "If a student has not applied for an exchange program, then they are not selected for an international leadership role",
      "There exists at least one student who has applied for an exchange program"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → (¬E(x) → ¬R(x)))",
      "∀x (S(x) → (A(x) → E(x)))",
      "∀x (S(x) → (U(x) → E(x)))",
      "∀x (S(x) → (¬A(x) → ¬L(x)))",
      "∃x (S(x) ∧ A(x))"
    ],
    "choices": [
      "Some students have gained international experience",
      "All students have received support from the international office",
      "Some students are not ready to join the international community",
      "All students have applied for an exchange program"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students complete fundamental courses.",
      "All students submit research papers.",
      "At least one student participates in extracurricular activities.",
      "If a student does not participate in extracurricular activities, they do not develop leadership skills.",
      "If a student does not complete fundamental courses, they are not eligible for graduation.",
      "If a student is enrolled in the honors program, they have access to advanced materials.",
      "All students are enrolled in the honors program.",
      "If a student does not participate in extracurricular activities, they cannot join the student council.",
      "If a student not completing fundamental courses implies they are not eligible for graduation, then being enrolled in the honors program implies having access to advanced materials.",
      "If a student not completing fundamental courses implies they are not eligible for graduation, then all students are enrolled in the honors program.",
      "If not participating in extracurricular activities implies not developing leadership skills, then (if not completing fundamental courses implies not being eligible for graduation, then all students are enrolled in the honors program).",
      "The previous complex implication implies that being enrolled in the honors program implies having access to advanced materials.",
      "If not completing fundamental courses implies having access to advanced materials, then all students complete fundamental courses.",
      "Being enrolled in the honors program implies completing fundamental courses.",
      "All students participate in group projects.",
      "If a student does not submit a research paper, they do not receive a passing grade."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x C(x)",
      "∀x R(x)",
      "∃x E(x)",
      "∀x (¬E(x) → ¬L(x))",
      "∀x (¬C(x) → ¬G(x))",
      "∀x (H(x) → A(x))",
      "∀x H(x)",
      "∀x (¬E(x) → ¬S(x))",
      "∀x (¬C(x) → ¬G(x)) → ∀x (H(x) → A(x))",
      "∀x (¬C(x) → ¬G(x)) → ∀x H(x)",
      "∀x (¬E(x) → ¬L(x)) → (∀x (¬C(x) → ¬G(x)) → ∀x H(x))",
      "(∀x (¬E(x) → ¬L(x)) → (∀x (¬C(x) → ¬G(x)) → ∀x H(x))) → ∀x (H(x) → A(x))",
      "∀x (¬C(x) → A(x)) → ∀x C(x)",
      "∀x (H(x) → C(x))",
      "∀x P(x)",
      "∀x (¬R(x) → ¬F(x))"
    ],
    "choices": [
      "∃x G(x)",
      "∀x ¬S(x)",
      "∀x ¬F(x)",
      "∀x A(x)"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student in an advanced research program.",
      "If a student does not attend advanced seminars, they do not earn research credits.",
      "If a student demonstrates research skills, they receive a research grant.",
      "There exists at least one advanced seminar.",
      "All students maintain academic excellence.",
      "All students are part of the advanced research program.",
      "There exists at least one research project.",
      "If a student is not in the advanced research program, they cannot access specialized research facilities.",
      "If a student fails to secure a research grant, they cannot maintain academic excellence.",
      "If a student does not complete a research project, they lose access to advanced seminars.",
      "If a student does not maintain academic excellence, they are removed from the advanced research program.",
      "If a student receives a research grant, they gain access to specialized research facilities.",
      "If an advanced seminar exists, then students who do not maintain academic excellence are removed from the advanced research program.",
      "If (students who do not maintain academic excellence are removed from the advanced research program), then (students who fail to secure a research grant cannot maintain academic excellence).",
      "If (students who do not complete a research project lose advanced seminar access), then (an advanced seminar exists implies that students who do not maintain academic excellence are removed from the advanced research program).",
      "There exists at least one research grant recipient.",
      "There exists at least one student with specialized research access.",
      "If a student is in the advanced research program, they must conduct a research project.",
      "If a student gains specialized research access, they can attend advanced seminars."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x R(x)",
      "∀x (¬S(x) → ¬C(x))",
      "∀x (K(x) → G(x))",
      "∃x A(x)",
      "∀x E(x)",
      "∀x R(x)",
      "∃x P(x)",
      "∀x (¬R(x) → ¬F(x))",
      "∀x (¬G(x) → ¬E(x))",
      "∀x (¬J(x) → ¬S(x))",
      "∀x (¬E(x) → ¬R(x))",
      "∀x (G(x) → F(x))",
      "∃x A(x) → ∀x (¬E(x) → ¬R(x))",
      "∀x (¬E(x) → ¬R(x)) → ∀x (¬G(x) → ¬E(x))",
      "∀x (¬J(x) → ¬S(x)) → (∃x A(x) → ∀x (¬E(x) → ¬R(x)))",
      "∃x G(x)",
      "∃x F(x)",
      "∀x (R(x) → J(x))",
      "∀x (F(x) → S(x))"
    ],
    "choices": [
      "¬∀x (R(x) → E(x))",
      "∀x (S(x) → C(x))",
      "∀x ¬S(x)",
      "∀x (E(x) → ¬R(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students must complete advanced digital skills training.",
      "If a student does not master coding skills, they cannot participate in tech innovation projects.",
      "If a student fails to complete data analysis workshops, they do not receive advanced certification.",
      "Every student in the technology track must demonstrate proficiency in artificial intelligence.",
      "If a student demonstrates AI proficiency, they become eligible for research grants.",
      "There is at least one student in the machine learning specialization.",
      "If a student is in the machine learning specialization, they must complete advanced programming modules.",
      "All students must develop a comprehensive technology portfolio.",
      "If a student does not develop a technology portfolio, they cannot apply to top-tier tech companies.",
      "Students who do not receive advanced certification cannot join professional tech networks.",
      "If a student participates in hackathons, they gain practical coding experience.",
      "All students in advanced technology tracks must complete innovative tech projects.",
      "If a student does not complete an innovative tech project, they are ineligible for industry internships.",
      "There exists at least one student in an advanced technology track.",
      "If a student is in an advanced technology track, they must maintain cutting-edge technological skills."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x D(x)",
      "∀x (¬C(x) → ¬T(x))",
      "∀x (¬W(x) → ¬A(x))",
      "∀x (H(x) → P(x))",
      "∀x (P(x) → G(x))",
      "∃x M(x)",
      "∀x (M(x) → R(x))",
      "∀x F(x)",
      "∀x (¬F(x) → ¬O(x))",
      "∀x (¬A(x) → ¬N(x))",
      "∀x (K(x) → E(x))",
      "∀x (V(x) → I(x))",
      "∀x (¬I(x) → ¬S(x))",
      "∃x V(x)",
      "∀x (V(x) → U(x))"
    ],
    "choices": [
      "∃x S(x)",
      "∀x ¬N(x)",
      "∀x ¬T(x)",
      "∃x I(x)"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not complete core courses, they cannot graduate.",
      "At least one student is enrolled in advanced research seminars.",
      "If a student does not attend advanced research seminars, they cannot earn research credits.",
      "If a student does not have research credits, they cannot join advanced research programs.",
      "All students maintain academic excellence.",
      "If a student does not maintain academic excellence, they are removed from research programs.",
      "If a student completes advanced research seminars, they develop specialized research skills.",
      "If a student develops specialized research skills, they become eligible for research grants.",
      "If a student receives a research grant, they gain access to advanced research facilities.",
      "There exists at least one opportunity for advanced research.",
      "All students are required to participate in research projects.",
      "If a student does not participate in research projects, they lose academic standing.",
      "Students with advanced research access can attend specialized workshops.",
      "If a student loses academic standing, they cannot receive research grants.",
      "Completing research projects implies developing specialized research skills."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (¬C(x) → ¬G(x))",
      "∃x S(x)",
      "∀x (¬A(x) → ¬R(x))",
      "∀x (¬R(x) → ¬P(x))",
      "∀x E(x)",
      "∀x (¬E(x) → ¬Q(x))",
      "∀x (M(x) → K(x))",
      "∀x (K(x) → N(x))",
      "∀x (F(x) → D(x))",
      "∃x O(x)",
      "∀x J(x)",
      "∀x (¬J(x) → L(x))",
      "∀x (D(x) → W(x))",
      "∀x (L(x) → ¬F(x))",
      "∀x (B(x) → K(x))"
    ],
    "choices": [
      "∀x W(x)",
      "∀x (¬C(x) → ¬P(x))",
      "∀x (¬J(x) → ¬F(x))",
      "∀x (N(x) → K(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student obtains academic credits, they meet course requirements.",
      "If a student conducts research, they obtain academic credits.",
      "If a student participates in seminars, they obtain academic credits.",
      "All students are enrolled in advanced programs.",
      "If a student obtains academic credits, they are in an advanced program.",
      "At least one student participates in seminars.",
      "At least one student obtains academic credits.",
      "If a student participates in seminars, they are in an advanced program.",
      "All students obtain academic credits.",
      "All students conduct research.",
      "At least one student conducts research.",
      "If a student takes advanced tests, they meet course requirements.",
      "If at least one student conducts research, then conducting research implies obtaining academic credits.",
      "If obtaining academic credits implies meeting course requirements, then obtaining academic credits implies being in an advanced program.",
      "If participating in seminars implies obtaining academic credits, then obtaining academic credits implies being in an advanced program.",
      "If a student does not meet course requirements, they do not take advanced tests.",
      "At least one student takes advanced tests.",
      "If a student participates in seminars, they meet course requirements.",
      "If a student is in an advanced program, they take advanced tests."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (A(x) → M(x))",
      "∀x (R(x) → A(x))",
      "∀x (S(x) → A(x))",
      "∀x P(x)",
      "∀x (A(x) → P(x))",
      "∃x S(x)",
      "∃x A(x)",
      "∀x (S(x) → P(x))",
      "∀x A(x)",
      "∀x R(x)",
      "∃x R(x)",
      "∀x (T(x) → M(x))",
      "∃x R(x) → ∀x (R(x) → A(x))",
      "∀x (A(x) → M(x)) → ∀x (A(x) → P(x))",
      "∀x (S(x) → A(x)) → ∀x (A(x) → P(x))",
      "∀x (¬M(x) → ¬T(x))",
      "∃x T(x)",
      "∀x (S(x) → M(x))",
      "∀x (P(x) → T(x))"
    ],
    "choices": [
      "∀x (S(x) → T(x))",
      "∀x (T(x) → S(x))",
      "¬∀x (S(x) → T(x))",
      "∀x (S(x) → ¬T(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "All students attend training.",
      "All students study regularly."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AttendsTraining(x))",
      "∀x (Student(x) → StudiesRegularly(x))"
    ],
    "choices": [
      "Some students do not attend training.",
      "Some students do not pass the exam.",
      "All students attend training.",
      "No student qualifies for a scholarship."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students qualify for a scholarship.",
      "There is at least one student who attends tutoring sessions.",
      "If a student does not receive a recommendation letter, then they do not understand the material.",
      "All students receive a recommendation letter.",
      "All students pass the exam.",
      "If a student studies regularly, then they pass the exam.",
      "If a student understands the material, then they receive a recommendation letter.",
      "If a student does not receive a recommendation letter, then they do not study regularly.",
      "There is at least one student who qualifies for a scholarship.",
      "There is at least one student who studies regularly.",
      "If a student does not receive a recommendation letter, then they do not pass the exam.",
      "If a student does not pass the exam, then they do not receive a recommendation letter.",
      "If not receiving a recommendation letter implies not passing the exam, then there is at least one student who qualifies for a scholarship.",
      "If there is at least one student who attends tutoring sessions, then if a student does not pass the exam, they do not receive a recommendation letter.",
      "If the implication (if not receiving a recommendation letter then not passing the exam) guarantees the existence of a student who qualifies for a scholarship, then there is at least one student who studies regularly.",
      "If a student passes the exam, then they attend tutoring sessions.",
      "If a student does not understand the material, then they are not considered to qualify for a scholarship.",
      "There is at least one student who passes the exam.",
      "If a student does not pass the exam, then they do not understand the material."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, QualifiesForScholarship(x))",
      "Exists(x, AttendsTutoring(x))",
      "(¬ReceivesRecommendation(x) → ¬UnderstandsMaterial(x))",
      "ForAll(x, ReceivesRecommendation(x))",
      "ForAll(x, PassesExam(x))",
      "(StudiesRegularly(x) → PassesExam(x))",
      "(UnderstandsMaterial(x) → ReceivesRecommendation(x))",
      "(¬ReceivesRecommendation(x) → ¬StudiesRegularly(x))",
      "Exists(x, QualifiesForScholarship(x))",
      "Exists(x, StudiesRegularly(x))",
      "(¬ReceivesRecommendation(x) → ¬PassesExam(x))",
      "(¬PassesExam(x) → ¬ReceivesRecommendation(x))",
      "((¬ReceivesRecommendation(x) → ¬PassesExam(x)) → Exists(x, QualifiesForScholarship(x)))",
      "(Exists(x, AttendsTutoring(x)) → (¬PassesExam(x) → ¬ReceivesRecommendation(x)))",
      "(((¬ReceivesRecommendation(x) → ¬PassesExam(x)) → Exists(x, QualifiesForScholarship(x))) → Exists(x, StudiesRegularly(x)))",
      "(PassesExam(x) → AttendsTutoring(x))",
      "(¬UnderstandsMaterial(x) → ¬QualifiesForScholarship(x))",
      "Exists(x, PassesExam(x))",
      "(¬PassesExam(x) → ¬UnderstandsMaterial(x))"
    ],
    "choices": [
      "There exists a student who does not receive a recommendation letter.",
      "There exists a student who does not pass the exam.",
      "All students attend tutoring sessions.",
      "All students do not study regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student qualifies for a scholarship, then they pass the exam.",
      "There is at least one student who receives a recommendation letter.",
      "All students attend tutoring sessions.",
      "If a student does not receive a recommendation letter, then they do not study regularly.",
      "If a student attends tutoring sessions, then they receive a recommendation letter.",
      "If a student does not receive a recommendation letter, then they do not pass the exam.",
      "If a student does not receive a recommendation letter, then they do not qualify for a scholarship.",
      "If a student does not receive a recommendation letter, then they do not attend tutoring sessions.",
      "If a student does not pass the exam, then they do not receive a recommendation letter.",
      "All students receive a recommendation letter.",
      "There is at least one student who qualifies for a scholarship.",
      "There is at least one student who studies regularly.",
      "If not passing the exam implies not receiving a recommendation letter, then not receiving a recommendation letter implies not qualifying for a scholarship.",
      "If not receiving a recommendation letter implies not attending tutoring sessions, then if a student qualifies for a scholarship, they pass the exam.",
      "There is at least one student who passes the exam.",
      "If a student does not attend tutoring sessions, then they do not study regularly.",
      "There is at least one student who attends tutoring sessions.",
      "If a student passes the exam, then they receive a recommendation letter."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(QualifiesScholarship(x) → PassesExam(x))",
      "Exists(x, ReceivesRecommendation(x))",
      "ForAll(x, AttendsTutoring(x))",
      "(¬ReceivesRecommendation(x) → ¬StudiesRegularly(x))",
      "(AttendsTutoring(x) → ReceivesRecommendation(x))",
      "(¬ReceivesRecommendation(x) → ¬PassesExam(x))",
      "(¬ReceivesRecommendation(x) → ¬QualifiesScholarship(x))",
      "(¬ReceivesRecommendation(x) → ¬AttendsTutoring(x))",
      "(¬PassesExam(x) → ¬ReceivesRecommendation(x))",
      "ForAll(x, ReceivesRecommendation(x))",
      "Exists(x, QualifiesScholarship(x))",
      "Exists(x, StudiesRegularly(x))",
      "((¬PassesExam(x) → ¬ReceivesRecommendation(x)) → (¬ReceivesRecommendation(x) → ¬QualifiesScholarship(x)))",
      "((¬ReceivesRecommendation(x) → ¬AttendsTutoring(x)) → (QualifiesScholarship(x) → PassesExam(x)))",
      "Exists(x, PassesExam(x))",
      "(¬AttendsTutoring(x) → ¬StudiesRegularly(x))",
      "Exists(x, AttendsTutoring(x))",
      "(PassesExam(x) → ReceivesRecommendation(x))"
    ],
    "choices": [
      "There exists a student who does not receive a recommendation letter.",
      "There exists a student who does not attend tutoring sessions.",
      "All students pass the exam.",
      "All students do not study regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not pass the exam, then they do not receive an award.",
      "If a student is diligent, then they study regularly.",
      "If a student studies regularly, then they receive an award.",
      "There is at least one student who passes the exam.",
      "If a student participates in extracurricular activities, then they receive an award.",
      "All students receive an award.",
      "There is at least one diligent student.",
      "If a student does not attend tutoring sessions, then they do not study regularly.",
      "All students pass the exam.",
      "There is at least one student who studies regularly.",
      "All students are diligent.",
      "There is at least one student who attends tutoring sessions.",
      "If being diligent implies studying regularly, then all students pass the exam.",
      "If the fact that being diligent implies studying regularly leads to all students passing the exam, then there is at least one diligent student.",
      "If there is at least one student who attends tutoring sessions, then if being diligent implies studying regularly leads to all students passing the exam, then there is at least one diligent student.",
      "If a student studies regularly, then they participate in extracurricular activities.",
      "If a student does not attend tutoring sessions, then they do not receive an award.",
      "If a student passes the exam, then they participate in extracurricular activities.",
      "If a student passes the exam, then they attend tutoring sessions."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(¬PassesExam(x) → ¬ReceivesAward(x))",
      "(Diligent(x) → StudiesRegularly(x))",
      "(StudiesRegularly(x) → ReceivesAward(x))",
      "Exists(x, PassesExam(x))",
      "(ParticipatesExtracurricular(x) → ReceivesAward(x))",
      "ForAll(x, ReceivesAward(x))",
      "Exists(x, Diligent(x))",
      "(¬AttendsTutoring(x) → ¬StudiesRegularly(x))",
      "ForAll(x, PassesExam(x))",
      "Exists(x, StudiesRegularly(x))",
      "ForAll(x, Diligent(x))",
      "Exists(x, AttendsTutoring(x))",
      "((Diligent(x) → StudiesRegularly(x)) → ForAll(x, PassesExam(x)))",
      "(((Diligent(x) → StudiesRegularly(x)) → ForAll(x, PassesExam(x))) → Exists(x, Diligent(x)))",
      "(Exists(x, AttendsTutoring(x)) → (((Diligent(x) → StudiesRegularly(x)) → ForAll(x, PassesExam(x))) → Exists(x, Diligent(x))))",
      "(StudiesRegularly(x) → ParticipatesExtracurricular(x))",
      "(¬AttendsTutoring(x) → ¬ReceivesAward(x))",
      "(PassesExam(x) → ParticipatesExtracurricular(x))",
      "(PassesExam(x) → AttendsTutoring(x))"
    ],
    "choices": [
      "There exists a student who does not receive an award.",
      "There exists a student who does not pass the exam.",
      "All students study regularly.",
      "There exists a student who does not attend tutoring sessions."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not qualify for a scholarship, then they do not receive an award.",
      "There is at least one student who qualifies for a scholarship.",
      "If a student does not study regularly, then they do not receive an award.",
      "If a student studies regularly, then they pass the exam.",
      "All students qualify for a scholarship.",
      "All students receive a recommendation letter.",
      "There is at least one student who attends tutoring sessions.",
      "All students receive an award.",
      "If a student does not qualify for a scholarship, then they do not receive a recommendation letter.",
      "If a student qualifies for a scholarship, then they receive a recommendation letter.",
      "There is at least one student who studies regularly.",
      "All students study regularly.",
      "If it holds that if a student does not study regularly then they do not receive an award, then all students qualify for a scholarship.",
      "If a student qualifying for a scholarship implies they receive a recommendation letter, then there is at least one student who attends tutoring sessions.",
      "There is at least one student who receives an award.",
      "If a student receives an award, then they receive a recommendation letter.",
      "If a student does not pass the exam, then they do not attend tutoring sessions.",
      "If a student does not attend tutoring sessions, then they do not study regularly."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(¬QualifiesScholarship(x) → ¬ReceivesAward(x))",
      "Exists(x, QualifiesScholarship(x))",
      "(¬StudiesRegularly(x) → ¬ReceivesAward(x))",
      "(StudiesRegularly(x) → PassesExam(x))",
      "ForAll(x, QualifiesScholarship(x))",
      "ForAll(x, ReceivesRecommendation(x))",
      "Exists(x, AttendsTutoring(x))",
      "ForAll(x, ReceivesAward(x))",
      "(¬QualifiesScholarship(x) → ¬ReceivesRecommendation(x))",
      "(QualifiesScholarship(x) → ReceivesRecommendation(x))",
      "Exists(x, StudiesRegularly(x))",
      "ForAll(x, StudiesRegularly(x))",
      "((¬StudiesRegularly(x) → ¬ReceivesAward(x)) → ForAll(x, QualifiesScholarship(x)))",
      "((QualifiesScholarship(x) → ReceivesRecommendation(x)) → Exists(x, AttendsTutoring(x)))",
      "Exists(x, ReceivesAward(x))",
      "(ReceivesAward(x) → ReceivesRecommendation(x))",
      "(¬PassesExam(x) → ¬AttendsTutoring(x))",
      "(¬AttendsTutoring(x) → ¬StudiesRegularly(x))"
    ],
    "choices": [
      "There exists a student who does not qualify for a scholarship.",
      "There exists a student who does not receive an award.",
      "All students pass the exam.",
      "There exists a student who does not study regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students understand the material.",
      "There is at least one student who passes the exam.",
      "All students study regularly.",
      "There is at least one student who is diligent.",
      "If a student does not study regularly, then they do not understand the material.",
      "There is at least one student who studies regularly.",
      "If a student does not pass the exam, then they are not diligent.",
      "All students attend lectures.",
      "All students are diligent.",
      "If a student understands the material, then they study regularly.",
      "If a student completes assignments, then they study regularly.",
      "There is at least one student who completes assignments.",
      "If completing assignments implies studying regularly, then all students understand the material.",
      "If understanding the material implies studying regularly, then there is at least one student who completes assignments.",
      "There is at least one student who understands the material.",
      "If a student does not complete assignments, then they do not study regularly.",
      "All students pass the exam.",
      "If a student does not attend lectures, then they do not complete assignments."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, UnderstandsMaterial(x))",
      "Exists(x, PassesExam(x))",
      "ForAll(x, StudiesRegularly(x))",
      "Exists(x, IsDiligent(x))",
      "(¬StudiesRegularly(x) → ¬UnderstandsMaterial(x))",
      "Exists(x, StudiesRegularly(x))",
      "(¬PassesExam(x) → ¬IsDiligent(x))",
      "ForAll(x, AttendsLectures(x))",
      "ForAll(x, IsDiligent(x))",
      "(UnderstandsMaterial(x) → StudiesRegularly(x))",
      "(CompletesAssignments(x) → StudiesRegularly(x))",
      "Exists(x, CompletesAssignments(x))",
      "((CompletesAssignments(x) → StudiesRegularly(x)) → ForAll(x, UnderstandsMaterial(x)))",
      "((UnderstandsMaterial(x) → StudiesRegularly(x)) → Exists(x, CompletesAssignments(x)))",
      "Exists(x, UnderstandsMaterial(x))",
      "(¬CompletesAssignments(x) → ¬StudiesRegularly(x))",
      "ForAll(x, PassesExam(x))",
      "(¬AttendsLectures(x) → ¬CompletesAssignments(x))"
    ],
    "choices": [
      "There exists a student who does not understand the material.",
      "There exists a student who does not study regularly.",
      "All students complete assignments.",
      "There exists a student who does not pass the exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student understands the material, then they attend tutoring sessions.",
      "If a student understands the material, then they receive a recommendation letter.",
      "There is at least one student who attends tutoring sessions.",
      "If a student does not receive a recommendation letter, then they do not understand the material.",
      "If a student receives a recommendation letter, then they study regularly.",
      "If a student does not qualify for a scholarship, then they do not study regularly.",
      "All students pass the exam.",
      "If a student does not pass the exam, then they do not qualify for a scholarship.",
      "There is at least one student who receives a recommendation letter.",
      "If a student does not study regularly, then they do not qualify for a scholarship.",
      "If a student Trần tutoring sessions, then they qualify for a scholarship.",
      "If a student studies regularly, then they qualify for a scholarship.",
      "If there is at least one student who attends tutoring sessions, then there is at least one student who receives a recommendation letter.",
      "If studying regularly implies qualifying for a scholarship, then there is at least one student who attends tutoring sessions.",
      "All students attend tutoring sessions.",
      "If a student understands the material, then they qualify for a scholarship.",
      "If a student passes the exam, then they understands the material.",
      "All students study regularly."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(UnderstandsMaterial(x) → AttendsTutoring(x))",
      "(UnderstandsMaterial(x) → ReceivesRecommendation(x))",
      "Exists(x, AttendsTutoring(x))",
      "(¬ReceivesRecommendation(x) → ¬UnderstandsMaterial(x))",
      "(ReceivesRecommendation(x) → StudiesRegularly(x))",
      "(¬QualifiesScholarship(x) → ¬StudiesRegularly(x))",
      "ForAll(x, PassesExam(x))",
      "(¬PassesExam(x) → ¬QualifiesScholarship(x))",
      "Exists(x, ReceivesRecommendation(x))",
      "(¬StudiesRegularly(x) → ¬QualifiesScholarship(x))",
      "(AttendsTutoring(x) → QualifiesScholarship(x))",
      "(StudiesRegularly(x) → QualifiesScholarship(x))",
      "(Exists(x, AttendsTutoring(x)) → Exists(x, ReceivesRecommendation(x)))",
      "((StudiesRegularly(x) → QualifiesScholarship(x)) → Exists(x, AttendsTutoring(x)))",
      "ForAll(x, AttendsTutoring(x))",
      "(UnderstandsMaterial(x) → QualifiesScholarship(x))",
      "(PassesExam(x) → UnderstandsMaterial(x))",
      "ForAll(x, StudiesRegularly(x))"
    ],
    "choices": [
      "There exists a student who does not attend tutoring sessions.",
      "There exists a student who does not study regularly.",
      "All students qualify for a scholarship.",
      "There exists a student who does not pass the exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about students can we conclude from the given information?"
    ],
    "premises-NL": [
      "There is at least one student who passes the exam.",
      "If a student does not qualify for a scholarship, then they do not study regularly.",
      "If a student understands the material, then they qualify for a scholarship.",
      "If a student does not understand the material, then they do not receive a recommendation letter.",
      "If a student qualifies for a scholarship, then they attend tutoring sessions.",
      "If a student studies regularly, then they attend tutoring sessions.",
      "If a student understands the material, then they study regularly.",
      "If a student passes the exam, then they study regularly.",
      "There is at least one student who qualifies for a scholarship.",
      "If a student does not receive a recommendation letter, then they do not qualify for a scholarship."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x PassesExam(x)",
      "∀x (¬QualifiesForScholarship(x) → ¬StudiesRegularly(x))",
      "∀x (UnderstandsMaterial(x) → QualifiesForScholarship(x))",
      "∀x (¬UnderstandsMaterial(x) → ¬ReceivesRecommendation(x))",
      "∀x (QualifiesForScholarship(x) → AttendsTutoring(x))",
      "∀x (StudiesRegularly(x) → AttendsTutoring(x))",
      "∀x (UnderstandsMaterial(x) → StudiesRegularly(x))",
      "∀x (PassesExam(x) → StudiesRegularly(x))",
      "∃x QualifiesForScholarship(x)",
      "∀x (¬ReceivesRecommendation(x) → ¬QualifiesForScholarship(x))"
    ],
    "choices": [
      "Every student who passes the exam receives a recommendation letter.",
      "Every student attends tutoring sessions.",
      "Some students do not qualify for a scholarship.",
      "Every student who doesn’t pass the exam gets a recommendation letter."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not understand the material, then they do not receive a recommendation letter.",
      "If a student attends tutoring sessions, then they receive a recommendation letter.",
      "There is at least one student who understands the material.",
      "All students pass the exam.",
      "If a student does not attend tutoring sessions, then they do not qualify for a scholarship.",
      "If a student studies regularly, then they attend tutoring sessions.",
      "If a student qualifies for a scholarship, then they attend tutoring sessions.",
      "If a student passes the exam, then they understand the material.",
      "If a student does not pass the exam, then they do not attend tutoring sessions.",
      "If a student understands the material, then they attend tutoring sessions.",
      "If a student does not pass the exam, then they do not study regularly.",
      "If a student does not study regularly, then they do not qualify for a scholarship.",
      "If it holds that if a student does not understand the material then they do not receive a recommendation letter, then there is at least one student who understands the material.",
      "If it holds that if a student understands the material then they attend tutoring sessions, then if a student does not pass the exam, they do not attend tutoring sessions.",
      "If a student receives a recommendation letter, then they attend tutoring sessions.",
      "If a student receives a recommendation letter, then they study regularly.",
      "All students receive a recommendation letter.",
      "If a student studies regularly, then they receive a recommendation letter."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(¬UnderstandsMaterial(x) → ¬ReceivesRecommendation(x))",
      "(AttendsTutoring(x) → ReceivesRecommendation(x))",
      "Exists(x, UnderstandsMaterial(x))",
      "ForAll(x, PassesExam(x))",
      "(¬AttendsTutoring(x) → ¬QualifiesForScholarship(x))",
      "(StudiesRegularly(x) → AttendsTutoring(x))",
      "(QualifiesForScholarship(x) → AttendsTutoring(x))",
      "(PassesExam(x) → UnderstandsMaterial(x))",
      "(¬PassesExam(x) → ¬AttendsTutoring(x))",
      "(UnderstandsMaterial(x) → AttendsTutoring(x))",
      "(¬PassesExam(x) → ¬StudiesRegularly(x))",
      "(¬StudiesRegularly(x) → ¬QualifiesForScholarship(x))",
      "((¬UnderstandsMaterial(x) → ¬ReceivesRecommendation(x)) → Exists(x, UnderstandsMaterial(x)))",
      "((UnderstandsMaterial(x) → AttendsTutoring(x)) → (¬PassesExam(x) → ¬AttendsTutoring(x)))",
      "(ReceivesRecommendation(x) → AttendsTutoring(x))",
      "(ReceivesRecommendation(x) → StudiesRegularly(x))",
      "ForAll(x, ReceivesRecommendation(x))",
      "(StudiesRegularly(x) → ReceivesRecommendation(x))"
    ],
    "choices": [
      "There exists a student who does not receive a recommendation letter.",
      "There exists a student who does not attend tutoring sessions.",
      "All students qualify for a scholarship.",
      "There exists a student who does not study regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who is prepared.",
      "There exists at least one student who asks questions.",
      "If a student is prepared, then they receive a recommendation letter.",
      "All students take the test.",
      "All students study regularly.",
      "If a student does not receive a recommendation letter, then they do not ask questions.",
      "If a student is not prepared, then they do not receive a recommendation letter.",
      "All students ask questions.",
      "If a student asks questions, then they are prepared.",
      "If a student studies regularly, then they attend university.",
      "If a student does not take the test, then they do not ask questions.",
      "If a student does not take the test, then they do not attend university.",
      "If at least one student asks questions, then all students who study regularly also attend university.",
      "If all students take the test, then at least one student is prepared.",
      "If the previous statement is true, then at least one student is prepared.",
      "All students are prepared.",
      "If a student is not prepared, then they do not study regularly.",
      "There exists at least one student who attends university.",
      "If a student asks questions, then they study regularly."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "Exists(x, Prepared(x))",
      "Exists(x, AsksQuestions(x))",
      "(Prepared(x) → ReceivesRecommendation(x))",
      "ForAll(x, TakesTest(x))",
      "ForAll(x, StudiesRegularly(x))",
      "(¬ReceivesRecommendation(x) → ¬AsksQuestions(x))",
      "(¬Prepared(x) → ¬ReceivesRecommendation(x))",
      "ForAll(x, AsksQuestions(x))",
      "(AsksQuestions(x) → Prepared(x))",
      "(StudiesRegularly(x) → AttendsUniversity(x))",
      "(¬TakesTest(x) → ¬AsksQuestions(x))",
      "(¬TakesTest(x) → ¬AttendsUniversity(x))",
      "(Exists(x, AsksQuestions(x)) → (StudiesRegularly(x) → AttendsUniversity(x)))",
      "(ForAll(x, TakesTest(x)) → Exists(x, Prepared(x)))",
      "(((Exists(x, AsksQuestions(x)) → (StudiesRegularly(x) → AttendsUniversity(x))) → Exists(x, Prepared(x))) → Exists(x, Prepared(x)))",
      "ForAll(x, Prepared(x))",
      "(¬Prepared(x) → ¬StudiesRegularly(x))",
      "Exists(x, AttendsUniversity(x))",
      "(AsksQuestions(x) → StudiesRegularly(x))"
    ],
    "choices": [
      "There exists a student who is not prepared.",
      "There exists a student who does not ask questions.",
      "All students attend university.",
      "There exists a student who does not study regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student attends tutoring sessions, then they qualify for a scholarship.",
      "If a student receives a recommendation letter, then they qualify for a scholarship.",
      "If a student understands the material, then they attend tutoring sessions.",
      "If a student passes the exam, then they understand the material.",
      "If a student does not qualify for a scholarship, then they do not receive a recommendation letter."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ AttendsTutoring(x) → QualifiesForScholarship(x))",
      "∀x (Student(x) ∧ ReceivesRecommendation(x) → QualifiesForScholarship(x))",
      "∀x (Student(x) ∧ UnderstandsMaterial(x) → AttendsTutoring(x))",
      "∀x (Student(x) ∧ PassesExam(x) → UnderstandsMaterial(x))",
      "∀x (Student(x) ∧ ¬QualifiesForScholarship(x) → ¬ReceivesRecommendation(x))"
    ],
    "choices": [
      "Some students pass the exam but do not qualify for a scholarship.",
      "If some student qualifies for a scholarship, then not passing the exam means no recommendation letter.",
      "All students who pass the exam receive a recommendation letter.",
      "No student who understands the material qualifies for a scholarship."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student studies regularly, then they pass the exam.",
      "All students receive an award.",
      "If a student does not receive a recommendation letter, then they do not qualify for a scholarship.",
      "There is at least one student who receives an award.",
      "There is at least one student who studies regularly.",
      "All students pass the exam.",
      "All students study regularly.",
      "If a student studies regularly, then they qualify for a scholarship.",
      "If a student studies regularly, then they receive a recommendation letter.",
      "There is at least one student who attends tutoring sessions.",
      "If a student does not attend tutoring sessions, then they do not pass the exam.",
      "If a student qualifies for a scholarship, then they pass the exam.",
      "If all students pass the exam, then all students study regularly.",
      "If qualifying for a scholarship implies passing the exam, then there is at least one student who studies regularly.",
      "If qualifying for a scholarship implies passing the exam, then if a student studies regularly, they pass the exam.",
      "If a student does not qualify for a scholarship, then they do not study regularly.",
      "If a student attends tutoring sessions, then they qualify for a scholarship.",
      "If a student qualifies for a scholarship, then they receive a recommendation letter.",
      "If a student does not receive a recommendation letter, then they do not pass the exam."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(StudiesRegularly(x) → PassesExam(x))",
      "ForAll(x, ReceivesAward(x))",
      "(¬ReceivesRecommendation(x) → ¬QualifiesForScholarship(x))",
      "Exists(x, ReceivesAward(x))",
      "Exists(x, StudiesRegularly(x))",
      "ForAll(x, PassesExam(x))",
      "ForAll(x, StudiesRegularly(x))",
      "(StudiesRegularly(x) → QualifiesForScholarship(x))",
      "(StudiesRegularly(x) → ReceivesRecommendation(x))",
      "Exists(x, AttendsTutoring(x))",
      "(¬AttendsTutoring(x) → ¬PassesExam(x))",
      "(QualifiesForScholarship(x) → PassesExam(x))",
      "(ForAll(x, PassesExam(x)) → ForAll(x, StudiesRegularly(x)))",
      "((QualifiesForScholarship(x) → PassesExam(x)) → Exists(x, StudiesRegularly(x)))",
      "((QualifiesForScholarship(x) → PassesExam(x)) → (StudiesRegularly(x) → PassesExam(x)))",
      "(¬QualifiesForScholarship(x) → ¬StudiesRegularly(x))",
      "(AttendsTutoring(x) → QualifiesForScholarship(x))",
      "(QualifiesForScholarship(x) → ReceivesRecommendation(x))",
      "(¬ReceivesRecommendation(x) → ¬PassesExam(x))"
    ],
    "choices": [
      "There exists a student who does not study regularly.",
      "There exists a student who does not pass the exam.",
      "All students qualify for a scholarship.",
      "There exists a student who does not receive a recommendation letter."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student studies regularly, then they pass the exam.",
      "If a student receives an award, then they study regularly.",
      "If a student does not study regularly, then they do not qualify for a scholarship.",
      "If a student does not attend tutoring sessions, then they do not qualify for a scholarship.",
      "There is at least one student who qualifies for a scholarship."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ StudiesRegularly(x) → PassesExam(x))",
      "∀x (Student(x) ∧ ReceivesAward(x) → StudiesRegularly(x))",
      "∀x (Student(x) ∧ ¬StudiesRegularly(x) → ¬QualifiesForScholarship(x))",
      "∀x (Student(x) ∧ ¬AttendsTutoring(x) → ¬QualifiesForScholarship(x))",
      "∃x (Student(x) ∧ QualifiesForScholarship(x))"
    ],
    "choices": [
      "Some students receive an award but do not pass the exam.",
      "If all students study regularly, then not receiving an award means not passing the exam.",
      "All students who do not study regularly pass the exam.",
      "No student who receives an award studies regularly."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that all students complete the end-of-term research paper?"
    ],
    "premises-NL": [
      "If a student invests time in project-based learning, that student gains a broader understanding of the subject.",
      "There is at least one person who mentors first-year students.",
      "If a student has a broader understanding of the subject, that student also mentors first-year students.",
      "All students complete the end-of-term research paper.",
      "If a student does not complete the end-of-term research paper, that student does not mentor first-year students.",
      "All students have valid library access.",
      "If investing time in project-based learning leads to a broader understanding, then everyone must complete the end-of-term research paper.",
      "If a broader understanding leads to mentoring first-year students, then investing time in project-based learning leads to that broader understanding.",
      "If a student never visits the campus writing center, that student does not maintain valid library access.",
      "There is at least one person who uses the library’s advanced research tools.",
      "If a person mentors first-year students, that person also has a broader understanding of the subject."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ InvestsTimeProjectLearning(x) → BroaderUnderstanding(x))",
      "∃x (Person(x) ∧ MentorsFirstYears(x))",
      "∀x (Student(x) ∧ BroaderUnderstanding(x) → MentorsFirstYears(x))",
      "∀x (Student(x) → CompletesResearchPaper(x))",
      "∀x ((Student(x) ∧ ¬CompletesResearchPaper(x)) → ¬MentorsFirstYears(x))",
      "∀x (Student(x) → ValidLibraryAccess(x))",
      "((∀x ((Student(x) ∧ InvestsTimeProjectLearning(x)) → BroaderUnderstanding(x))) → (∀x (Student(x) → CompletesResearchPaper(x))))",
      "((∀x ((Student(x) ∧ BroaderUnderstanding(x)) → MentorsFirstYears(x))) → (∀x ((Student(x) ∧ InvestsTimeProjectLearning(x)) → BroaderUnderstanding(x))))",
      "∀x ((Student(x) ∧ ¬VisitsWritingCenter(x)) → ¬ValidLibraryAccess(x))",
      "∃x (Person(x) ∧ UsesAdvancedResearchTools(x))",
      "∀x ((Person(x) ∧ MentorsFirstYears(x)) → BroaderUnderstanding(x))"
    ],
    "choices": [
      "If a broader understanding implies mentoring, then investing time in project-based learning implies a broader understanding.",
      "If a broader understanding implies mentoring, and we deny that implication, both remain true.",
      "It is impossible that a broader understanding implies mentoring leads to investing time in project-based learning implying a broader understanding.",
      "If a broader understanding implies mentoring, then investing time in project-based learning implies a broader understanding."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that all researchers write publications?"
    ],
    "premises-NL": [
      "If a student enrolls in advanced courses, the student excels in those courses.",
      "If a learner completes all assigned coursework, the learner masters foundational knowledge.",
      "All learners complete their assigned coursework.",
      "If a student enrolls in advanced courses, the student masters foundational knowledge.",
      "If a researcher writes a publication, then the researcher provides novel insights to the field.",
      "There exists a learner who completes all assigned coursework.",
      "If it is established that students enrolled in advanced courses excel, then it remains true that they excel.",
      "If a researcher writes a publication and thereby provides novel insights, then whenever students enroll in advanced courses and excel, they continue to excel.",
      "If a learner does not complete all assigned coursework, then the learner does not master foundational knowledge.",
      "All researchers provide novel insights to the field.",
      "All researchers write publications."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ EnrollsAdvanced(x) → Excels(x))",
      "∀x (Learner(x) ∧ CompletesCoursework(x) → MastersFoundations(x))",
      "∀x (Learner(x) → CompletesCoursework(x))",
      "∀x (Student(x) ∧ EnrollsAdvanced(x) → MastersFoundations(x))",
      "∀x (Researcher(x) ∧ WritesPublication(x) → ProvidesNovelInsights(x))",
      "∃x (Learner(x) ∧ CompletesCoursework(x))",
      "((∀x (Student(x) ∧ EnrollsAdvanced(x) → Excels(x))) → (∀x (Student(x) ∧ EnrollsAdvanced(x) → Excels(x))))",
      "∀x (Researcher(x) ∧ WritesPublication(x) ∧ ProvidesNovelInsights(x) → ∀y (Student(y) ∧ EnrollsAdvanced(y) ∧ Excels(y) → ContinuesToExcel(y)))",
      "∀x ((Learner(x) ∧ ¬CompletesCoursework(x)) → ¬MastersFoundations(x))",
      "∀x (Researcher(x) → ProvidesNovelInsights(x))",
      "∀x (Researcher(x) → WritesPublication(x))"
    ],
    "choices": [
      "If a researcher writes a publication and provides novel insights, then if students enrolled in advanced courses excel, they will remain successful.",
      "It is not the case that researchers who write publications provide novel insights that sustain student excellence in advanced courses.",
      "If a researcher writes a publication, then the researcher provides novel insights, ensuring that students who excel continue to excel.",
      "If publishing a paper leads to providing novel insights, then publishing a paper leads to providing novel insights."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one student who passes the course?"
    ],
    "premises-NL": [
      "If a student studies regularly, then the student understands course material.",
      "There exists at least one student who passes the course.",
      "There exists at least one student who takes detailed notes.",
      "If a student does not take detailed notes, then the student does not qualify for advanced courses.",
      "If a student does not understand course material, then the student does not take detailed notes.",
      "If it's true that not understanding course material implies not taking detailed notes, then there exists a student who passes the course.",
      "If it's true that studying regularly implies understanding course material, then there exists a student who passes the course.",
      "If a student does not qualify for advanced courses, then the student does not understand course material.",
      "If a student understands course material, then the student passes the course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ StudiesRegularly(x) → UnderstandsMaterial(x))",
      "∃x (Student(x) ∧ PassesCourse(x))",
      "∃x (Student(x) ∧ TakesDetailedNotes(x))",
      "∀x (Student(x) ∧ ¬TakesDetailedNotes(x) → ¬QualifiesForAdvanced(x))",
      "∀x (Student(x) ∧ ¬UnderstandsMaterial(x) → ¬TakesDetailedNotes(x))",
      "((∀x (Student(x) ∧ ¬UnderstandsMaterial(x) → ¬TakesDetailedNotes(x))) → (∃x (Student(x) ∧ PassesCourse(x))))",
      "((∀x (Student(x) ∧ StudiesRegularly(x) → UnderstandsMaterial(x))) → (∃x (Student(x) ∧ PassesCourse(x))))",
      "∀x (Student(x) ∧ ¬QualifiesForAdvanced(x) → ¬UnderstandsMaterial(x))",
      "∀x (Student(x) ∧ UnderstandsMaterial(x) → PassesCourse(x))"
    ],
    "choices": [
      "If studying regularly implies understanding course material, then there exists a student who passes the course.",
      "If studying regularly implies understanding course material and simultaneously it's not the case that studying regularly implies understanding course material, then there exists a student who passes the course.",
      "It is not the case that if studying regularly implies understanding course material, then there exists a student who passes the course.",
      "If it's true that studying regularly implying understanding course material implies the existence of a student who passes, then it's true that studying regularly implying understanding course material implies the existence of a student who passes."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that all students are qualified for graduation?"
    ],
    "premises-NL": [
      "There exists at least one student who takes advanced courses.",
      "There exists at least one student who is qualified for graduation.",
      "If a student regularly attends classes, then the student understands the course material.",
      "All students are qualified for graduation.",
      "If a student takes advanced courses, then the student regularly attends classes.",
      "If all students are qualified for graduation, then there exists at least one student who takes advanced courses.",
      "If it's true that regular attendance implies understanding course material, then there exists at least one student who is qualified for graduation.",
      "All students study consistently.",
      "There exists at least one student who participates in discussions."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x (Student(x) ∧ TakesAdvancedCourses(x))",
      "∃x (Student(x) ∧ QualifiedForGraduation(x))",
      "∀x (Student(x) ∧ RegularlyAttends(x) → UnderstandsMaterial(x))",
      "∀x (Student(x) → QualifiedForGraduation(x))",
      "∀x (Student(x) ∧ TakesAdvancedCourses(x) → RegularlyAttends(x))",
      "(∀x (Student(x) → QualifiedForGraduation(x)) → ∃x (Student(x) ∧ TakesAdvancedCourses(x)))",
      "((∀x (Student(x) ∧ RegularlyAttends(x) → UnderstandsMaterial(x))) → (∃x (Student(x) ∧ QualifiedForGraduation(x))))",
      "∀x (Student(x) → StudiesConsistently(x))",
      "∃x (Student(x) ∧ ParticipatesInDiscussions(x))"
    ],
    "choices": [
      "It is not the case that if regular attendance implies understanding course material, then there exists a student qualified for graduation.",
      "If it's true that regular attendance implies understanding course material, then there exists at least one student who is qualified for graduation.",
      "If it's true that regular attendance implying understanding material implies the existence of qualified students, then it's true that regular attendance implying understanding material implies the existence of qualified students.",
      "It's simultaneously true and false that if regular attendance implies understanding course material, then there exists at least one student who is qualified for graduation."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises and knowing that all students use the university library, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who takes advanced coursework.",
      "All students participate in study groups.",
      "If a student does not use the university library, then the student does not succeed in difficult courses.",
      "All students use the university library.",
      "If a student does not use the university library, then the student does not receive academic recognition.",
      "If all students use the university library, then there exists at least one student who takes advanced coursework.",
      "If all students participate in study groups, then students who don't use the university library don't succeed in difficult courses.",
      "If a student takes advanced coursework, then the student participates in study groups.",
      "If a student does not take advanced coursework, then the student does not receive academic recognition."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x (Student(x) ∧ TakesAdvancedCoursework(x))",
      "∀x (Student(x) → ParticipatesInStudyGroups(x))",
      "∀x (Student(x) ∧ ¬UsesLibrary(x) → ¬SucceedsInDifficultCourses(x))",
      "∀x (Student(x) → UsesLibrary(x))",
      "∀x (Student(x) ∧ ¬UsesLibrary(x) → ¬ReceivesAcademicRecognition(x))",
      "(∀x (Student(x) → UsesLibrary(x)) → ∃x (Student(x) ∧ TakesAdvancedCoursework(x)))",
      "(∀x (Student(x) → ParticipatesInStudyGroups(x)) → ∀x (Student(x) ∧ ¬UsesLibrary(x) → ¬SucceedsInDifficultCourses(x)))",
      "∀x (Student(x) ∧ TakesAdvancedCoursework(x) → ParticipatesInStudyGroups(x))",
      "∀x (Student(x) ∧ ¬TakesAdvancedCoursework(x) → ¬ReceivesAcademicRecognition(x))"
    ],
    "choices": [
      "If the fact that all students participate in study groups implies that non-library users don't succeed in difficult courses, then it remains true that all students participating in study groups implies non-library users don't succeed in difficult courses.",
      "If all students participate in study groups, then students who don't use the university library don't succeed in difficult courses.",
      "It is not the case that all students participating in study groups implies non-library users don't succeed in difficult courses.",
      "It is both true and false that all students participating in study groups implies non-library users don't succeed in difficult courses."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there is at least one learner who successfully undertakes an independent research project?"
    ],
    "premises-NL": [
      "There is at least one student enrolled in a specialized computer science course.",
      "There exists a learner who regularly joins advanced seminars.",
      "If a learner carries out an independent research project, then that learner receives a key academic distinction.",
      "Any learner who is not in a specialized computer science course will not conduct an independent research project.",
      "There is at least one learner who successfully undertakes an independent research project.",
      "If learners outside specialized computer science courses never conduct an independent research project, then there is someone who has indeed completed such a project.",
      "If at least one learner regularly joins advanced seminars, then assuming learners who are not in specialized courses do not engage in research projects, there is still someone who completes one.",
      "If there is a learner in a specialized computer science course, then conducting an independent research project leads to earning an academic distinction.",
      "Any learner not involved in research collaborations will not engage in an independent research project.",
      "Whoever participates in research collaborations also joins advanced seminars."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∃x (SpecializedCourse(x))",
      "∃x (AdvancedSeminar(x))",
      "∀x (IndependentProject(x) → AcademicDistinction(x))",
      "∀x (¬SpecializedCourse(x) → ¬IndependentProject(x))",
      "∃x (IndependentProject(x))",
      "((∀x (¬SpecializedCourse(x) → ¬IndependentProject(x))) → ∃x (IndependentProject(x)))",
      "(∃x (AdvancedSeminar(x)) → ((∀y (¬SpecializedCourse(y) → ¬IndependentProject(y))) → ∃z (IndependentProject(z))))",
      "(∃x (SpecializedCourse(x)) → (∀y (IndependentProject(y) → AcademicDistinction(y))))",
      "∀x (¬ResearchCollaboration(x) → ¬IndependentProject(x))",
      "∀x (ResearchCollaboration(x) → AdvancedSeminar(x))"
    ],
    "choices": [
      "It is not the case that if there is a specialized computer science learner, then an independent research project leads to an academic distinction.",
      "If having a specialized computer science learner implies an independent research project leads to an academic distinction, then having a specialized computer science learner implies an independent research project leads to an academic distinction.",
      "If having a specialized computer science learner implies an independent research project leads to an academic distinction, and it is also not the case, then both conditions hold simultaneously.",
      "If there is a specialized computer science learner, then an independent research project leads to an academic distinction."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that everyone in the program regularly attends lectures?"
    ],
    "premises-NL": [
      "Every person in this program is a university student.",
      "If someone is a university student, then they regularly attend lectures.",
      "If a person does not regularly attend lectures, then they do not receive top grades.",
      "If a student submits all assignments on time, then they pass the course with distinction.",
      "Everyone in the program regularly attends lectures.",
      "If everyone in the program is a university student, then it is true that those who don't regularly attend lectures don't receive top grades.",
      "If submitting all assignments on time leads to passing with distinction, then not attending lectures regularly results in not receiving top grades.",
      "If not attending lectures regularly results in not receiving top grades, then submitting all assignments on time leads to passing with distinction.",
      "There exists at least one person who regularly attends lectures.",
      "There exists at least one university student in the program."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (UniversityStudent(x))",
      "∀x (UniversityStudent(x) → AttendsLectures(x))",
      "∀x (¬AttendsLectures(x) → ¬TopGrades(x))",
      "∀x (SubmitsOnTime(x) → PassesWithDistinction(x))",
      "∀x (AttendsLectures(x))",
      "(∀x (UniversityStudent(x)) → ∀x (¬AttendsLectures(x) → ¬TopGrades(x)))",
      "((∀x (SubmitsOnTime(x) → PassesWithDistinction(x))) → (∀x (¬AttendsLectures(x) → ¬TopGrades(x))))",
      "((∀x (¬AttendsLectures(x) → ¬TopGrades(x))) → (∀x (SubmitsOnTime(x) → PassesWithDistinction(x))))",
      "∃x (AttendsLectures(x))",
      "∃x (UniversityStudent(x))"
    ],
    "choices": [
      "If not attending lectures regularly results in not receiving top grades, then submitting all assignments on time leads to passing with distinction.",
      "It is not the case that if not attending lectures regularly results in not receiving top grades, then submitting all assignments on time leads to passing with distinction.",
      "Both the statement that 'not attending lectures regularly results in not receiving top grades implies submitting assignments on time leads to passing with distinction' and its negation are simultaneously true.",
      "The statement 'if not attending lectures regularly results in not receiving top grades, then submitting all assignments on time leads to passing with distinction' implies itself."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one teaching assistant in the computer science department?"
    ],
    "premises-NL": [
      "There exists at least one teaching assistant in the computer science department.",
      "There exists at least one student who participates in research projects.",
      "If a student qualifies for graduate programs, then that student participates in research projects.",
      "If a student does not submit all assignments, then that student does not receive academic honors.",
      "There exists at least one student who utilizes university resources.",
      "If there exists a student who participates in research projects, then it is true that students who don't submit all assignments won't receive academic honors.",
      "If the existence of research project participants implies that non-submitters don't receive honors, then there exists a teaching assistant.",
      "If there exists a research participant, then if the existence of research participants implies non-submitters don't receive honors, there must be a teaching assistant.",
      "If a student doesn't qualify for graduate programs, then that student doesn't submit all assignments.",
      "There exists at least one student who receives academic honors."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∃x (TeachingAssistant(x))",
      "∃x (ResearchParticipant(x))",
      "∀x (QualifiesForGrad(x) → ResearchParticipant(x))",
      "∀x (¬SubmitsAssignments(x) → ¬ReceivesHonors(x))",
      "∃x (UtilizesResources(x))",
      "(∃x (ResearchParticipant(x)) → ∀y (¬SubmitsAssignments(y) → ¬ReceivesHonors(y)))",
      "((∃x (ResearchParticipant(x)) → ∀y (¬SubmitsAssignments(y) → ¬ReceivesHonors(y))) → ∃z (TeachingAssistant(z)))",
      "(∃x (ResearchParticipant(x)) → ((∃y (ResearchParticipant(y)) → ∀z (¬SubmitsAssignments(z) → ¬ReceivesHonors(z))) → ∃w (TeachingAssistant(w))))",
      "∀x (¬QualifiesForGrad(x) → ¬SubmitsAssignments(x))",
      "∃x (ReceivesHonors(x))"
    ],
    "choices": [
      "It is not the case that if there exists a research participant, then if the existence of research participants implies non-submitters don't receive honors, there must be a teaching assistant.",
      "If it's true that the existence of research participants implies that when research participants exist, non-submitters don't get honors leads to teaching assistants existing, then it's the same statement repeated again.",
      "Both the statement that if research participants exist then there being research participants implying non-submitters don't get honors leads to teaching assistants existing and its negation are simultaneously true.",
      "If there exists a research participant, then if the existence of research participants implies non-submitters don't receive honors, there must be a teaching assistant."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that all students contribute to open-source projects?"
    ],
    "premises-NL": [
      "All participants in the summer coding bootcamp complete daily programming exercises.",
      "If someone completes daily programming exercises, then they develop practical coding skills.",
      "If a student contributes to open-source projects, then they enhance their professional portfolio.",
      "If a student doesn't receive mentorship, then they cannot contribute to open-source projects.",
      "If a student attends code review sessions, then they receive mentorship.",
      "If all bootcamp participants complete daily exercises, then completing exercises develops practical coding skills.",
      "If not receiving mentorship prevents open-source contributions, then attending code reviews ensures receiving mentorship.",
      "If contributing to open-source enhances portfolios, then when all bootcamp participants complete daily exercises, this develops practical coding skills.",
      "All students contribute to open-source projects.",
      "All students enhance their professional portfolios."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x (BootcampParticipant(x) → CompletesExercises(x))",
      "∀x (CompletesExercises(x) → DevelopsCodingSkills(x))",
      "∀x (ContributesToOpenSource(x) → EnhancesPortfolio(x))",
      "∀x (¬ReceivesMentorship(x) → ¬ContributesToOpenSource(x))",
      "∀x (AttendsCodeReviews(x) → ReceivesMentorship(x))",
      "(∀x (BootcampParticipant(x) → CompletesExercises(x)) → ∀x (CompletesExercises(x) → DevelopsCodingSkills(x)))",
      "(∀x (¬ReceivesMentorship(x) → ¬ContributesToOpenSource(x)) → ∀x (AttendsCodeReviews(x) → ReceivesMentorship(x)))",
      "(∀x (ContributesToOpenSource(x) → EnhancesPortfolio(x)) → (∀x (BootcampParticipant(x) → CompletesExercises(x)) → ∀x (CompletesExercises(x) → DevelopsCodingSkills(x))))",
      "∀x (ContributesToOpenSource(x))",
      "∀x (EnhancesPortfolio(x))"
    ],
    "choices": [
      "If contributing to open-source enhances portfolios implies that all bootcamp participants completing exercises develops coding skills implies itself.",
      "It is not the case that contributing to open-source projects enhancing portfolios means bootcamp participation develops coding skills.",
      "Both the statement about open-source contributions enhancing portfolios leading to bootcamp exercise completion developing coding skills and its negation are simultaneously true.",
      "If contributing to open-source projects enhances portfolios, then if all bootcamp participants complete daily exercises, this develops practical coding skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that all students submit all required assignments?"
    ],
    "premises-NL": [
      "There exists at least one educational technology laboratory on campus.",
      "All students take part in collaborative learning activities.",
      "If a student qualifies for academic scholarships, then that student submits all required assignments.",
      "If a student does not qualify for academic scholarships, then that student does not take part in collaborative learning activities.",
      "All students submit all required assignments.",
      "If there exists an educational technology laboratory on campus, then all students take part in collaborative learning activities.",
      "If all students take part in collaborative learning activities, then there exists an educational technology laboratory on campus.",
      "If all students submit required assignments, then if there exists an educational technology laboratory, all students take part in collaborative learning activities.",
      "All students participate in peer review sessions.",
      "All students qualify for academic scholarships."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∃x (EducationalTechLab(x))",
      "∀x (Student(x) → ParticipatesToCollaborativeLearning(x))",
      "∀x (QualifiesForScholarship(x) → SubmitsAssignments(x))",
      "∀x (¬QualifiesForScholarship(x) → ¬ParticipatesToCollaborativeLearning(x))",
      "∀x (Student(x) → SubmitsAssignments(x))",
      "(∃x (EducationalTechLab(x)) → ∀y (Student(y) → ParticipatesToCollaborativeLearning(y)))",
      "(∀x (Student(x) → ParticipatesToCollaborativeLearning(x)) → ∃y (EducationalTechLab(y)))",
      "(∀x (Student(x) → SubmitsAssignments(x)) → (∃y (EducationalTechLab(y)) → ∀z (Student(z) → ParticipatesToCollaborativeLearning(z))))",
      "∀x (Student(x) → ParticipatesInPeerReview(x))",
      "∀x (Student(x) → QualifiesForScholarship(x))"
    ],
    "choices": [
      "If all students submitting assignments implies that an educational technology lab existing means students participate in collaborative learning implies itself.",
      "Both the statement that all students submitting assignments means tech labs lead to collaborative learning and its negation are simultaneously true.",
      "If all students submit required assignments, then if there exists an educational technology laboratory, all students take part in collaborative learning activities.",
      "It is not the case that all students submitting assignments implies that tech labs lead to collaborative learning."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one student who qualifies for the honors program?"
    ],
    "premises-NL": [
      "All students in the digital literacy program take standardized assessments.",
      "All students participate in group projects.",
      "There exists at least one student who qualifies for the honors program.",
      "If a student qualifies for the honors program, then that student participates in group projects.",
      "If a student participates in group projects, then that student receives constructive feedback.",
      "If participating in group projects means receiving constructive feedback, then all students participate in group projects.",
      "If all students participate in group projects, then participating in group projects means receiving constructive feedback.",
      "If qualifying for honors means participating in group projects, then if participating in projects means receiving feedback, all students participate in projects.",
      "If a student does not utilize learning technologies, then that student does not succeed in advanced courses.",
      "If a student qualifies for the honors program, then that student takes standardized assessments."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (TakesAssessments(x))",
      "∀x (ParticipatesInProjects(x))",
      "∃x (QualifiesForHonors(x))",
      "∀x (QualifiesForHonors(x) → ParticipatesInProjects(x))",
      "∀x (ParticipatesInProjects(x) → ReceivesFeedback(x))",
      "(∀x (ParticipatesInProjects(x) → ReceivesFeedback(x)) → ∀x (ParticipatesInProjects(x)))",
      "(∀x (ParticipatesInProjects(x)) → ∀x (ParticipatesInProjects(x) → ReceivesFeedback(x)))",
      "(∀x (QualifiesForHonors(x) → ParticipatesInProjects(x)) → (∀x (ParticipatesInProjects(x) → ReceivesFeedback(x)) → ∀x (ParticipatesInProjects(x))))",
      "∀x (¬UtilizesTechnology(x) → ¬SucceedsInAdvanced(x))",
      "∀x (QualifiesForHonors(x) → TakesAssessments(x))"
    ],
    "choices": [
      "If qualifying for honors means participating in group projects, then if participating in projects means receiving feedback, all students participate in projects.",
      "The statement 'if qualifying for honors means participating in group projects, then if participating in projects means receiving feedback, all students participate in projects' implies itself.",
      "Both the statement 'if qualifying for honors means participating in group projects implies that participating in projects means receiving feedback leads to universal participation' and its negation are simultaneously true.",
      "It is not the case that qualifying for honors meaning participation in group projects implies that participation meaning feedback receipt leads to universal project participation."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that all students take final examinations?"
    ],
    "premises-NL": [
      "There exists at least one research program at the university.",
      "There exists at least one pioneering course in the curriculum.",
      "All educational programs use digital resources.",
      "All students qualify for graduation.",
      "There exists at least one student who takes final examinations.",
      "If there is a research program at the university, then there is at least one student who takes final examinations.",
      "If there is a pioneering course in the curriculum, then there exists a research program at the university.",
      "If all students qualify for graduation, then all educational programs use digital resources.",
      "All students take final examinations.",
      "If a student qualifies for graduation, then that student takes final examinations."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∃x (ResearchProgram(x))",
      "∃x (PioneeringCourse(x))",
      "∀x (EducationalProgram(x) → UsesDigitalResources(x))",
      "∀x (Student(x) → QualifiesForGraduation(x))",
      "∃x (Student(x) ∧ TakesFinalExams(x))",
      "(∃x (ResearchProgram(x)) → ∃y (Student(y) ∧ TakesFinalExams(y)))",
      "(∃x (PioneeringCourse(x)) → ∃y (ResearchProgram(y)))",
      "(∀x (Student(x) → QualifiesForGraduation(x)) → ∀y (EducationalProgram(y) → UsesDigitalResources(y)))",
      "∀x (Student(x) → TakesFinalExams(x))",
      "∀x (QualifiesForGraduation(x) → TakesFinalExams(x))"
    ],
    "choices": [
      "Both the statement that all students qualifying for graduation implies all programs use digital resources and its negation are simultaneously true.",
      "It is not the case that all students qualifying for graduation implies all educational programs use digital resources.",
      "The statement that all students qualifying for graduation implies all programs use digital resources implies itself.",
      "If all students qualify for graduation, then all educational programs use digital resources."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that all computer science students are skilled in software development?"
    ],
    "premises-NL": [
      "All computer science students are skilled in software development.",
      "If someone regularly practices coding, then they are skilled in software development.",
      "If a programmer qualifies for advanced certification, then they take specialized training courses.",
      "All computer science students regularly practice coding.",
      "If someone is skilled in software development, then they can produce professional applications.",
      "If all computer science students regularly practice coding, then regular coding practice leads to software development skill.",
      "If all students are skilled in software development, then having software development skills means being able to produce professional applications.",
      "If having software development skills meaning capable of producing professional applications implies that regular coding practice leads to software skill, then the reverse implication also holds.",
      "If someone doesn't take specialized training courses, then they don't understand underlying algorithms.",
      "All computer science students can produce professional applications."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (ComputerScienceStudent(x) → SkilledInSoftwareDev(x))",
      "∀x (PracticesCoding(x) → SkilledInSoftwareDev(x))",
      "∀x (QualifiesForCertification(x) → TakesTrainingCourses(x))",
      "∀x (ComputerScienceStudent(x) → PracticesCoding(x))",
      "∀x (SkilledInSoftwareDev(x) → ProducesProfessionalApps(x))",
      "(∀x (ComputerScienceStudent(x) → PracticesCoding(x)) → ∀x (PracticesCoding(x) → SkilledInSoftwareDev(x)))",
      "(∀x (ComputerScienceStudent(x) → SkilledInSoftwareDev(x)) → ∀x (SkilledInSoftwareDev(x) → ProducesProfessionalApps(x)))",
      "((∀x (ComputerScienceStudent(x) → SkilledInSoftwareDev(x)) → ∀x (SkilledInSoftwareDev(x) → ProducesProfessionalApps(x))) → (∀x (ComputerScienceStudent(x) → PracticesCoding(x)) → ∀x (PracticesCoding(x) → SkilledInSoftwareDev(x))))",
      "∀x (¬TakesTrainingCourses(x) → ¬UnderstandsAlgorithms(x))",
      "∀x (ComputerScienceStudent(x) → ProducesProfessionalApps(x))"
    ],
    "choices": [
      "The statement 'if software development skills implying professional application production implies regular coding practice leads to software development skills' implies itself.",
      "If having software development skills meaning capable of producing professional applications implies that regular coding practice leads to software skill, then the reverse implication also holds.",
      "It is not the case that software development skills implying professional application capability implies that coding practice leads to software development skills.",
      "Both the statement about software skills implying application capability leading to coding practice implying software skills and its negation are simultaneously true."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one student who graduates on time?"
    ],
    "premises-NL": [
      "There exists at least one student who graduates on time.",
      "All university students take required core curriculum courses.",
      "If a student doesn't understand foundational concepts, then that student won't graduate on time.",
      "There exists at least one student who studies regularly.",
      "If a student doesn't study regularly, then that student won't graduate on time.",
      "If it's true that not understanding foundational concepts prevents graduating on time, then all university students take required core curriculum courses.",
      "If not understanding foundational concepts prevents on-time graduation, then there exists a student who studies regularly.",
      "If all university students take required core curriculum courses, then there exists at least one student who graduates on time.",
      "There exists at least one student who understands foundational concepts.",
      "If a student doesn't take required core curriculum courses, then that student doesn't understand foundational concepts."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∃x (GraduatesOnTime(x))",
      "∀x (TakesRequiredCourses(x))",
      "∀x (¬UnderstandsFoundations(x) → ¬GraduatesOnTime(x))",
      "∃x (StudiesRegularly(x))",
      "∀x (¬StudiesRegularly(x) → ¬GraduatesOnTime(x))",
      "(∀x (¬UnderstandsFoundations(x) → ¬GraduatesOnTime(x)) → ∀x (TakesRequiredCourses(x)))",
      "(∀x (¬UnderstandsFoundations(x) → ¬GraduatesOnTime(x)) → ∃x (StudiesRegularly(x)))",
      "(∀x (TakesRequiredCourses(x)) → ∃x (GraduatesOnTime(x)))",
      "∃x (UnderstandsFoundations(x))",
      "∀x (¬TakesRequiredCourses(x) → ¬UnderstandsFoundations(x))"
    ],
    "choices": [
      "The statement 'if all students take required courses, then at least one student graduates on time' implies itself.",
      "It is not the case that all students taking required courses implies at least one student graduates on time.",
      "Both the statement that all students taking required courses implies someone graduates on time and its negation are simultaneously true.",
      "If all university students take required core curriculum courses, then there exists at least one student who graduates on time."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one student who has completed an immersion program?"
    ],
    "premises-NL": [
      "If a language learner completes immersion programs, then that learner achieves conversational fluency.",
      "If a student doesn't engage with native speakers, then that student cannot complete immersion programs effectively.",
      "There exists at least one language learner who regularly engages with native speakers.",
      "If a language student doesn't engage with native speakers, then that student doesn't achieve conversational fluency.",
      "There exists at least one student receiving cultural competency recognition.",
      "If there exists a language learner who engages with native speakers, then students who don't engage with natives cannot complete immersion programs.",
      "If not engaging with native speakers means not achieving fluency, then at least one student receives cultural competency recognition.",
      "If not engaging with native speakers prevents completing immersion programs, then completing immersion programs leads to achieving conversational fluency.",
      "All language students create digital pronunciation portfolios.",
      "There exists at least one student who has completed an immersion program."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (CompletesImmersionProgram(x) → AchievesConversationalFluency(x))",
      "∀x (¬EngagesWithNativeSpeakers(x) → ¬CompletesImmersionProgram(x))",
      "∃x (EngagesWithNativeSpeakers(x))",
      "∀x (¬EngagesWithNativeSpeakers(x) → ¬AchievesConversationalFluency(x))",
      "∃x (ReceivesCulturalCompetencyRecognition(x))",
      "(∃x (EngagesWithNativeSpeakers(x)) → ∀y (¬EngagesWithNativeSpeakers(y) → ¬CompletesImmersionProgram(y)))",
      "(∀x (¬EngagesWithNativeSpeakers(x) → ¬AchievesConversationalFluency(x)) → ∃y (ReceivesCulturalCompetencyRecognition(y)))",
      "(∀x (¬EngagesWithNativeSpeakers(x) → ¬CompletesImmersionProgram(x)) → ∀y (CompletesImmersionProgram(y) → AchievesConversationalFluency(y)))",
      "∀x (LanguageStudent(x) → CreatesPronunciationPortfolio(x))",
      "∃x (CompletesImmersionProgram(x))"
    ],
    "choices": [
      "The necessary connection between native speaker engagement, immersion program completion, and conversational fluency is logically inconsistent.",
      "It is not the case that failure to engage with native speakers preventing immersion program completion implies completing immersion programs develops conversational fluency.",
      "If not engaging with native speakers prevents completing immersion programs, then completing immersion programs leads to achieving conversational fluency.",
      "Language students who engage with native speakers both do and do not achieve conversational fluency through immersion programs."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one student who utilizes online learning resources?"
    ],
    "premises-NL": [
      "All students take part in team projects.",
      "All students participate in peer reviews.",
      "All students utilize online learning resources.",
      "There exists at least one student who takes part in team projects.",
      "There exists at least one student who utilizes online learning resources.",
      "If there exists a student who utilizes online learning resources, then all students take part in team projects.",
      "If it's true that the existence of a student utilizing online resources implies all students take part in team projects, then there exists a student who takes part in team projects.",
      "If it's true that the existence of a student utilizing online resources implies all students take part in team projects, then all students utilize online learning resources.",
      "There exists at least one student who receives academic recognition.",
      "There exists at least one student who qualifies for advanced seminars."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (TakesPartInTeamProjects(x))",
      "∀x (ParticipatesInPeerReviews(x))",
      "∀x (UtilizesOnlineResources(x))",
      "∃x (TakesPartInTeamProjects(x))",
      "∃x (UtilizesOnlineResources(x))",
      "(∃x (UtilizesOnlineResources(x)) → ∀x (TakesPartInTeamProjects(x)))",
      "((∃x (UtilizesOnlineResources(x)) → ∀x (TakesPartInTeamProjects(x))) → ∃x (TakesPartInTeamProjects(x)))",
      "((∃x (UtilizesOnlineResources(x)) → ∀x (TakesPartInTeamProjects(x))) → ∀x (UtilizesOnlineResources(x)))",
      "∃x (ReceivesAcademicRecognition(x))",
      "∃x (QualifiesForAdvancedSeminars(x))"
    ],
    "choices": [
      "The statement that online resource utilization implying team project participation leads to universal online resource utilization implies itself.",
      "If it's true that the existence of a student utilizing online resources implies all students take part in team projects, then all students utilize online learning resources.",
      "Both the statement that students utilizing online resources implying team project participation leads to universal online resource utilization and its negation are simultaneously true.",
      "It is not the case that online resource utilization implying team project participation leads to universal online resource utilization."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one student who qualifies for honors distinction?"
    ],
    "premises-NL": [
      "There exists at least one research-based educational program.",
      "There exists at least one student who qualifies for honors distinction.",
      "If an educational program isn't research-based, then it doesn't incorporate thesis requirements.",
      "All students participate in peer learning communities.",
      "If a program incorporates thesis requirements, then it is research-based.",
      "If all students participate in peer learning communities, then there exists a research-based educational program.",
      "If it's true that non-research programs lack thesis requirements, then it's also true that universal peer learning participation implies the existence of research-based programs.",
      "If programs incorporating thesis requirements are research-based, then there exists a student who qualifies for honors distinction.",
      "If a student doesn't submit a substantial portfolio, then that student doesn't complete thesis requirements.",
      "If a student doesn't submit a substantial portfolio, then that student doesn't qualify for honors distinction."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∃x (ResearchBasedProgram(x))",
      "∃x (QualifiesForHonors(x))",
      "∀x (¬ResearchBasedProgram(x) → ¬IncorporatesThesis(x))",
      "∀x (ParticipatesInPeerLearning(x))",
      "∀x (IncorporatesThesis(x) → ResearchBasedProgram(x))",
      "(∀x (ParticipatesInPeerLearning(x)) → ∃x (ResearchBasedProgram(x)))",
      "(∀x (¬ResearchBasedProgram(x) → ¬IncorporatesThesis(x)) → (∀x (ParticipatesInPeerLearning(x)) → ∃x (ResearchBasedProgram(x))))",
      "(∀x (IncorporatesThesis(x) → ResearchBasedProgram(x)) → ∃x (QualifiesForHonors(x)))",
      "∀x (¬SubmitsPortfolio(x) → ¬IncorporatesThesis(x))",
      "∀x (¬SubmitsPortfolio(x) → ¬QualifiesForHonors(x))"
    ],
    "choices": [
      "It is not the case that thesis-incorporating programs being research-based implies the existence of students qualifying for honors distinction.",
      "If programs incorporating thesis requirements are research-based, then there exists a student who qualifies for honors distinction.",
      "Both the statement that thesis-requiring programs being research-based implies honors-qualifying students exist and its negation are simultaneously true.",
      "The statement that thesis-incorporating programs being research-based implies honors-qualifying students exist implies itself."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one student who earns language certification?"
    ],
    "premises-NL": [
      "If a language student completes immersion training, then that student develops cultural competency.",
      "If a student doesn't practice with native speakers, then that student doesn't complete immersion training.",
      "If a student earns language certification, then that student qualifies for international exchange programs.",
      "There exists at least one student who earns language certification.",
      "If completing immersion training implies developing cultural competency, then earning certification implies qualifying for exchange programs.",
      "If immersion implies competency, then this relationship implies certification leads to exchange qualification.",
      "If the relationship between immersion, competency, certification, and exchanges is valid, then certification implies exchange qualification.",
      "If not practicing with natives implies not completing immersion, then certification implies exchange qualification.",
      "If a student earns language certification, then that student maintains a digital portfolio."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (CompletesImmersion(x) → DevelopsCompetency(x))",
      "∀x (¬PracticesWithNatives(x) → ¬CompletesImmersion(x))",
      "∀x (EarnsCertification(x) → QualifiesForExchange(x))",
      "∃x (EarnsCertification(x))",
      "(∀x (CompletesImmersion(x) → DevelopsCompetency(x)) → ∀x (EarnsCertification(x) → QualifiesForExchange(x)))",
      "(∀x (CompletesImmersion(x) → DevelopsCompetency(x)) → (∀x (CompletesImmersion(x) → DevelopsCompetency(x)) → ∀x (EarnsCertification(x) → QualifiesForExchange(x))))",
      "((∀x (CompletesImmersion(x) → DevelopsCompetency(x)) → ∀x (EarnsCertification(x) → QualifiesForExchange(x))) → ∀x (EarnsCertification(x) → QualifiesForExchange(x)))",
      "(∀x (¬PracticesWithNatives(x) → ¬CompletesImmersion(x)) → ∀x (EarnsCertification(x) → QualifiesForExchange(x)))",
      "∀x (EarnsCertification(x) → MaintainsPortfolio(x))"
    ],
    "choices": [
      "The given implication is self-implying.",
      "Both the statement and its negation are true.",
      "If not practicing with natives implies not completing immersion, then certification implies exchange qualification.",
      "The given implication is false."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who has passed the final exam",
      "Every student who attends lectures regularly performs well in exams",
      "Every student who fails the final exam must retake the course",
      "If a student completes all required courses, then they graduate",
      "If all students who attend lectures perform well, then students who participate in discussions also perform well",
      "If a student does not pass the exam, then they do not get a diploma",
      "Every student must maintain a minimum GPA to stay enrolled",
      "There exists at least one student who graduates"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (Student(x) ∧ PassedExam(x))",
      "∀x (Student(x) → (AttendsLectures(x) → PerformsWell(x)))",
      "∀x (Student(x) → (FailedExam(x) → RetakeCourse(x)))",
      "∀x (Student(x) → (CompletedCourses(x) → Graduate(x)))",
      "((∀x (Student(x) → (AttendsLectures(x) → PerformsWell(x)))) → ∀x (Student(x) → (ParticipatesDiscussions(x) → PerformsWell(x))))",
      "∀x (Student(x) → (¬PassedExam(x) → ¬Diploma(x)))",
      "∀x (Student(x) → MaintainMinGPA(x))",
      "∃x (Student(x) ∧ Graduate(x))"
    ],
    "choices": [
      "Some students perform well in exams",
      "All students graduate",
      "Some students do not maintain a minimum GPA",
      "All students attend lectures regularly"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What can we figure out from all this?"
    ],
    "premises-NL": [
      "There exists at least one professor who teaches an advanced mathematics course",
      "Every professor who teaches advanced mathematics must have a PhD",
      "Every student enrolled in an advanced mathematics course must have completed calculus",
      "If a student does not attend tutorials, then they struggle with assignments",
      "If a student submits assignments on time, then they perform better in exams",
      "If a student completes an advanced course, then they can apply for research programs",
      "If every professor teaching advanced mathematics has a PhD, then those professors are experts in the field",
      "Every professor must conduct research in their field"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (Professor(x) ∧ TeachesAdvancedMath(x))",
      "∀x (Professor(x) → (TeachesAdvancedMath(x) → HasPhD(x)))",
      "∀x (Student(x) → (EnrolledAdvancedMath(x) → CompletedCalculus(x)))",
      "∀x (Student(x) → (¬AttendsTutorials(x) → StrugglesAssignments(x)))",
      "∀x (Student(x) → (SubmitsOnTime(x) → PerformsBetter(x)))",
      "∀x (Student(x) → (CompletedAdvancedCourse(x) → CanApplyResearch(x)))",
      "(∀x (Professor(x) → (TeachesAdvancedMath(x) → HasPhD(x)))) → ∀x (Professor(x) → Expert(x)))",
      "∀x (Professor(x) → ConductsResearch(x))"
    ],
    "choices": [
      "At least one professor out there has a PhD",
      "Every student finishes their advanced math courses",
      "Some students are having a tough time with their homework",
      "All professors are teaching advanced math classes"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What can we figure out about students?"
    ],
    "premises-NL": [
      "There exists at least one student who is enrolled in a course",
      "Every student must complete prerequisite courses before enrolling in an advanced course",
      "Every enrolled student has access to the university library",
      "If a student is not officially registered, then they cannot enroll in courses",
      "If a student has completed all graduation requirements, then they are eligible for a diploma",
      "If it is true that every student has access to the library, then any student who is officially enrolled can borrow books",
      "If a student is not enrolled in any course, then they cannot access the library",
      "Every student must pay tuition fees to enroll in courses"
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (Student(x) ∧ Enrolled(x))",
      "∀x (Student(x) → (EnrolledInAdvancedCourse(x) → PrerequisiteCompleted(x)))",
      "∀x (Student(x) → (Enrolled(x) → HasLibraryAccess(x)))",
      "∀x (Student(x) → (¬Registered(x) → ¬Enrolled(x)))",
      "∀x (Student(x) → (GraduationRequirementsMet(x) → EligibleForDiploma(x)))",
      "(∀x (Student(x) → HasLibraryAccess(x))) → ∀x (Student(x) → (Enrolled(x) → CanBorrowBooks(x)))",
      "∀x (Student(x) → (¬Enrolled(x) → ¬HasLibraryAccess(x)))",
      "∀x (Student(x) → (Enrolled(x) → PaysTuition(x)))"
    ],
    "choices": [
      "At least one student can borrow library books",
      "Every student is enrolled in an advanced course",
      "Some students don’t pay tuition fees",
      "All students have finished their graduation requirements"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What can we figure out about students?"
    ],
    "premises-NL": [
      "Every student who studies hard passes the exam",
      "Some students do not study hard",
      "If a student is well-prepared, then they study hard",
      "Every student in the university must pass at least one exam",
      "If a student attends all classes, then they are well-prepared",
      "If a student fails an exam, then they did not attend all classes",
      "Some students who attend all classes do not study hard",
      "Every student who is well-prepared has a high chance of passing the exam"
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) → (H(x) → P(x)))",
      "∃x (Student(x) ∧ ¬H(x))",
      "∀x (Student(x) → (W(x) → H(x)))",
      "∀x (Student(x) → P(x))",
      "∀x (Student(x) → (A(x) → W(x)))",
      "∀x (Student(x) → (F(x) → ¬A(x)))",
      "∃x (Student(x) ∧ A(x) ∧ ¬H(x))",
      "∀x (Student(x) → (W(x) → HighChance(P(x))))"
    ],
    "choices": [
      "Some students pass the exam without studying hard",
      "At least one student attends all classes",
      "Every student fails the exam",
      "All students have a high chance of passing"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about excessive competition’s effects?"
    ],
    "premises-NL": [
      "If students are highly competitive, they tend to push themselves harder to achieve better results.",
      "If students suffer from excessive competition, they will experience higher stress and burnout.",
      "If students compete in a healthy environment, they often experience improved motivation and performance.",
      "If students face intense academic competition, they will experience feelings of inadequacy and anxiety.",
      "If students focus on personal growth, they will achieve more sustainable academic success.",
      "If students experience cooperative learning environments, they can improve learning and enhance performance.",
      "If students engage in excessive competition, they will prioritize grades over deep understanding.",
      "If students receive proper mentorship, they can balance competition with well-being.",
      "If students develop self-reflection habits, they can mitigate negative competition effects.",
      "If institutions implement balanced evaluation systems, students experience reduced toxic competition."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ Competitive(x) → IncreasedEffort(x) ∧ BetterResults(x))",
      "ForAll(x, Student(x) ∧ ExcessiveCompetition(x) → Stress(x) ∧ Burnout(x))",
      "ForAll(x, Student(x) ∧ HealthyCompetition(x) ∧ SupportiveEnvironment(x) → ImprovedMotivation(x) ∧ EnhancedPerformance(x))",
      "ForAll(x, Student(x) ∧ IntenseCompetition(x) → Inadequacy(x) ∧ Anxiety(x))",
      "ForAll(x, Student(x) ∧ PersonalGrowthFocus(x) → SustainableSuccess(x))",
      "ForAll(x, Student(x) ∧ CooperativeLearning(x) → BetterLearning(x) ∧ HigherPerformance(x))",
      "ForAll(x, Student(x) ∧ ExcessiveCompetition(x) → GradeFocus(x) ∧ ¬DeepUnderstanding(x))",
      "ForAll(x, Student(x) ∧ GoodMentorship(x) → BalancedApproach(x) ∧ WellBeing(x))",
      "ForAll(x, Student(x) ∧ SelfReflection(x) → MitigateNegativeEffects(x))",
      "ForAll(x, Institution(x) ∧ BalancedEvaluation(x) → ReduceToxicCompetition(x))"
    ],
    "choices": [
      "Excessive competition leads to stress and prioritizing grades.",
      "Excessive competition improves motivation and performance.",
      "Excessive competition has no impact on students.",
      "Excessive competition enhances deep understanding."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about effective policies?"
    ],
    "premises-NL": [
      "There exists at least one educational policy that improves student engagement.",
      "Every education reform is aimed at increasing student success.",
      "If a teaching method is research-backed, then it is effective.",
      "If an educational policy is ineffective, then it does not improve student engagement.",
      "If a curriculum is well-structured, then it leads to better learning outcomes.",
      "If every teacher is well-trained, then student performance increases.",
      "If a school has modern facilities, then it provides a better learning environment.",
      "If a school provides personalized learning, then it enhances student motivation.",
      "Every well-funded school has access to better resources.",
      "There exists at least one school that implements innovative teaching strategies."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Policy(x) ∧ ImprovesEngagement(x))",
      "ForAll(x, Reform(x) → AimsStudentSuccess(x))",
      "ForAll(x, TeachingMethod(x) ∧ ResearchBacked(x) → Effective(x))",
      "ForAll(x, Policy(x) ∧ Ineffective(x) → ¬ImprovesEngagement(x))",
      "ForAll(x, Curriculum(x) ∧ WellStructured(x) → BetterOutcomes(x))",
      "ForAll(x, Teacher(x) → WellTrained(x)) → PerformanceIncreases()",
      "ForAll(x, School(x) ∧ ModernFacilities(x) → BetterEnvironment(x))",
      "ForAll(x, School(x) ∧ PersonalizedLearning(x) → EnhancesMotivation(x))",
      "ForAll(x, School(x) ∧ WellFunded(x) → BetterResources(x))",
      "Exists(x, School(x) ∧ InnovativeStrategies(x))"
    ],
    "choices": [
      "Some policies are effective.",
      "All policies are effective.",
      "No policies are effective.",
      "Effectiveness is unrelated to engagement."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about teaching methods in innovative schools?"
    ],
    "premises-NL": [
      "There exists at least one educational policy that improves student engagement.",
      "Every education reform is aimed at increasing student success.",
      "If a teaching method is research-backed, then it is effective.",
      "If an educational policy is ineffective, then it does not improve student engagement.",
      "If a curriculum is well-structured, then it leads to better learning outcomes.",
      "If every teacher is well-trained, then student performance increases.",
      "If a school has modern facilities, then it provides a better learning environment.",
      "If a school provides personalized learning, then it enhances student motivation.",
      "Every well-funded school has access to better resources.",
      "There exists at least one school that implements innovative teaching strategies."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Policy(x) ∧ ImprovesEngagement(x))",
      "ForAll(x, Reform(x) → AimsStudentSuccess(x))",
      "ForAll(x, TeachingMethod(x) ∧ ResearchBacked(x) → Effective(x))",
      "ForAll(x, Policy(x) ∧ Ineffective(x) → ¬ImprovesEngagement(x))",
      "ForAll(x, Curriculum(x) ∧ WellStructured(x) → BetterOutcomes(x))",
      "ForAll(x, Teacher(x) → WellTrained(x)) → PerformanceIncreases()",
      "ForAll(x, School(x) ∧ ModernFacilities(x) → BetterEnvironment(x))",
      "ForAll(x, School(x) ∧ PersonalizedLearning(x) → EnhancesMotivation(x))",
      "ForAll(x, School(x) ∧ WellFunded(x) → BetterResources(x))",
      "Exists(x, School(x) ∧ InnovativeStrategies(x))"
    ],
    "choices": [
      "Some teaching methods are effective.",
      "All teaching methods are effective.",
      "No teaching methods are effective.",
      "Effectiveness requires modern facilities."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about students who attend lectures?"
    ],
    "premises-NL": [
      "There exists a student who excels in mathematics.",
      "All students who study regularly perform well in exams.",
      "If a student understands the concepts, they can solve complex problems.",
      "If a student does not practice, then they struggle with problem-solving.",
      "If a student attends lectures, then they gain a better understanding of the subject.",
      "If every student gets proper guidance, then their performance improves.",
      "If a student participates in group discussions, then their analytical skills enhance.",
      "If a school has experienced teachers, then students learn effectively.",
      "Every student who takes mock tests scores higher in final exams.",
      "There exists at least one student who actively engages in class discussions."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, Student(x) ∧ ExcelsMath(x))",
      "ForAll(x, Student(x) ∧ StudiesRegularly(x) → PerformsWellExams(x))",
      "ForAll(x, Student(x) ∧ UnderstandsConcepts(x) → SolvesComplexProblems(x))",
      "ForAll(x, Student(x) ∧ ¬Practices(x) → StrugglesProblemSolving(x))",
      "ForAll(x, Student(x) ∧ AttendsLectures(x) → BetterUnderstanding(x))",
      "ForAll(x, Student(x) → ProperGuidance(x)) → PerformanceImproves()",
      "ForAll(x, Student(x) ∧ GroupDiscussions(x) → AnalyticalSkillsEnhanced(x))",
      "ForAll(x, School(x) ∧ ExperiencedTeachers(x) → LearnEffectively(x))",
      "ForAll(x, Student(x) ∧ TakesMockTests(x) → ScoresHigherExams(x))",
      "Exists(x, Student(x) ∧ EngagesClassDiscussions(x))"
    ],
    "choices": [
      "Some students solve complex problems.",
      "All students solve complex problems.",
      "No students solve complex problems.",
      "Problem-solving depends on mock tests."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about universities with online courses?"
    ],
    "premises-NL": [
      "There exists at least one university that implements a hybrid learning model.",
      "Every accredited university follows a standard curriculum.",
      "If a university offers online courses, then it increases accessibility.",
      "If a university does not provide scholarships, then some students cannot afford tuition.",
      "If a university has strong research programs, then it attracts top faculty.",
      "If every student has access to digital learning tools, then their learning experience improves.",
      "If a university collaborates with industries, then students gain practical experience.",
      "If a university provides mentorship programs, then student career readiness improves.",
      "Every well-ranked university has high student satisfaction.",
      "There exists at least one university that supports interdisciplinary studies."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "Exists(x, University(x) ∧ HybridLearning(x))",
      "ForAll(x, University(x) ∧ Accredited(x) → StandardCurriculum(x))",
      "ForAll(x, University(x) ∧ OnlineCourses(x) → IncreasesAccessibility(x))",
      "ForAll(x, University(x) ∧ ¬Scholarships(x) → ¬AffordableTuition(x))",
      "ForAll(x, University(x) ∧ StrongResearch(x) → TopFaculty(x))",
      "ForAll(x, Student(x) → DigitalTools(x)) → LearningExperienceImproves()",
      "ForAll(x, University(x) ∧ IndustryCollaboration(x) → PracticalExperience(x))",
      "ForAll(x, University(x) ∧ MentorshipPrograms(x) → CareerReadiness(x))",
      "ForAll(x, University(x) ∧ WellRanked(x) → HighSatisfaction(x))",
      "Exists(x, University(x) ∧ InterdisciplinaryStudies(x))"
    ],
    "choices": [
      "Some universities increase accessibility.",
      "All universities increase accessibility.",
      "No universities increase accessibility.",
      "Accessibility depends on research programs."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about students with personalized support?"
    ],
    "premises-NL": [
      "If students engage in active learning, they retain information more effectively.",
      "If students have access to diverse learning materials, they develop a broader understanding of subjects.",
      "If students participate in group projects, they enhance teamwork and communication skills.",
      "If students receive constructive feedback, they can improve their academic performance.",
      "If students rely solely on rote memorization, they may struggle with critical thinking.",
      "If students are exposed to real-world applications of knowledge, they gain a deeper appreciation for learning.",
      "If students lack proper time management skills, they may experience academic burnout.",
      "If teachers provide personalized support, students feel more motivated to learn.",
      "If students practice self-discipline, they develop better study habits and consistency.",
      "If schools encourage a growth mindset, students are more resilient to academic challenges."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ ActiveLearning(x) → BetterRetention(x))",
      "ForAll(x, Student(x) ∧ AccessToDiverseMaterials(x) → BroaderUnderstanding(x))",
      "ForAll(x, Student(x) ∧ GroupProjects(x) → TeamworkSkills(x) ∧ CommunicationSkills(x))",
      "ForAll(x, Student(x) ∧ ConstructiveFeedback(x) → ImprovedPerformance(x))",
      "ForAll(x, Student(x) ∧ RoteMemorization(x) → ¬CriticalThinking(x))",
      "ForAll(x, Student(x) ∧ RealWorldApplications(x) → DeeperAppreciation(x))",
      "ForAll(x, Student(x) ∧ ¬TimeManagementSkills(x) → AcademicBurnout(x))",
      "ForAll(x, Student(x) ∧ PersonalizedSupport(x) → HigherMotivation(x))",
      "ForAll(x, Student(x) ∧ SelfDiscipline(x) → BetterStudyHabits(x) ∧ Consistency(x))",
      "ForAll(x, School(x) ∧ GrowthMindsetEncouraged(x) → MoreResilientStudents(x))"
    ],
    "choices": [
      "Some students improve academic performance.",
      "All students develop teamwork skills.",
      "No students are motivated.",
      "Students struggle with critical thinking."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about students in interactive learning environments?"
    ],
    "premises-NL": [
      "If students participate in extracurricular activities, they develop better social skills.",
      "If students engage in project-based learning, they enhance problem-solving abilities.",
      "If students receive timely academic support, they are less likely to fall behind in their studies.",
      "If students are exposed to interdisciplinary learning, they gain a more holistic understanding of concepts.",
      "If students rely solely on test scores, they may neglect creativity and innovation.",
      "If students collaborate with peers from diverse backgrounds, they improve cultural awareness and adaptability.",
      "If students experience high academic pressure, they are more prone to anxiety and decreased motivation.",
      "If teachers use interactive teaching methods, students are more engaged in learning.",
      "If students develop metacognitive skills, they become more effective independent learners.",
      "If educational institutions promote lifelong learning habits, students continue to grow beyond formal education."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ ExtracurricularActivities(x) → BetterSocialSkills(x))",
      "ForAll(x, Student(x) ∧ ProjectBasedLearning(x) → EnhancedProblemSolving(x))",
      "ForAll(x, Student(x) ∧ TimelyAcademicSupport(x) → LessLikelihoodFallingBehind(x))",
      "ForAll(x, Student(x) ∧ InterdisciplinaryLearning(x) → HolisticUnderstanding(x))",
      "ForAll(x, Student(x) ∧ SolelyTestScores(x) → ¬Creativity(x) ∧ ¬Innovation(x))",
      "ForAll(x, Student(x) ∧ PeerDiversity(x) → ImprovedCulturalAwareness(x) ∧ BetterAdaptability(x))",
      "ForAll(x, Student(x) ∧ HighAcademicPressure(x) → IncreasedAnxiety(x) ∧ DecreasedMotivation(x))",
      "ForAll(x, Student(x) ∧ InteractiveTeaching(x) → HigherEngagement(x))",
      "ForAll(x, Student(x) ∧ MetacognitiveSkills(x) → MoreEffectiveIndependentLearning(x))",
      "ForAll(x, Institution(x) ∧ PromoteLifelongLearning(x) → ContinuedGrowthBeyondEducation(x))"
    ],
    "choices": [
      "Some students develop better problem-solving skills.",
      "All students lack engagement.",
      "No students improve cultural awareness.",
      "Students neglect creativity."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about students with self-directed learning?"
    ],
    "premises-NL": [
      "If students engage in self-directed learning, they develop stronger critical thinking skills.",
      "If students receive frequent formative assessments, they can track their academic progress effectively.",
      "If students participate in classroom debates, they improve their reasoning and argumentation skills.",
      "If students engage in hands-on experiments, they gain a deeper understanding of scientific concepts.",
      "If students face rigid curriculum structures, they may struggle to explore their personal interests.",
      "If students work on open-ended projects, they enhance their creativity and innovation skills.",
      "If students lack access to quality educational resources, their academic performance may suffer.",
      "If teachers provide differentiated instruction, students with diverse learning needs perform better.",
      "If students are encouraged to ask questions, they develop a stronger sense of curiosity and inquiry.",
      "If schools integrate technology in learning, students gain better digital literacy skills."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ SelfDirectedLearning(x) → StrongerCriticalThinking(x))",
      "ForAll(x, Student(x) ∧ FrequentFormativeAssessments(x) → EffectiveProgressTracking(x))",
      "ForAll(x, Student(x) ∧ ClassroomDebates(x) → ImprovedReasoning(x) ∧ BetterArgumentation(x))",
      "ForAll(x, Student(x) ∧ HandsOnExperiments(x) → DeeperUnderstanding(x))",
      "ForAll(x, Student(x) ∧ RigidCurriculum(x) → StruggleToExploreInterests(x))",
      "ForAll(x, Student(x) ∧ OpenEndedProjects(x) → EnhancedCreativity(x) ∧ StrongerInnovation(x))",
      "ForAll(x, Student(x) ∧ ¬QualityResources(x) → LowerAcademicPerformance(x))",
      "ForAll(x, Student(x) ∧ DifferentiatedInstruction(x) → BetterPerformanceDiverseNeeds(x))",
      "ForAll(x, Student(x) ∧ EncouragedToAskQuestions(x) → StrongerCuriosity(x) ∧ InquirySkills(x))",
      "ForAll(x, Institution(x) ∧ TechnologyIntegratedLearning(x) → ImprovedDigitalLiteracy(x))"
    ],
    "choices": [
      "Some students enhance creativity.",
      "Some students improve reasoning.",
      "No students improve reasoning.",
      "Students struggle with progress tracking."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about students with personalized learning plans?"
    ],
    "premises-NL": [
      "If students engage in collaborative learning, they develop better teamwork skills.",
      "If students receive constructive feedback, they can improve their academic performance.",
      "If students participate in extracurricular leadership roles, they enhance their decision-making abilities.",
      "If students have access to personalized learning plans, they achieve better learning outcomes.",
      "If students experience flexible learning environments, they adapt more effectively to different challenges.",
      "If students rely solely on rote memorization, they may struggle with critical thinking.",
      "If students engage in interdisciplinary projects, they build connections between different fields of knowledge.",
      "If students are taught time management strategies, they can handle academic workloads more efficiently.",
      "If students receive mentorship from experienced educators, they develop stronger career readiness skills.",
      "If schools promote inclusive education, students from diverse backgrounds have equal learning opportunities."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ CollaborativeLearning(x) → BetterTeamworkSkills(x))",
      "ForAll(x, Student(x) ∧ ConstructiveFeedback(x) → ImprovedAcademicPerformance(x))",
      "ForAll(x, Student(x) ∧ ExtracurricularLeadership(x) → EnhancedDecisionMaking(x))",
      "ForAll(x, Student(x) ∧ PersonalizedLearningPlans(x) → BetterLearningOutcomes(x))",
      "ForAll(x, Student(x) ∧ FlexibleLearning(x) → EffectiveAdaptation(x))",
      "ForAll(x, Student(x) ∧ SolelyRoteMemorization(x) → StrugglesWithCriticalThinking(x))",
      "ForAll(x, Student(x) ∧ InterdisciplinaryProjects(x) → KnowledgeConnections(x))",
      "ForAll(x, Student(x) ∧ TimeManagementStrategies(x) → EfficientWorkloadHandling(x))",
      "ForAll(x, Student(x) ∧ ExperiencedMentorship(x) → StrongerCareerReadiness(x))",
      "ForAll(x, Institution(x) ∧ PromotesInclusiveEducation(x) → EqualLearningOpportunities(x))"
    ],
    "choices": [
      "Some students handle workloads efficiently.",
      "All students struggle with critical thinking.",
      "No students achieve better outcomes.",
      "Some students improve academic performance."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about students with clear learning objectives?"
    ],
    "premises-NL": [
      "If students engage in problem-based learning, they develop stronger analytical skills.",
      "If students have access to diverse learning materials, they gain a broader perspective on subjects.",
      "If students participate in peer tutoring, both tutors and learners reinforce their knowledge.",
      "If students experience project-based assessments, they apply theoretical knowledge to practical situations.",
      "If students lack motivation, their academic performance may decline.",
      "If students engage in digital learning platforms, they enhance their technological proficiency.",
      "If students practice metacognitive strategies, they become more effective self-learners.",
      "If students receive clear learning objectives, they can set better academic goals.",
      "If students engage in physical activities during school hours, they improve their cognitive function.",
      "If schools implement competency-based education, students progress based on mastery rather than time spent."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ ProblemBasedLearning(x) → StrongerAnalyticalSkills(x))",
      "ForAll(x, Student(x) ∧ DiverseLearningMaterials(x) → BroaderSubjectPerspective(x))",
      "ForAll(x, Student(x) ∧ PeerTutoring(x) → ReinforcedKnowledge(x))",
      "ForAll(x, Student(x) ∧ ProjectBasedAssessments(x) → PracticalApplication(x))",
      "ForAll(x, Student(x) ∧ LackMotivation(x) → DeclinedAcademicPerformance(x))",
      "ForAll(x, Student(x) ∧ DigitalLearningPlatforms(x) → EnhancedTechProficiency(x))",
      "ForAll(x, Student(x) ∧ MetacognitiveStrategies(x) → EffectiveSelfLearner(x))",
      "ForAll(x, Student(x) ∧ ClearLearningObjectives(x) → BetterAcademicGoals(x))",
      "ForAll(x, Student(x) ∧ SchoolPhysicalActivity(x) → ImprovedCognitiveFunction(x))",
      "ForAll(x, Institution(x) ∧ CompetencyBasedEducation(x) → MasteryBasedProgression(x))"
    ],
    "choices": [
      "Some students improve cognitive function.",
      "All students lack motivation.",
      "No students apply practical knowledge.",
      "Some students set better academic goals."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "Every student attends tutoring.",
      "If a student completes assignments on time, then they understand the course material.",
      "If a student understands the material, then they are prepared for the final exam.",
      "If a student completes assignments on time, then they submit assignments on time.",
      "If a student completes assignments on time, then they are prepared for the final exam."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AttendsTutoring(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → UnderstandsMaterial(x))",
      "∀x (Student(x) ∧ UnderstandsMaterial(x) → PreparedForExam(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → SubmitsAssignmentsOnTime(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → PreparedForExam(x))"
    ],
    "choices": [
      "Some students understand the material but are not prepared for the exam.",
      "If completing assignments on time means understanding the material, then all students are prepared for the exam.",
      "All students who complete assignments on time do not understand the material.",
      "No student who attends tutoring is prepared for the exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student installs the software from the university’s repository, then the software is functional.",
      "There exists at least one student who has installed the software from the university’s repository.",
      "There exists at least one student who is using the software.",
      "If a student does not update the software, then the software is not secure.",
      "If a student does not install the software from the university’s repository, then the software is not functional.",
      "If a student installs the software, it implies that if they do not update it, the software will be insecure.",
      "If a student installs the software, then they have access to the latest features from the university's system.",
      "There exists at least one student who has updated the software.",
      "If a student does not update the software, then they do not have access to the latest features."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "(InstallsSoftware(x) → FunctionalSoftware(x))",
      "Exists(x, InstallsSoftware(x))",
      "Exists(x, UsesSoftware(x))",
      "(¬UpdatesSoftware(x) → ¬SecureSoftware(x))",
      "(¬InstallsSoftware(x) → ¬FunctionalSoftware(x))",
      "(InstallsSoftware(x) → (¬UpdatesSoftware(x) → ¬SecureSoftware(x)))",
      "(InstallsSoftware(x) → HasAccessToLatestFeatures(x))",
      "Exists(x, UpdatesSoftware(x))",
      "(¬UpdatesSoftware(x) → ¬HasAccessToLatestFeatures(x))"
    ],
    "choices": [
      "All students install the software.",
      "All students update the software.",
      "There exists a student with access to the latest features.",
      "All students’ software is secure."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "Every student attends tutoring.",
      "If a student completes assignments on time, then they understand the course material.",
      "If a student understands the material, then they are prepared for the final exam.",
      "If a student completes assignments on time, then they submit assignments on time.",
      "If a student completes assignments on time, then they are prepared for the final exam."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AttendsTutoring(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → UnderstandsMaterial(x))",
      "∀x (Student(x) ∧ UnderstandsMaterial(x) → PreparedForExam(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → SubmitsAssignmentsOnTime(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → PreparedForExam(x))"
    ],
    "choices": [
      "Some students understand the material but are not prepared for the exam.",
      "If completing assignments on time means understanding the material, then all students are prepared for the exam.",
      "All students who complete assignments on time do not understand the material.",
      "No student who attends tutoring is prepared for the exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who is enrolled in the course.",
      "If a student studies consistently, then the student understands the subject.",
      "If a student does not study consistently, then the student does not perform well in exams.",
      "All students are enrolled in the course.",
      "If a student does not attend lectures, then the student does not complete assignments.",
      "If studying consistently leads to understanding the subject, then all students are enrolled in the course.",
      "All students complete their assignments.",
      "If a student does not perform well in exams, then the student did not study consistently.",
      "If a student is not enrolled in the course, then the student does not complete assignments."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "Exists(x, Enrolled(x))",
      "ForAll(x, (StudiesConsistently(x) → UnderstandsSubject(x)))",
      "ForAll(x, (¬StudiesConsistently(x) → ¬PerformsWell(x)))",
      "ForAll(x, Enrolled(x))",
      "ForAll(x, (¬AttendsLectures(x) → ¬CompletesAssignments(x)))",
      "((ForAll(x, (StudiesConsistently(x) → UnderstandsSubject(x))) → ForAll(x, Enrolled(x)))",
      "ForAll(x, CompletesAssignments(x))",
      "ForAll(x, (¬PerformsWell(x) → ¬StudiesConsistently(x)))",
      "ForAll(x, (¬Enrolled(x) → ¬CompletesAssignments(x)))"
    ],
    "choices": [
      "There exists a student who is not enrolled.",
      "There exists a student who does not complete assignments.",
      "All students attend lectures.",
      "There exists a student who does not study consistently."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "Every student attends tutoring.",
      "If a student completes assignments on time, then they understand the course material.",
      "If a student understands the material, then they are prepared for the final exam.",
      "If a student completes assignments on time, then they submit assignments on time.",
      "If a student completes assignments on time, then they are prepared for the final exam."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AttendsTutoring(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → UnderstandsMaterial(x))",
      "∀x (Student(x) ∧ UnderstandsMaterial(x) → PreparedForExam(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → SubmitsAssignmentsOnTime(x))",
      "∀x (Student(x) ∧ CompletesAssignmentsOnTime(x) → PreparedForExam(x))"
    ],
    "choices": [
      "Some students understand the material but are not prepared for the exam.",
      "If completing assignments on time means understanding the material, then all students are prepared for the exam.",
      "All students who complete assignments on time do not understand the material.",
      "No student who attends tutoring is prepared for the exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All books in the library are cataloged.",
      "There exists at least one book that is cataloged.",
      "If a book is reserved, then it is not available for borrowing.",
      "If a book is not returned, then it is not available.",
      "All users of the library follow the library rules.",
      "There exists at least one book that is available.",
      "All books in the reference section cannot be borrowed.",
      "If all reference books cannot be borrowed, then there exists at least one available book.",
      "If a book is not reserved, then it is cataloged.",
      "If a book is available, then it is cataloged.",
      "If a book is not cataloged, then it is not in the reference section."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, Cataloged(x))",
      "Exists(x, Cataloged(x))",
      "ForAll(x, (Reserved(x) → ¬Borrowable(x)))",
      "ForAll(x, (¬Returned(x) → ¬Available(x)))",
      "ForAll(x, FollowsRules(x))",
      "Exists(x, Available(x))",
      "ForAll(x, (ReferenceSection(x) → ¬Borrowable(x)))",
      "((ForAll(x, (ReferenceSection(x) → ¬Borrowable(x))) → Exists(x, Available(x)))",
      "ForAll(x, (¬Reserved(x) → Cataloged(x)))",
      "ForAll(x, (Available(x) → Cataloged(x)))",
      "ForAll(x, (¬Cataloged(x) → ¬ReferenceSection(x)))"
    ],
    "choices": [
      "All books are available.",
      "There exists a book that is not cataloged.",
      "There exists a book that is returned.",
      "All books are borrowable."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "All members provide support to their teammates.",
      "If a member supports their teammates, they take initiative.",
      "If a team member takes initiative, they collaborate.",
      "If a team member does not communicate, they do not receive feedback."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (TeamMember(x) → SupportsTeammates(x))",
      "∀x (TeamMember(x) ∧ SupportsTeammates(x) → TakesInitiative(x))",
      "∀x (TeamMember(x) ∧ TakesInitiative(x) → Collaborates(x))",
      "∀x (TeamMember(x) ∧ ¬Communicates(x) → ¬ReceivesFeedback(x))"
    ],
    "choices": [
      "Some team members take initiative but do not collaborate.",
      "If taking initiative means contributing effectively, then assuming it again means all members collaborate.",
      "No team member supports their teammates.",
      "All team members contribute effectively but do not collaborate."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student does not practice Calculus exercises, they will not understand the concepts.",
      "If a student does not attend Calculus lectures, they will not understand the definitions.",
      "There exists at least one student who has mastered Calculus.",
      "All students have mastered Calculus.",
      "If a student does not attend lectures, they will not practice exercises.",
      "If a student does not master Calculus, they will not practice exercises.",
      "If a student practices exercises, they will perform well in exams.",
      "All students are required to submit assignments.",
      "If a student does not take notes, they will not practice exercises.",
      "If not attending lectures leads to not understanding definitions, then all students have mastered Calculus.",
      "If a student does not attend lectures, they will not master Calculus.",
      "If a student takes notes, they will perform well in exams.",
      "If a student does not practice exercises, they will not take notes.",
      "All students practice exercises.",
      "All students perform well in exams.",
      "If a student does not perform well in exams, they will not master Calculus."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, (¬PracticeExercises(x) → ¬UnderstandConcepts(x)))",
      "ForAll(x, (¬AttendLectures(x) → ¬UnderstandDefinitions(x)))",
      "Exists(x, MasterCalculus(x))",
      "ForAll(x, MasterCalculus(x))",
      "ForAll(x, (¬AttendLectures(x) → ¬PracticeExercises(x)))",
      "ForAll(x, (¬MasterCalculus(x) → ¬PracticeExercises(x)))",
      "ForAll(x, (PracticeExercises(x) → PerformWell(x)))",
      "ForAll(x, SubmitAssignments(x))",
      "ForAll(x, (¬TakeNotes(x) → ¬PracticeExercises(x)))",
      "((ForAll(x, (¬AttendLectures(x) → ¬UnderstandDefinitions(x))) → ForAll(x, MasterCalculus(x)))",
      "ForAll(x, (¬AttendLectures(x) → ¬MasterCalculus(x)))",
      "ForAll(x, (TakeNotes(x) → PerformWell(x)))",
      "ForAll(x, (¬PracticeExercises(x) → ¬TakeNotes(x)))",
      "ForAll(x, PracticeExercises(x))",
      "ForAll(x, PerformWell(x))",
      "ForAll(x, (¬PerformWell(x) → ¬MasterCalculus(x)))"
    ],
    "choices": [
      "There exists a student who has not mastered Calculus.",
      "There exists a student who does not practice exercises.",
      "All students attend lectures.",
      "There exists a student who does not perform well in exams."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student attends tutoring, then that student improves exam scores.",
      "If a student improves exam scores, then that student has an opportunity to succeed.",
      "If a student participates in group discussions, then that student attends tutoring.",
      "There exists at least one student who participates in group discussions.",
      "If a student does not submit assignments on time, then that student does not attend tutoring."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ AttendsTutoring(x) → ImprovesExamScores(x))",
      "∀x (Student(x) ∧ ImprovesExamScores(x) → HasOpportunityToSucceed(x))",
      "∀x (Student(x) ∧ ParticipatesGroupDiscussion(x) → AttendsTutoring(x))",
      "∃x (Student(x) ∧ ParticipatesGroupDiscussion(x))",
      "∀x (Student(x) ∧ ¬SubmitsOnTime(x) → ¬AttendsTutoring(x))"
    ],
    "choices": [
      "Some students attend tutoring but don’t have an opportunity to succeed.",
      "If not submitting assignments means not attending tutoring, then some student has an opportunity to succeed.",
      "No student participates in group discussions.",
      "All students who improve exam scores don’t attend tutoring."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who submits assignments.",
      "If a student completes the project, then they pass the test.",
      "If a student completes the project, then they attend lectures.",
      "Every student passes the test.",
      "Every student submits assignments.",
      "If at least one student submits assignments, then every student passes the test.",
      "There exists at least one student who participates in discussions.",
      "There exists at least one student who passes the test.",
      "If a student participates in discussions, then they attend lectures."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "Exists(x, SubmitsAssignments(x))",
      "ForAll(x, (CompletesProject(x) → PassesTest(x)))",
      "ForAll(x, (CompletesProject(x) → AttendsLectures(x)))",
      "ForAll(x, PassesTest(x))",
      "ForAll(x, SubmitsAssignments(x))",
      "(Exists(x, SubmitsAssignments(x)) → ForAll(x, PassesTest(x)))",
      "Exists(x, ParticipatesInDiscussions(x))",
      "Exists(x, PassesTest(x))",
      "ForAll(x, (ParticipatesInDiscussions(x) → AttendsLectures(x)))"
    ],
    "choices": [
      "There exists a student who does not pass the test.",
      "There exists a student who does not submit assignments.",
      "There exists a student who attends lectures.",
      "Every student completes the project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student attends tutoring, then that student improves exam scores.",
      "If a student improves exam scores, then that student has an opportunity to succeed.",
      "If a student participates in group discussions, then that student attends tutoring.",
      "There exists at least one student who participates in group discussions.",
      "If a student does not submit assignments on time, then that student does not attend tutoring."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ AttendsTutoring(x) → ImprovesExamScores(x))",
      "∀x (Student(x) ∧ ImprovesExamScores(x) → HasOpportunityToSucceed(x))",
      "∀x (Student(x) ∧ ParticipatesGroupDiscussion(x) → AttendsTutoring(x))",
      "∃x (Student(x) ∧ ParticipatesGroupDiscussion(x))",
      "∀x (Student(x) ∧ ¬SubmitsOnTime(x) → ¬AttendsTutoring(x))"
    ],
    "choices": [
      "Some students attend tutoring but don’t have an opportunity to succeed.",
      "If not submitting assignments means not attending tutoring, then some student has an opportunity to succeed.",
      "No student participates in group discussions.",
      "All students who improve exam scores don’t attend tutoring."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who asks questions during class.",
      "If a student does not engage in class discussions, then they do not understand the material.",
      "Not every student participates in a study group.",
      "If a student does not submit assignments on time, then they do not receive full credit.",
      "If a student attends office hours, then they understand the material better.",
      "If a student completes all coursework, then they have a good chance to pass the exam.",
      "If a student attends office hours, then they are likely to pass the exam.",
      "There exists at least one student who attends office hours.",
      "If a student completes the project, then they are prepared for the final exam."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "Exists(x, AsksQuestionsDuringClass(x))",
      "ForAll(x, (¬EngagesInDiscussions(x) → ¬UnderstandsMaterial(x)))",
      "¬ForAll(x, ParticipatesInStudyGroup(x))",
      "ForAll(x, (¬SubmitsAssignmentsOnTime(x) → ¬ReceivesFullCredit(x)))",
      "ForAll(x, (AttendsOfficeHours(x) → UnderstandsMaterialBetter(x)))",
      "ForAll(x, (CompletesAllCoursework(x) ↔ HasGoodChanceToPassExam(x)))",
      "ForAll(x, (AttendsOfficeHours(x) → LikelyToPassExam(x)))",
      "Exists(x, AttendsOfficeHours(x))",
      "ForAll(x, (CompletesProject(x) → PreparedForFinalExam(x)))"
    ],
    "choices": [
      "Every student attends office hours.",
      "There exists a student with no good chance to pass the exam.",
      "There exists a student likely to pass the exam.",
      "Every student participates in a study group."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student does not use online documents from the library, then that student does not gain more knowledge.",
      "There exists a student who gains more knowledge."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ ¬UsesOnlineDocuments(x) → ¬GainsKnowledge(x))",
      "∃x (Student(x) ∧ GainsKnowledge(x))"
    ],
    "choices": [
      "If not using online documents means not gaining knowledge, then some student gains knowledge.",
      "All students use online documents.",
      "No student gains knowledge.",
      "Some students don’t use online documents."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a Python script does not have error handling, then it does not handle exceptions.",
      "If a Python script does not have error handling, then it does not produce reliable outputs.",
      "If a Python program follows best practices, then it is optimized.",
      "There exists at least one Python script with error handling.",
      "All well-structured Python programs are optimized.",
      "All Python projects adhere to best practices.",
      "There exists at least one optimized Python program.",
      "If a Python script does not have error handling, then it does not follow best practices.",
      "If a Python program is optimized, then it has error handling.",
      "If a Python script has error handling, then it handles exceptions.",
      "If a Python script has error handling, then it follows best practices.",
      "All Python scripts have error handling.",
      "There exists at least one Python project that follows best practices.",
      "All Python programs produce reliable outputs.",
      "If a Python project follows best practices, then it produces reliable outputs.",
      "If all well-structured Python programs are optimized, then a script without error handling does not handle exceptions.",
      "If a Python program is not optimized, then it does not follow best practices.",
      "If a Python script does not have error handling, then it does not follow PEP 8.",
      "If a Python program produces reliable outputs, then it is optimized."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬HandlesExceptions(x))))",
      "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬ReliableOutputs(x))))",
      "ForAll(x, (BestPractices(x) → Optimized(x)))",
      "Exists(x, (PythonScript(x) ∧ HasErrorHandling(x)))",
      "ForAll(x, (WellStructured(x) → Optimized(x)))",
      "ForAll(x, (PythonProject(x) → BestPractices(x)))",
      "Exists(x, OptimizedPythonProgram(x))",
      "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬BestPractices(x))))",
      "ForAll(x, (OptimizedPythonProgram(x) → HasErrorHandling(x)))",
      "ForAll(x, (PythonScript(x) → (HasErrorHandling(x) → HandlesExceptions(x))))",
      "ForAll(x, (PythonScript(x) → (HasErrorHandling(x) → BestPractices(x))))",
      "ForAll(x, (PythonScript(x) → HasErrorHandling(x)))",
      "Exists(x, (PythonProject(x) ∧ BestPractices(x)))",
      "ForAll(x, ReliableOutputs(x))",
      "ForAll(x, (PythonProject(x) → (BestPractices(x) → ReliableOutputs(x))))",
      "((ForAll(x, (WellStructured(x) → Optimized(x))) → ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬HandlesExceptions(x)))))",
      "ForAll(x, (¬Optimized(x) → ¬BestPractices(x)))",
      "ForAll(x, (PythonScript(x) → (¬HasErrorHandling(x) → ¬FollowsPEP8(x))))",
      "ForAll(x, (ReliableOutputs(x) → Optimized(x)))"
    ],
    "choices": [
      "There exists a script without error handling.",
      "There exists a program that does not produce reliable outputs.",
      "All Python programs are optimized.",
      "There exists a program that does not follow best practices."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a dataset has missing values, then it affects model convergence.",
      "If a dataset requires preprocessing, then missing values affect model convergence.",
      "There exists at least one dataset with missing values."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (Dataset(x) ∧ MissingValues(x) → AffectsConvergence(x))",
      "∀x (Dataset(x) ∧ PreprocessingRequired(x) → (MissingValues(x) → AffectsConvergence(x)))",
      "∃x (Dataset(x) ∧ MissingValues(x))"
    ],
    "choices": [
      "Some datasets have missing values but don’t affect model convergence.",
      "If all datasets require preprocessing, then missing values in any dataset affect model convergence.",
      "No dataset has missing values.",
      "All datasets require preprocessing."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a function is differentiable, then it is continuous.",
      "There exists at least one function that is integrable.",
      "There exists at least one function that is differentiable.",
      "If a function is twice differentiable, then it is differentiable.",
      "All continuous functions satisfy the Intermediate Value Theorem.",
      "If a function is differentiable, then it is integrable.",
      "If a function is not continuous, then it is not differentiable.",
      "All differentiable functions satisfy the Mean Value Theorem.",
      "All polynomials are differentiable.",
      "There exists at least one polynomial function.",
      "There exists at least one continuous function.",
      "If a function is not differentiable, then it is not a polynomial.",
      "All integrable functions satisfy the Fundamental Theorem of Calculus.",
      "If all differentiable functions satisfy the Mean Value Theorem, then there exists at least one continuous function."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, (Differentiable(x) → Continuous(x)))",
      "Exists(x, Integrable(x))",
      "Exists(x, Differentiable(x))",
      "ForAll(x, (TwiceDifferentiable(x) → Differentiable(x)))",
      "ForAll(x, (Continuous(x) → IVT(x)))",
      "ForAll(x, (Differentiable(x) → Integrable(x)))",
      "ForAll(x, (¬Continuous(x) → ¬Differentiable(x)))",
      "ForAll(x, (Differentiable(x) → MVT(x)))",
      "ForAll(x, (Polynomial(x) → Differentiable(x)))",
      "Exists(x, Polynomial(x))",
      "Exists(x, Continuous(x))",
      "ForAll(x, (¬Differentiable(x) → ¬Polynomial(x)))",
      "ForAll(x, (Integrable(x) → FTC(x)))",
      "((ForAll(x, (Differentiable(x) → MVT(x))) → Exists(x, Continuous(x))))"
    ],
    "choices": [
      "There exists a function that is not differentiable.",
      "There exists a function that satisfies the Intermediate Value Theorem.",
      "All functions are integrable.",
      "There exists a function that is not continuous."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student does not complete a specific task, then that student is not a university student.",
      "There exists a student attending a specific course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ ¬CompletesTask(x) → ¬UniversityStudent(x))",
      "∃x (Student(x) ∧ AttendsCourse(x))"
    ],
    "choices": [
      "If attending the course means task non-completion rules out university status, then some student attends the course.",
      "All students attending the course are university students.",
      "No student completes the task.",
      "Some students don’t attend the course."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students are attending the course",
      "If x attends lectures regularly, then x passes the course",
      "There exists a student working on a project",
      "If there exists a student working on a project, then all students are attending the course",
      "There exists a student attending lectures regularly",
      "There exists a student completing assignments"
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, AttendsCourse(x))",
      "ForAll(x, (AttendsLecturesRegularly(x) → PassesCourse(x)))",
      "Exists(x, WorkingOnProject(x))",
      "(Exists(x, WorkingOnProject(x)) → ForAll(x, AttendsCourse(x)))",
      "Exists(x, AttendsLecturesRegularly(x))",
      "Exists(x, CompletingAssignments(x))"
    ],
    "choices": [
      "There exists a student not attending the course.",
      "There exists a student who passes the course.",
      "All students attend lectures regularly.",
      "There exists a student not completing assignments."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students can register BKA program if they did not register it last semester.",
      "OISP students are not allowed to delay the tutor fee.",
      "Students must either pay the tutor fee, delay it, or register for the BKA program.",
      "Frieren is an OISP student and she can't pay the tutor fee.",
      "Frieren did not register the BKA program last semester."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ ¬tBKALastSemester(x) → BKA(x))",
      "ForAll(x, OISP(x) → ¬DelayTutorFee(x))",
      "ForAll(x, Student(x) → (PayTutorFee(x) ∨ DelayTutorFee(x) ∨ BKA(x)))",
      "OISP(Frieren) ∧ ¬PayTutorFee(Frieren)",
      "¬tBKALastSemester(Frieren)"
    ],
    "choices": [
      "Frieren is required to pay the tutor fee.",
      "Frieren must register for the BKA program due to her status as an OISP student.",
      "Frieren can choose to delay the tutor fee.",
      "Frieren must register for the BKA program."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about Sarifi’s academic status?"
    ],
    "premises-NL": [
      "Students who absent the final exam will fail the course.",
      "Students must bring an ID or verification paper so that they will not be marked as absent.",
      "Students who bring an ID will not bring a verification paper.",
      "Sarifi didn't bring the ID but she did not fail."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) ∧ Absent(x) → Fail(x))",
      "ForAll(x, Student(x) → (BringID(x) ∨ BringPaper(x) → ¬Absent(x)))",
      "ForAll(x, BringID(x) → ¬BringPaper(x))",
      "¬BringID(Sarifi) ∧ ¬Fail(Sarifi)"
    ],
    "choices": [
      "Sarifi failed due to absence.",
      "Sarifi didn’t fail and wasn’t absent.",
      "Sarifi failed despite bringing a paper.",
      "Sarifi was absent but didn’t fail."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which can be inferred about Mia’s preparation?"
    ],
    "premises-NL": [
      "Study hard earn students knowledge.",
      "Having knowledge makes you do the exam well.",
      "If you do the exam well and do not help others, you will pass the course.",
      "If you do not have knowledge but got help from others, you will pass the course.",
      "Only if you have the knowledge can you help others.",
      "Mia did the exam well.",
      "Mia passed the course."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, StudyHard(x) → HasKnowledge(x))",
      "ForAll(x, HasKnowledge(x) → DoesExamWell(x))",
      "ForAll(x, DoesExamWell(x) ∧ ¬HelpsOthers(x) → PassesCourse(x))",
      "ForAll(x, ¬HasKnowledge(x) ∧ ReceivedHelp(x) → PassesCourse(x))",
      "ForAll(x, HelpsOthers(x) → HasKnowledge(x))",
      "DoesExamWell(Mia)",
      "PassesCourse(Mia)"
    ],
    "choices": [
      "Mia lacked knowledge.",
      "Mia received help from others.",
      "Mia did well due to knowledge.",
      "Mia didn’t study hard."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "How did Mia pass the course?"
    ],
    "premises-NL": [
      "Students who study hard gain knowledge.",
      "Having knowledge enables you to do well on the exam.",
      "If you do well on the exam and do not help others, you will pass the course.",
      "If you do not have knowledge but receive help from others, you will pass the course.",
      "You can only help others if you have knowledge.",
      "Mia did the exam well.",
      "Mia passed the course."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, StudyHard(x) → HasKnowledge(x))",
      "ForAll(x, HasKnowledge(x) → DoesExamWell(x))",
      "ForAll(x, DoesExamWell(x) ∧ ¬HelpsOthers(x) → PassesCourse(x))",
      "ForAll(x, ¬HasKnowledge(x) ∧ ReceivedHelp(x) → PassesCourse(x))",
      "ForAll(x, HelpsOthers(x) → HasKnowledge(x))",
      "DoesExamWell(Mia)",
      "PassesCourse(Mia)"
    ],
    "choices": [
      "Mia lacked knowledge but got help.",
      "Mia studied hard.",
      "Mia helped others.",
      "Mia did well without helping others."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What can be inferred about Iruma’s academic progress?"
    ],
    "premises-NL": [
      "Students who participate in many activities will gain enough labor days.",
      "Students must be a last-year student and gained enough labor days to do the graduation project.",
      "Only if a student has completed a graduation project can they graduate.",
      "A student who graduated is no longer a last-year student.",
      "Iruma is not a last-year student."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, Participate_Many_Activities(x) → Gain_Labor_Days(x))",
      "ForAll(x, Last_Year_Student(x) ∧ Gain_Labor_Days(x) → Can_Do_Graduation_Project(x))",
      "ForAll(x, Graduate(x) → Complete_Graduation_Project(x))",
      "ForAll(x, Graduate(x) → ¬Last_Year_Student(x))",
      "¬Last_Year_Student(Iruma)"
    ],
    "choices": [
      "Iruma completed a graduation project.",
      "Iruma gained enough labor days.",
      "Iruma’s graduation status is uncertain.",
      "Iruma is eligible for the graduation project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred about Yashiro?"
    ],
    "premises-NL": [
      "Students absent on the presentation day will get an F for the assignment.",
      "Students who read scripts OR present too long will also get an F for the assignment.",
      "Those who do not get an F for the assignment will pass the course.",
      "Students who get an F for the assignment must redo the assignment.",
      "Students absent when redoing the assignment will fail the course.",
      "Students who read scripts AND present too long when redoing the assignment will fail the course.",
      "Students who redo the assignment but don’t fail will pass the course.",
      "Yashiro always presents too long, but she always attended the presentation day."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, Absent_Presentation(x) → F_Assignment(x))",
      "ForAll(x, Read_Scripts(x) ∨ Present_Too_Long(x) → F_Assignment(x))",
      "ForAll(x, ¬F_Assignment(x) → Pass_Course(x))",
      "ForAll(x, F_Assignment(x) → Redo_Assignment(x))",
      "ForAll(x, Redo_Assignment(x) ∧ Absent(x) → Fail_Course(x))",
      "ForAll(x, Redo_Assignment(x) ∧ Read_Scripts(x) ∧ Present_Too_Long(x) → Fail_Course(x))",
      "ForAll(x, Redo_Assignment(x) ∧ ¬Fail_Course(x) → Pass_Course(x))",
      "Present_Too_Long(Yashiro) ∧ ¬Absent_Presentation(Yashiro)"
    ],
    "choices": [
      "Yashiro passed the course.",
      "Yashiro failed the course.",
      "Yashiro did not redo the assignment.",
      "It is uncertain whether Yashiro passed the course."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What can be inferred about Ponko’s class status?"
    ],
    "premises-NL": [
      "Students who miss any quiz will fail the class.",
      "Students who score less than 50% on the final exam will fail the class.",
      "Students who complete all homework and attend every class will pass the final exam.",
      "Ponko completed all homework but missed one class.",
      "Students who fail the class must retake it next semester."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, Miss_Quiz(x) → Fail_Class(x))",
      "ForAll(x, Score_Final(x) < 50 → Fail_Class(x))",
      "ForAll(x, Complete_Homework(x) ∧ Attend_All_Classes(x) → Pass_Final(x))",
      "Complete_Homework(Ponko) ∧ ¬Attend_All_Classes(Ponko)",
      "ForAll(x, Fail_Class(x) → Retake_Next_Semester(x))"
    ],
    "choices": [
      "Ponko passed the final exam.",
      "Ponko failed due to low exam score.",
      "Ponko’s failure depends on quiz attendance.",
      "Ponko failed due to missing a class."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred about Dio?"
    ],
    "premises-NL": [
      "Students who come to the library to borrow books will gain books.",
      "Students who got a book and are hardworking will read them.",
      "Students who read books will gain knowledge.",
      "Students who have knowledge will pass the course.",
      "Dio comes to the library to borrow a book, and he passes the course."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, Borrow_Books(x) → Got_Book(x))",
      "ForAll(x, Got_Book(x) ∧ Hardworking(x) → Read_Book(x))",
      "ForAll(x, Read_Book(x) → Gain_Knowledge(x))",
      "ForAll(x, Gain_Knowledge(x) → Pass_Course(x))",
      "Borrow_Books(Dio) ∧ Pass_Course(Dio)"
    ],
    "choices": [
      "Dio is not hardworking.",
      "Dio did not gain knowledge.",
      "Dio read books.",
      "It is uncertain whether Dio read books."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What enabled Rillance to qualify for a scholarship?"
    ],
    "premises-NL": [
      "Students who pass the final exam with a grade above 80 will qualify for a scholarship.",
      "A student who does not attend classes regularly cannot score above 80 on the final exam.",
      "Any student who is part of the basketball team must attend classes regularly to remain on the team.",
      "Students who remain on the basketball team all semester receive an athletic certificate.",
      "Rillance is part of the basketball team.",
      "Rillance received an athletic certificate.",
      "Rillance scored 85 on the final exam."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, ScoreFinalExam(x) > 80 → QualifyScholarship(x))",
      "ForAll(x, ¬AttendRegularly(x) → ScoreFinalExam(x) ≤ 80)",
      "ForAll(x, BasketballTeam(x) → MustAttendRegularly(x))",
      "ForAll(x, RemainOnTeamAllSemester(x) → AthleticCertificate(x))",
      "BasketballTeam(Rillance)",
      "AthleticCertificate(Rillance)",
      "ScoreFinalExam(Rillance) = 85"
    ],
    "choices": [
      "Rillance skipped classes.",
      "Rillance stayed on the basketball team.",
      "Rillance scored high without attending.",
      "Rillance got external help."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What can be inferred about students’ societal impact?"
    ],
    "premises-NL": [
      "All students are people.",
      "All teachers are people.",
      "All schools have students.",
      "Every student is enrolled in at least one school.",
      "If a person is a teacher, they work at a school.",
      "If a person works at a school, they contribute to education.",
      "Every student who attends a school has access to education.",
      "If a person has access to education, they can gain knowledge.",
      "If a person gains knowledge, they can apply it in life.",
      "If a person applies knowledge in life, they increase their opportunities.",
      "If a student increases their opportunities, they can achieve success.",
      "A teacher guides students in gaining knowledge.",
      "If a teacher guides a student, the student benefits from education.",
      "If a student benefits from education, they develop skills.",
      "If a person develops skills, they contribute to society."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) → Person(x))",
      "ForAll(x, Teacher(x) → Person(x))",
      "ForAll(x, School(x) → Exists(y, Student(y) ∧ EnrolledIn(y, x)))",
      "ForAll(x, Student(x) → Exists(y, School(y) ∧ EnrolledIn(x, y)))",
      "ForAll(x, Teacher(x) → Exists(y, School(y) ∧ WorksAt(x, y)))",
      "ForAll(x, WorksAt(x, y) → ContributesToEducation(x))",
      "ForAll(x, ForAll(y, EnrolledIn(x, y) ∧ School(y) → HasAccessToEducation(x)))",
      "ForAll(x, HasAccessToEducation(x) → GainsKnowledge(x))",
      "ForAll(x, GainsKnowledge(x) → CanApplyKnowledge(x))",
      "ForAll(x, CanApplyKnowledge(x) → IncreasesOpportunities(x))",
      "ForAll(x, IncreasesOpportunities(x) → CanAchieveSuccess(x))",
      "ForAll(x, ForAll(y, Teacher(x) ∧ Student(y) ∧ Guides(x, y) → HelpsGainKnowledge(y)))",
      "ForAll(x, HelpsGainKnowledge(x) → BenefitsFromEducation(x))",
      "ForAll(x, BenefitsFromEducation(x) → DevelopsSkills(x))",
      "ForAll(x, DevelopsSkills(x) → ContributesToSociety(x))"
    ],
    "choices": [
      "No student develops skills.",
      "All students achieve success.",
      "Some student contributes to society.",
      "No student accesses education."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred about Ruri?"
    ],
    "premises-NL": [
      "Students who got F in Assignment will fail the course",
      "Do the Assignment incorrectly will get an F for the coding section",
      "If you do not do the Assignment by yourself, you won't gain experience",
      "If you don't have experience, you can't do the harmony",
      "If you can't do the harmony, you get F for Harmony section",
      "If Code section or Harmony section got an F, the whole assignment will get an F",
      "Ruri passed the course"
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, F_Assignment(x) → Fail_Course(x))",
      "ForAll(x, Incorrect_Assignment(x) → F_Coding(x))",
      "ForAll(x, ¬Do_By_Self(x) → ¬Experience(x))",
      "ForAll(x, ¬Experience(x) → ¬Can_Harmony(x))",
      "ForAll(x, ¬Can_Harmony(x) → F_Harmony(x))",
      "ForAll(x, F_Coding(x) ∨ F_Harmony(x) → F_Assignment(x))",
      "¬Fail_Course(Ruri)"
    ],
    "choices": [
      "Ruri failed the assignment.",
      "Ruri did the assignment by herself.",
      "Ruri did not gain experience.",
      "It is uncertain whether Ruri did the assignment by herself."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What can be inferred about students taught by teachers?"
    ],
    "premises-NL": [
      "If someone teaches a student, they must be a teacher.",
      "If someone is motivated by someone else, that person has motivation.",
      "If someone improves, they are motivated by someone.",
      "If a teacher shares knowledge with a student, the student gains experience.",
      "If a student learns, they improve.",
      "If a student gains experience, they learn.",
      "Every student is taught by at least one teacher.",
      "Ludwig teaches Mia.",
      "Ludwig is a teacher.",
      "Anyone who has knowledge can teach.",
      "Anyone who can teach shares knowledge.",
      "All teachers have knowledge.",
      "All teachers are people.",
      "All students are people.",
      "Mia is a student."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, ForAll(y, Teaches(x, y) ∧ Student(y) → Teacher(x)))",
      "ForAll(x, ForAll(y, MotivatedBy(x, y) → HasMotivation(x)))",
      "ForAll(x, Improves(x) → Exists(y, MotivatedBy(x, y)))",
      "ForAll(x, ForAll(y, Teacher(x) ∧ Student(y) ∧ SharesKnowledge(x, y) → GainsExperience(y)))",
      "ForAll(x, Learns(x) → Improves(x))",
      "ForAll(x, GainsExperience(x) → Learns(x))",
      "ForAll(x, Student(x) → Exists(y, Teacher(y) ∧ Teaches(y, x)))",
      "Teaches(Ludwig, Mia)",
      "Teacher(Ludwig)",
      "ForAll(x, HasKnowledge(x) → CanTeach(x))",
      "ForAll(x, CanTeach(x) → Exists(y, SharesKnowledge(x, y)))",
      "ForAll(x, Teacher(x) → HasKnowledge(x))",
      "ForAll(x, Teacher(x) → Person(x))",
      "ForAll(x, Student(x) → Person(x))",
      "Student(Mia)"
    ],
    "choices": [
      "They don’t learn.",
      "Some have motivation.",
      "They don’t improve.",
      "They lack experience."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What do students gain from attending school?"
    ],
    "premises-NL": [
      "All students are people.",
      "All teachers are people.",
      "Every student attends at least one school.",
      "Every school provides education.",
      "If a person receives education, they gain knowledge.",
      "If a person gains knowledge, they can develop critical thinking skills.",
      "If a person develops critical thinking skills, they make better decisions.",
      "Teachers are responsible for delivering education.",
      "If a teacher delivers education, their students gain knowledge.",
      "If students gain knowledge, they can use it to solve problems.",
      "If students can solve problems, they can improve their communities.",
      "If someone improves their community, they contribute to society.",
      "If a person contributes to society, they can inspire others.",
      "If someone inspires others, they have a meaningful impact.",
      "A meaningful impact leads to long-term change.",
      "Some students prefer online learning.",
      "Libraries have a large collection of books.",
      "People enjoy watching movies in their free time."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) → Person(x))",
      "ForAll(x, Teacher(x) → Person(x))",
      "ForAll(x, Student(x) → Exists(y, School(y) ∧ Attends(x, y)))",
      "ForAll(x, School(x) → ProvidesEducation(x))",
      "ForAll(x, ReceivesEducation(x) → GainsKnowledge(x))",
      "ForAll(x, GainsKnowledge(x) → DevelopsCriticalThinking(x))",
      "ForAll(x, DevelopsCriticalThinking(x) → MakesBetterDecisions(x))",
      "ForAll(x, Teacher(x) → DeliversEducation(x))",
      "ForAll(x, ForAll(y, DeliversEducation(y) ∧ Student(x) → GainsKnowledge(x)))",
      "ForAll(x, GainsKnowledge(x) → CanSolveProblems(x))",
      "ForAll(x, CanSolveProblems(x) → ImprovesCommunity(x))",
      "ForAll(x, ImprovesCommunity(x) → ContributesToSociety(x))",
      "ForAll(x, ContributesToSociety(x) → InspiresOthers(x))",
      "ForAll(x, InspiresOthers(x) → HasMeaningfulImpact(x))",
      "ForAll(x, HasMeaningfulImpact(x) → CreatesLongTermChange(x))",
      "Exists(x, Student(x) ∧ PrefersOnlineLearning(x))",
      "Exists(x, Library(x) ∧ HasManyBooks(x))",
      "Exists(x, Person(x) ∧ EnjoysMovies(x))"
    ],
    "choices": [
      "Knowledge.",
      "No skills.",
      "Movies.",
      "Certificates."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What follows from students attending school?"
    ],
    "premises-NL": [
      "All students are people.",
      "All teachers are people.",
      "Every student attends at least one school.",
      "Every school provides education.",
      "If a person receives education, they gain knowledge.",
      "If a person gains knowledge, they can develop critical thinking skills.",
      "If a person develops critical thinking skills, they make better decisions.",
      "Teachers are responsible for delivering education.",
      "If a teacher delivers education, their students gain knowledge.",
      "If students gain knowledge, they can use it to solve problems.",
      "If students can solve problems, they can improve their communities.",
      "If someone improves their community, they contribute to society.",
      "If a person contributes to society, they can inspire others.",
      "If someone inspires others, they have a meaningful impact.",
      "A meaningful impact leads to long-term change.",
      "Some students are interested in sports.",
      "Many people like to travel during holidays.",
      "Some animals can recognize their own reflection in a mirror."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Student(x) → Person(x))",
      "ForAll(x, Teacher(x) → Person(x))",
      "ForAll(x, Student(x) → Exists(y, School(y) ∧ Attends(x, y)))",
      "ForAll(x, School(x) → ProvidesEducation(x))",
      "ForAll(x, ReceivesEducation(x) → GainsKnowledge(x))",
      "ForAll(x, GainsKnowledge(x) → DevelopsCriticalThinking(x))",
      "ForAll(x, DevelopsCriticalThinking(x) → MakesBetterDecisions(x))",
      "ForAll(x, Teacher(x) → DeliversEducation(x))",
      "ForAll(x, ForAll(y, DeliversEducation(y) ∧ Student(x) → GainsKnowledge(x)))",
      "ForAll(x, GainsKnowledge(x) → CanSolveProblems(x))",
      "ForAll(x, CanSolveProblems(x) → ImprovesCommunity(x))",
      "ForAll(x, ImprovesCommunity(x) → ContributesToSociety(x))",
      "ForAll(x, ContributesToSociety(x) → InspiresOthers(x))",
      "ForAll(x, InspiresOthers(x) → HasMeaningfulImpact(x))",
      "ForAll(x, HasMeaningfulImpact(x) → CreatesLongTermChange(x))",
      "Exists(x, Student(x) ∧ InterestedInSports(x))",
      "Exists(x, Person(x) ∧ LikesToTravel(x))",
      "Exists(x, Animal(x) ∧ RecognizesMirrorReflection(x))"
    ],
    "choices": [
      "Some like sports.",
      "All gain knowledge.",
      "None solve problems.",
      "Some skip education."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What affects model performance?"
    ],
    "premises-NL": [
      "Machine learning is a subset of artificial intelligence where computers learn from data.",
      "In supervised learning, models are trained on labeled data to predict outputs from inputs.",
      "In unsupervised learning, models are trained on unlabeled data to find patterns or groupings.",
      "In reinforcement learning, an agent learns by interacting with an environment and receiving feedback.",
      "Machine learning models can be classified into regression, classification, clustering, and reinforcement models.",
      "A regression model predicts a continuous output based on input features.",
      "A classification model predicts discrete labels or categories based on input features.",
      "Clustering models group similar data points together based on input features.",
      "Overfitting occurs when a model learns the training data too well, capturing noise and patterns that do not generalize to new data.",
      "Underfitting occurs when a model is too simple and cannot capture the underlying patterns in the data.",
      "Cross-validation is used to assess the performance of a machine learning model by partitioning the data into subsets for training and testing.",
      "Gradient descent is a popular optimization algorithm used in machine learning to minimize a loss function."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, MachineLearning(x) → SubsetOfArtificialIntelligence(x))",
      "ForAll(x, SupervisedLearning(x) → TrainedOnLabeledData(x))",
      "ForAll(x, UnsupervisedLearning(x) → TrainedOnUnlabeledData(x))",
      "ForAll(x, ReinforcementLearning(x) → LearnsFromEnvironmentFeedback(x))",
      "ForAll(x, MLModel(x) → (Regression(x) ∨ Classification(x) ∨ Clustering(x) ∨ Reinforcement(x)))",
      "ForAll(x, RegressionModel(x) → PredictsContinuousOutput(x))",
      "ForAll(x, ClassificationModel(x) → PredictsDiscreteLabels(x))",
      "ForAll(x, ClusteringModel(x) → GroupsSimilarDataPoints(x))",
      "ForAll(x, Overfitting(x) → LearnsTrainingDataTooWell(x))",
      "ForAll(x, Underfitting(x) → CannotCapturePatterns(x))",
      "ForAll(x, CrossValidation(x) → AssessesPerformance(x))",
      "ForAll(x, GradientDescent(x) → MinimizesLossFunction(x))"
    ],
    "choices": [
      "Overfitting captures noise.",
      "Clustering predicts outputs.",
      "Underfitting enhances generalization.",
      "Regression groups data."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What optimizes SQL query performance?"
    ],
    "premises-NL": [
      "SQL is a standard programming language used for managing relational databases.",
      "A relational database consists of tables, each containing rows and columns.",
      "SQL queries are used to interact with databases and perform operations such as retrieving, inserting, updating, and deleting data.",
      "The SELECT statement is used to query and retrieve data from one or more tables.",
      "The WHERE clause is used in SQL to filter records based on specific conditions.",
      "The INSERT INTO statement is used to add new rows of data to a table.",
      "The UPDATE statement is used to modify existing records in a table.",
      "The DELETE statement is used to remove records from a table.",
      "The JOIN operation is used to combine data from two or more tables based on a related column.",
      "The PRIMARY KEY constraint uniquely identifies each record in a table.",
      "The FOREIGN KEY constraint ensures the integrity of the relationship between tables.",
      "The GROUP BY clause is used to group rows that have the same values into summary rows, such as totals.",
      "The ORDER BY clause is used to sort the result set in ascending or descending order.",
      "An index in SQL is used to improve the speed of data retrieval operations."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, SQL(x) → UsedForManagingRelationalDatabases(x))",
      "ForAll(x, RelationalDatabase(x) → ConsistsOfTables(x))",
      "ForAll(x, SQLQuery(x) → (RetrieveData(x) ∨ InsertData(x) ∨ UpdateData(x) ∨ DeleteData(x)))",
      "ForAll(x, SelectStatement(x) → QueryData(x))",
      "ForAll(x, WhereClause(x) → FiltersRecords(x))",
      "ForAll(x, InsertInto(x) → AddRowsToTable(x))",
      "ForAll(x, UpdateStatement(x) → ModifyRecords(x))",
      "ForAll(x, DeleteStatement(x) → RemoveRecords(x))",
      "ForAll(x, ForAll(y, Join(x, y) → CombineData(x, y)))",
      "ForAll(x, PrimaryKey(x) → UniquelyIdentifiesRecord(x))",
      "ForAll(x, ForeignKey(x) → EnsuresDataIntegrity(x))",
      "ForAll(x, GroupBy(x) → GroupRows(x))",
      "ForAll(x, OrderBy(x) → SortResultSet(x))",
      "ForAll(x, Index(x) → ImprovesDataRetrievalSpeed(x))"
    ],
    "choices": [
      "Indexes speed up retrieval.",
      "DELETE adds records.",
      "PRIMARY KEY groups rows.",
      "INSERT sorts data."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "For all students, they possess the fundamental knowledge of the subject.",
      "If a student understands the core concepts, they are able to apply those concepts in practice.",
      "If a student can apply concepts, they are likely to succeed in assessments.",
      "If a student does not succeed in assessments, it indicates that they lack understanding of the core concepts.",
      "If a student attends all classes, they are likely to gain a better understanding of the subject.",
      "If a student fails to apply the core concepts, they may struggle with the subject matter.",
      "If a student misses classes, they might not understand key concepts, leading to failure in assessments.",
      "If a student does not complete their coursework, it suggests they are not engaging with the learning process.",
      "Attending all classes ensures that students receive the full scope of education in the subject.",
      "There exists at least one student who understands the core concepts of the subject.",
      "If a student does not understand the subject, they are unlikely to complete the coursework successfully.",
      "All students possess the necessary understanding to succeed in assessments.",
      "If a student engages in self-directed study, they will be more likely to succeed in assessments.",
      "If a student engages in extracurricular activities, it will support their understanding of the subject.",
      "If a student is able to engage in the learning process, they will succeed academically."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, PossessesFundamentalKnowledge(x))",
      "ForAll(x, (UnderstandsCoreConcepts(x) → AppliesConcepts(x)))",
      "ForAll(x, (AppliesConcepts(x) → SucceedsInAssessments(x)))",
      "ForAll(x, (¬SucceedsInAssessments(x) → ¬UnderstandsCoreConcepts(x)))",
      "ForAll(x, (AttendsAllClasses(x) → UnderstandsCoreConcepts(x)))",
      "ForAll(x, (¬AppliesConcepts(x) → StrugglesWithSubject(x)))",
      "ForAll(x, (¬AttendsAllClasses(x) → (¬UnderstandsCoreConcepts(x) ∧ ¬SucceedsInAssessments(x))))",
      "ForAll(x, (¬CompletesCoursework(x) → ¬EngagesInLearningProcess(x)))",
      "ForAll(x, (AttendsAllClasses(x) → EngagesInLearningProcess(x)))",
      "Exists(x, UnderstandsCoreConcepts(x))",
      "ForAll(x, (¬UnderstandsCoreConcepts(x) → ¬CompletesCoursework(x)))",
      "ForAll(x, SucceedsInAssessments(x))",
      "ForAll(x, (EngagesInSelfDirectedStudy(x) → SucceedsInAssessments(x)))",
      "ForAll(x, (EngagesInExtracurricularActivities(x) → UnderstandsCoreConcepts(x)))",
      "ForAll(x, (EngagesInLearningProcess(x) → SucceedsInAssessments(x)))"
    ],
    "choices": [
      "If a student cannot apply concepts, they cannot engage in the learning process.",
      "If a student does not engage, they do not understand the core concepts.",
      "All students apply concepts.",
      "There exists a student who does not apply concepts but engages in the learning process."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "There exists at least one student who excels in assessments.",
      "If a student cannot apply knowledge, they will struggle with learning new concepts."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (Student(x) ∧ ExcelsInAssessments(x))",
      "∀x (Student(x) ∧ ¬AppliesKnowledge(x) → ¬UnderstandsNewConcepts(x))"
    ],
    "choices": [
      "If not applying knowledge means struggling with new concepts, then some student excels in assessments.",
      "All students apply knowledge.",
      "No student excels in assessments.",
      "Some students don’t understand new concepts."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student is not meeting the academic standards, they will not progress in their studies.",
      "All students are expected to adhere to the academic code of conduct outlined by the school law."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ ¬MeetsStandards(x) → ¬ProgressesStudies(x))",
      "∀x (Student(x) → AdheresConduct(x))"
    ],
    "choices": [
      "If all students follow the conduct code, then meeting standards means progressing in studies.",
      "Some students don’t meet academic standards.",
      "All students progress in their studies.",
      "No student adheres to the conduct code."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who has demonstrated mastery of the subject.",
      "If a student does not meet the requirements for passing, they cannot move forward in the curriculum.",
      "All students are engaged in active learning sessions within the classroom.",
      "At least one student is participating in the current course or class.",
      "All students have the same baseline knowledge required to succeed in the subject.",
      "At least one student has a solid understanding of the core concepts.",
      "If a student fails to meet the required standards, they will not be able to apply the knowledge in real-world scenarios.",
      "All students are proficient in the core skills necessary for academic success.",
      "All students are expected to follow the school’s code of conduct.",
      "If a student has the ability to apply their knowledge in real-world contexts, they will succeed in advanced coursework.",
      "At least one student is actively participating in the course activities.",
      "If a student does not meet the academic standards, they will not be able to advance in their education.",
      "If a student has the skills necessary to apply what they've learned, they will succeed in future coursework.",
      "If a student fails to meet expectations, they cannot pursue additional academic opportunities or specialized subjects.",
      "For students who meet all educational requirements, further educational opportunities will be available."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x P(x)",
      "∀x (¬Q(x) → ¬R(x))",
      "∀x T(x)",
      "∃x T(x)",
      "∀x Q(x)",
      "∃x Q(x)",
      "∀x (¬R(x) → ¬U(x))",
      "∀x P(x)",
      "∀x S(x)",
      "∀x (U(x) → R(x))",
      "∃x T(x)",
      "∀x (¬Q(x) → ¬R(x))",
      "∀x (U(x) → R(x))",
      "∀x (¬U(x) → ¬P(x))",
      "∀x R(x)"
    ],
    "choices": [
      "∀x (U(x) → R(x))",
      "¬∀x (R(x) → U(x))",
      "∀x (Q(x) → R(x))",
      "¬∀x (U(x) → R(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student successfully completes a prerequisite course, they are eligible to enroll in the next level course.",
      "If a student demonstrates competence in one subject, they are qualified to advance to a more challenging subject.",
      "All students enrolled in the course are actively engaging in the learning material.",
      "At least one student has enrolled in the prerequisite course.",
      "If a student passes the final exam, they are considered to have mastered the course content.",
      "If a student does not demonstrate mastery, they are not considered to have passed the course.",
      "If a student does not meet the course prerequisites, they cannot take the final exam.",
      "All students are expected to complete the assigned coursework on time.",
      "All students are required to complete assignments in accordance with the syllabus.",
      "If a student demonstrates mastery of the course material, they will be recommended for advanced coursework.",
      "If a student passes a course, they are eligible to move on to the next subject.",
      "If a student fails to meet the prerequisites, they cannot take more advanced courses.",
      "If a student fails to meet the course requirements, they will not be eligible for further academic opportunities.",
      "If a student has demonstrated understanding of the core principles, they are encouraged to pursue further academic challenges.",
      "For students who have mastered the necessary content, additional learning opportunities will be provided."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (U(x) → S(x))",
      "∀x (U(x) → S(x))",
      "∀x T(x)",
      "∃x U(x)",
      "∀x (P(x) → R(x))",
      "∀x (¬R(x) → ¬P(x))",
      "∀x (¬T(x) → ¬P(x))",
      "∀x Q(x)",
      "∀x Q(x)",
      "∀x (R(x) → S(x))",
      "∀x (P(x) → S(x))",
      "∀x (¬T(x) → ¬S(x))",
      "∀x (¬Q(x) → ¬S(x))",
      "∀x (R(x) → S(x))",
      "∀x (R(x) → S(x))"
    ],
    "choices": [
      "∀x (U(x) → S(x))",
      "¬∀x (U(x) → S(x))",
      "∀x (¬P(x) → ¬S(x))",
      "∀x (S(x) → ¬P(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student fails the final project, they will not pass the course.",
      "If a student does not attend at least 80% of the lectures, they will not be eligible for the final project.",
      "If a student fails the midterm exam, they will not be eligible for extra credit."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ FailsFinalProject(x) → ¬PassCourse(x))",
      "∀x (Student(x) ∧ ¬AttendsLectures80Percent(x) → ¬EligibleForFinalProject(x))",
      "∀x (Student(x) ∧ FailsMidterm(x) → ¬EligibleForExtraCredit(x))"
    ],
    "choices": [
      "If a student doesn’t attend at least 80% of lectures, they won’t pass the course.",
      "Some students fail the final project but pass the course.",
      "All students attend 80% of lectures.",
      "No student fails the final project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student completes all the required assignments on time and attends at least 80% of the lectures, they will be eligible for the final project.",
      "If a student fails the final project, they will not pass the course and will lose eligibility for scholarships.",
      "If a student fails the midterm exam, they will not be eligible for extra credit."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ SubmitsAllAssignmentsOnTime(x) ∧ AttendsLectures80Percent(x) → EligibleForFinalProject(x))",
      "∀x (Student(x) ∧ FailsFinalProject(x) → (¬PassCourse(x) ∧ ¬EligibleForScholarship(x)))",
      "∀x (Student(x) ∧ FailsMidterm(x) → ¬EligibleForExtraCredit(x))"
    ],
    "choices": [
      "If a student doesn’t attend at least 80% of lectures, they can’t be eligible for scholarships.",
      "Some students fail the final project but get scholarships.",
      "All students attend 80% of lectures.",
      "No student fails the midterm exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student successfully completes a prerequisite course, they are eligible to enroll in the next level course.",
      "If a student demonstrates competence in one subject, they are qualified to advance to a more challenging subject.",
      "All students enrolled in the course are actively engaging in the learning material.",
      "At least one student has enrolled in the prerequisite course.",
      "If a student passes the final exam, they are considered to have mastered the course content.",
      "If a student does not demonstrate mastery, they are not considered to have passed the course.",
      "If a student does not meet the course prerequisites, they cannot take the final exam.",
      "All students are expected to complete the assigned coursework on time.",
      "All students are required to complete assignments in accordance with the syllabus.",
      "If a student demonstrates mastery of the course material, they will be recommended for advanced coursework.",
      "If a student passes a course, they are eligible to move on to the next subject.",
      "If a student fails to meet the prerequisites, they cannot take more advanced courses.",
      "If a student fails to meet the course requirements, they will not be eligible for further academic opportunities.",
      "If a student has demonstrated understanding of the core principles, they are encouraged to pursue further academic challenges.",
      "For students who have mastered the necessary content, additional learning opportunities will be provided."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (U(x) → S(x))",
      "∀x (U(x) → S(x))",
      "∀x T(x)",
      "∃x U(x)",
      "∀x (P(x) → R(x))",
      "∀x (¬R(x) → ¬P(x))",
      "∀x (¬T(x) → ¬P(x))",
      "∀x Q(x)",
      "∀x Q(x)",
      "∀x (R(x) → S(x))",
      "∀x (P(x) → S(x))",
      "∀x (¬T(x) → ¬S(x))",
      "∀x (¬Q(x) → ¬S(x))",
      "∀x (R(x) → S(x))",
      "∀x (R(x) → S(x))"
    ],
    "choices": [
      "∀x (P(x) → S(x))",
      "¬∀x (P(x) → S(x))",
      "∀x (P(x) → ¬S(x))",
      "∀x (S(x) → ¬P(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If an event is advertised to the university community, it informs participants.",
      "If an event has scheduling conflicts, it cannot maximize attendance.",
      "If an event informs participants and has no scheduling conflicts, it attracts participants."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Event(x) ∧ AdvertisesEvent(x) → InformsParticipants(x))",
      "∀x (Event(x) ∧ ¬NoConflicts(x) → ¬MaximizesAttendance(x))",
      "∀x (Event(x) ∧ InformsParticipants(x) ∧ NoConflicts(x) → AttractsParticipants(x))"
    ],
    "choices": [
      "If an event is advertised, it attracts participants if it has no scheduling conflicts.",
      "All events maximize attendance.",
      "Some events are not advertised.",
      "No event attracts participants."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student in the course is participating in the training session.",
      "If a student attends the seminar, they will be eligible for the certification.",
      "If a student attends the seminar, they will be able to complete the course successfully.",
      "Every student is registered for the course.",
      "If a student attends the seminar, they will have the necessary knowledge to pass the course.",
      "If a student does not attend the seminar, they will not be able to complete the course.",
      "If a student does not submit the required assignments, they will not pass the course.",
      "There exists a student who has submitted their assignments.",
      "If a student does not complete the assignments on time, they will not pass the course.",
      "There exists a student who attended the seminar.",
      "There exists a student who passed the course.",
      "If a student does not attend the seminar, they will not be eligible for the certification.",
      "If a student has attended the seminar, they will be able to pass the course with certification."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x T(x)",
      "∀x (R(x) → Q(x))",
      "∀x (R(x) → S(x))",
      "∀x T(x)",
      "∀x (R(x) → U(x))",
      "∀x (¬R(x) → ¬S(x))",
      "∀x (¬P(x) → ¬U(x))",
      "∃x P(x)",
      "∀x (¬P(x) → ¬U(x))",
      "∃x R(x)",
      "∃x U(x)",
      "∀x (¬R(x) → ¬Q(x))",
      "∀x (R(x) → (U(x) ∧ Q(x)))"
    ],
    "choices": [
      "∀x (R(x) → S(x))",
      "¬∀x (R(x) → S(x))",
      "∀x (R(x) → ¬S(x))",
      "∀x (S(x) → ¬R(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student uses efficient sorting algorithms, they achieve better performance.",
      "If a student understands recursion, they can break problems into smaller parts."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ UsesEfficientSorting(x) → BetterPerformance(x))",
      "∀x (Student(x) ∧ UnderstandsRecursion(x) → BreaksProblemIntoSmallerParts(x))"
    ],
    "choices": [
      "If a student masters efficient sorting algorithms, they can solve ordering problems effectively.",
      "All students understand recursion.",
      "No student uses efficient sorting algorithms.",
      "Some students cannot solve any problems."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every AI model requires training data to function properly.",
      "If an AI model is not trained, it cannot perform predictions.",
      "Training an AI model requires a large dataset to improve its performance.",
      "If an AI model uses deep learning, it will need substantial computational resources.",
      "If an AI model does not have sufficient training data, it cannot achieve high accuracy.",
      "For all AI models, training is essential to enable predictions.",
      "If an AI model is trained on high-quality data, it will perform well in predictions.",
      "If an AI model lacks training data, it is not possible to use it for predictions.",
      "If an AI model is trained, it will have the capacity to make predictions.",
      "If an AI model does not use deep learning, it will likely underperform on tasks requiring complex reasoning.",
      "At least one AI model can perform well when trained with a proper dataset.",
      "For all AI models, training improves their ability to solve complex problems.",
      "If an AI model is not trained, it cannot generalize to unseen data.",
      "For all AI systems, the training process involves iterating on the model using feedback from predictions.",
      "If an AI model is not provided with sufficient training, it will not learn efficiently."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x R(x)",
      "∀x (¬T(x) → ¬P(x))",
      "∀x (T(x) → D(x))",
      "∀x (L(x) → C(x))",
      "∀x (¬S(x) → ¬A(x))",
      "∀x (T(x) → P(x))",
      "∀x (Q(x) → H(x))",
      "∀x (¬S(x) → ¬P(x))",
      "∀x (T(x) → P(x))",
      "∀x (¬L(x) → U(x))",
      "∃x W(x)",
      "∀x (T(x) → V(x))",
      "∀x (¬T(x) → ¬G(x))",
      "∀x (T(x) → I(x))",
      "∀x (¬S(x) → ¬E(x))"
    ],
    "choices": [
      "∀x (¬S(x) → (¬P(x) ∧ ¬A(x)))",
      "∀x (L(x) → ¬C(x))",
      "∀x (¬S(x) → V(x))",
      "∀x (¬(T(x) → V(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a timetable is optimized, it allocates resources like classrooms and instructors efficiently.",
      "If a student has a balanced schedule, they have enough breaks and are not overloaded."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Timetable(x) ∧ OptimizedTimetable(x) → AllocatesResourcesEfficiently(x))",
      "∀x (Student(x) ∧ BalancedSchedule(x) → (HasAdequateBreaks(x) ∧ ¬OverloadedSchedule(x)))"
    ],
    "choices": [
      "An optimized timetable uses classrooms efficiently and avoids instructor conflicts.",
      "All timetables have scheduling conflicts.",
      "No timetable is optimized.",
      "Some students have overloaded schedules."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "To build a website, a strong understanding of web development technologies like HTML, CSS, and JavaScript is essential.",
      "Every website requires HTML to structure content, CSS to style it, and JavaScript to add interactivity.",
      "The performance of a website depends on how well the HTML is structured and how optimized the CSS and JavaScript are.",
      "Responsive design is crucial for ensuring that a website works well on all devices, from desktops to smartphones.",
      "If a student knows how to use frameworks like Bootstrap or Tailwind CSS, they can speed up the development process for styling.",
      "JavaScript is necessary for adding dynamic functionality to a website, such as user interactions, animations, and form validation.",
      "Version control with Git is important for tracking changes in the code and collaborating with others on the project.",
      "Web development requires knowledge of both front-end and back-end technologies to create full-stack applications.",
      "Web accessibility should be considered to ensure that the website is usable by people with disabilities.",
      "A good understanding of SEO (Search Engine Optimization) helps improve the visibility of a website on search engines.",
      "Testing a website for compatibility across multiple browsers ensures that users have a consistent experience.",
      "If a website does not load quickly, it can negatively impact user experience and lead to a higher bounce rate.",
      "Understanding databases and how to connect them to a website is crucial for building websites that store and retrieve data.",
      "Security measures like HTTPS, input validation, and preventing XSS attacks are essential for protecting user data on the website.",
      "Once a website is built, hosting and deploying it to the web is the final step to make it publicly accessible."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (B(x) → U(x))",
      "∀x (H(x) → S(x))",
      "∀x (C(x) → T(x))",
      "∀x (J(x) → I(x))",
      "∀x (O(x) → P(x))",
      "∀x (R(x) → W(x))",
      "∀x (F(x) → D(x))",
      "∀x (K(x) → Y(x))",
      "∀x (G(x) → V(x))",
      "∀x (E(x) → A(x))",
      "∀x (X(x) → M(x))",
      "∀x (Z(x) → Q(x))",
      "∀x (N(x) → L(x))",
      "∀x (¬L2(x) → ¬P(x))",
      "∀x (D2(x) → C2(x))",
      "∀x (S2(x) → P2(x))",
      "∀x (H2(x) → A2(x))"
    ],
    "choices": [
      "∀x (B(x) → P2(x))",
      "∀x (G(x) → ¬V(x))",
      "∀x (F(x) → ¬D(x))",
      "∀x (T2(x) → ¬L2(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "To study effectively, a student must manage their time, set goals, and eliminate distractions.",
      "Breaking down large topics into smaller chunks and using active recall can improve information retention.",
      "Spaced repetition, along with regular testing, boosts long-term memory retention.",
      "Studying in a focused and distraction-free environment increases productivity.",
      "Studying in groups or studying solo can both be effective, depending on the individual’s learning style.",
      "Regular breaks and maintaining a balanced lifestyle promote better cognitive function.",
      "Consistent review of learned material, coupled with practical application, strengthens both memory and understanding."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x ((M(x) ∧ G(x) ∧ D(x)) → E(x))",
      "∀x ((B(x) ∧ A(x)) → R(x))",
      "∀x ((S(x) ∨ T(x)) → L(x))",
      "∀x ((F(x) ∧ D(x)) → P(x))",
      "∀x ((I(x) ∨ O(x)) → K(x))",
      "∀x ((R2(x) ∧ B2(x)) → C(x))",
      "∀x ((V(x) ∧ P2(x)) → U(x))"
    ],
    "choices": [
      "∀x ((B(x) ∧ A(x) ∧ (S(x) ∨ T(x))) → (R(x) ∧ L(x)))",
      "∀x ((R2(x) ∧ T3(x)) → B3(x))",
      "∀x ((I(x) ∧ O(x)) → K(x))",
      "∀x (¬V(x) → ¬U(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises above, which of the following statements can be logically concluded if we know that all students have passed the Philosophy prerequisite?"
    ],
    "premises-NL": [
      "If a student x is enrolled in Research Methods (R), then they have passed the Philosophy prerequisite (P).",
      "There is at least one student x who has qualified for the Quantum Physics competition (Q).",
      "If a student x is enrolled in Research Methods (R), they are eligible for the University Honors program (U).",
      "A student x who hasn't passed the Philosophy prerequisite (P) cannot qualify for the Quantum Physics competition (Q).",
      "All students x have passed the Philosophy prerequisite (P).",
      "Students x in the University Honors program (U) receive a full Scholarship (S).",
      "If a student x hasn't completed the Thesis Writing course (T), they cannot enroll in Research Methods (R).",
      "At least one student x has been admitted to the University Honors program (U).",
      "All students x receive a full Scholarship (S).",
      "There exists at least one student x who has passed the Philosophy prerequisite (P).",
      "Students x who pass the Philosophy prerequisite (P) are automatically enrolled in Research Methods (R).",
      "There is at least one student x enrolled in Research Methods (R).",
      "Every student x is part of the University Honors program (U).",
      "Enrollment in Research Methods (R) guarantees a full Scholarship (S) for student x.",
      "All students x have qualified for the Quantum Physics competition (Q).",
      "If all students have passed Philosophy (P), then any student x who passes P is automatically enrolled in Research Methods (R).",
      "If all students have passed Philosophy (P), then every student x is admitted to the University Honors program (U).",
      "Students x who haven't completed Thesis Writing (T) are disqualified from the Quantum Physics competition (Q).",
      "Qualifying for the Quantum Physics competition (Q) requires passing the Philosophy prerequisite (P).",
      "Every student x is enrolled in Research Methods (R).",
      "Students x who qualify for the Quantum Physics competition (Q) must enroll in Research Methods (R).",
      "A student x without a Scholarship (S) cannot qualify for the Quantum Physics competition (Q).",
      "Receiving a Scholarship (S) obligates student x to enroll in Research Methods (R).",
      "Scholarship recipients (S) automatically qualify for the Quantum Physics competition (Q)."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (R(x) → P(x))",
      "∃x Q(x)",
      "∀x (R(x) → U(x))",
      "∀x (¬P(x) → ¬Q(x))",
      "∀x P(x)",
      "∀x (U(x) → S(x))",
      "∀x (¬T(x) → ¬R(x))",
      "∃x U(x)",
      "∀x S(x)",
      "∃x P(x)",
      "∀x (P(x) → R(x))",
      "∃x R(x)",
      "∀x U(x)",
      "∀x (R(x) → S(x))",
      "∀x Q(x)",
      "(∀x P(x) → ∀x (P(x) → R(x)))",
      "(∀x P(x) → ∀x U(x))",
      "∀x (¬T(x) → ¬Q(x))",
      "∀x (Q(x) → P(x))",
      "∀x R(x)",
      "∀x (Q(x) → R(x))",
      "∀x (¬S(x) → ¬Q(x))",
      "∀x (S(x) → R(x))",
      "∀x (S(x) → Q(x))"
    ],
    "choices": [
      "If all students pass Philosophy, all are admitted to the Honors program.",
      "It is false that passing Philosophy guarantees Honors admission.",
      "The statement 'If all pass Philosophy, all join Honors' is tautologically true.",
      "The policy about Honors admission is contradictory."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the university policies above, which conclusion is logically valid if we know that all students x have passed the Philosophy prerequisite?"
    ],
    "premises-NL": [
      "All students x receive a full Scholarship (S).",
      "There is at least one student x enrolled in Research Methods (R).",
      "Students x who haven't completed Thesis Writing (T) have not passed Philosophy (P).",
      "Enrollment in Thesis Writing (T) guarantees a Scholarship (S) for student x.",
      "A student x without a Scholarship (S) cannot qualify for the Quantum Physics competition (Q).",
      "Membership in the University Honors program (U) provides a Scholarship (S).",
      "Every student x is enrolled in Research Methods (R).",
      "Skipping Thesis Writing (T) disqualifies student x from the Quantum Physics competition (Q).",
      "All students x have passed the Philosophy prerequisite (P).",
      "At least one student x is part of the University Honors program (U).",
      "If Thesis enrollment (T → S) holds, then all students receive Scholarships (S).",
      "Universal enrollment in Research Methods (R) ensures all students pass Philosophy (P).",
      "The policy 'No Thesis (¬T) → No Philosophy (¬P)' implies 'Thesis (T) → Scholarship (S).'",
      "Failure to qualify for Quantum Physics (Q) revokes Honors program (U) eligibility.",
      "There exists at least one student x who has completed Thesis Writing (T)."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x S(x)",
      "∃x R(x)",
      "∀x (¬T(x) → ¬P(x))",
      "∀x (T(x) → S(x))",
      "∀x (¬S(x) → ¬Q(x))",
      "∀x (U(x) → S(x))",
      "∀x R(x)",
      "∀x (¬T(x) → ¬Q(x))",
      "∀x P(x)",
      "∃x U(x)",
      "(∀x (T(x) → S(x)) → ∀x S(x))",
      "(∀x R(x) → ∀x P(x))",
      "(∀x (¬T(x) → ¬P(x)) → ∀x (T(x) → S(x)))",
      "∀x (¬Q(x) → ¬U(x))",
      "∃x T(x)"
    ],
    "choices": [
      "The policy linking Thesis and Scholarships is contradictory.",
      "The policy is both true and false.",
      "The policy 'No Thesis → No Philosophy' implies 'Thesis → Scholarship'.",
      "The policy is a tautology."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the university policies, which conclusion is valid if we know that all students are required to complete a Thesis?"
    ],
    "premises-NL": [
      "Completing the Thesis requirement ensures eligibility for a Research grant.",
      "At least one student has been awarded a Scholarship.",
      "Scholarship recipients must maintain a minimum GPA.",
      "Students who fail to maintain the required GPA lose access to University housing.",
      "All students are required to complete a Thesis.",
      "Access to University housing is reserved for Scholarship recipients.",
      "Students without housing cannot participate in the Quantum Computing lab.",
      "Non-participation in the Quantum lab leads to Scholarship revocation.",
      "A low GPA disqualifies students from the Quantum lab.",
      "There is at least one student with a Research grant.",
      "Research grant recipients are guaranteed University housing.",
      "At least one student has fulfilled the Thesis requirement.",
      "The policy linking GPA to housing implies Thesis completion guarantees a Research grant.",
      "The existence of Scholarships enforces GPA requirements for lab participation.",
      "Mandatory Thesis completion ensures at least one Research grant is awarded.",
      "Every student receives a Research grant.",
      "Students without housing cannot complete their Thesis.",
      "All students are Scholarship recipients.",
      "At least one student has access to University housing.",
      "Some students maintain the required GPA.",
      "Housing access requires maintaining the GPA.",
      "Failure to complete the Thesis results in loss of housing."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (T(x) → R(x))",
      "∃x S(x)",
      "∀x (S(x) → P(x))",
      "∀x (¬P(x) → ¬U(x))",
      "∀x T(x)",
      "∀x (U(x) → S(x))",
      "∀x (¬U(x) → ¬Q(x))",
      "∀x (¬Q(x) → ¬S(x))",
      "∀x (¬P(x) → ¬Q(x))",
      "∃x R(x)",
      "∀x (R(x) → U(x))",
      "∃x T(x)",
      "(∀x (¬P(x) → ¬U(x)) → ∀x (T(x) → R(x)))",
      "(∃x S(x) → ∀x (¬P(x) → ¬Q(x)))",
      "(∀x T(x) → ∃x R(x))",
      "∀x R(x)",
      "∀x (¬U(x) → ¬T(x))",
      "∀x S(x)",
      "∃x U(x)",
      "∃x P(x)",
      "∀x (U(x) → P(x))",
      "∀x (¬T(x) → ¬U(x))"
    ],
    "choices": [
      "'Mandatory Thesis implies Research grants' is a tautology.",
      "The policy is contradictory.",
      "Mandatory Thesis completion ensures at least one Research grant.",
      "The policy is both true and false."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that there is at least one recipient of the Research grant?"
    ],
    "premises-NL": [
      "At least one student has passed the Philosophy requirement.",
      "All students have passed the Philosophy requirement.",
      "Passing Philosophy grants eligibility for the Quantum Physics lab.",
      "There is at least one recipient of the Research grant.",
      "Some students qualify for the Quantum Physics lab.",
      "A few students have access to University housing.",
      "Failure to complete the Thesis disqualifies students from Scholarships.",
      "At least one student has received a Scholarship.",
      "Every student is guaranteed University housing.",
      "Thesis completion is required for Quantum lab access.",
      "Scholarship recipients receive priority housing.",
      "All students have completed their Thesis.",
      "Full Thesis compliance ensures Research grant availability.",
      "Research grant recipients qualify for University housing.",
      "The policy linking Research grants to housing implies universal housing access.",
      "Thesis completion guarantees Scholarship eligibility.",
      "Housing access requires Thesis completion.",
      "Students without Scholarships cannot finish their Thesis.",
      "Thesis completion proves Philosophy proficiency.",
      "Research grant disqualification blocks Thesis submission.",
      "No Thesis completion means no Quantum lab access.",
      "Quantum lab qualification requires passing Philosophy."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x P(x)",
      "∀x P(x)",
      "∀x (P(x) → Q(x))",
      "∃x R(x)",
      "∃x Q(x)",
      "∃x U(x)",
      "∀x (¬T(x) → ¬S(x))",
      "∃x S(x)",
      "∀x U(x)",
      "∀x (T(x) → Q(x))",
      "∀x (S(x) → U(x))",
      "∀x T(x)",
      "(∀x T(x) → ∃x R(x))",
      "(∃x R(x) → ∃x U(x))",
      "((∃x R(x) → ∃x U(x)) → ∀x U(x))",
      "∀x (T(x) → S(x))",
      "∀x (U(x) → T(x))",
      "∀x (¬S(x) → ¬T(x))",
      "∀x (T(x) → P(x))",
      "∀x (¬R(x) → ¬T(x))",
      "∀x (¬T(x) → ¬Q(x))",
      "∀x (Q(x) → P(x))"
    ],
    "choices": [
      "Research grant availability ensuring universal housing.",
      "The housing policy is contradictory.",
      "The policy is a tautology.",
      "Research grants do not guarantee housing."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that all students are enrolled in Quantum Physics?"
    ],
    "premises-NL": [
      "Enrollment in Quantum Physics (Q) grants access to University housing (U).",
      "Passing Philosophy (P) allows enrollment in Quantum Physics (Q).",
      "All students have passed the Philosophy prerequisite (P).",
      "At least one student has passed Philosophy (P).",
      "Every student receives a Research grant (R).",
      "Some students have been awarded Research grants (R).",
      "Students not enrolled in Quantum Physics (¬Q) have failed Philosophy (¬P).",
      "All students are guaranteed University housing (U).",
      "University housing (U) ensures Scholarship eligibility (S).",
      "There exists at least one student who completed Thesis Writing (T).",
      "Students without Scholarships (¬S) cannot receive Research grants (¬R).",
      "Access to University housing (U) requires passing Philosophy (P).",
      "Universal Research grant distribution (∀R) ensures Philosophy passers can enroll in Quantum (P→Q).",
      "The policy 'Housing → Scholarships' implies universal housing access (∀U).",
      "The housing-Scholarship policy guarantees all students have housing (∀U).",
      "If Philosophy enables Quantum enrollment (P→Q), some students receive Research grants (∃R).",
      "All students have completed Thesis Writing (T).",
      "Lack of housing (¬U) revokes Scholarships (¬S).",
      "Research grant disqualification (¬R) blocks Thesis completion (¬T).",
      "Scholarship loss (¬S) denies Quantum Physics enrollment (¬Q).",
      "All students are enrolled in Quantum Physics (Q)."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Q(x) → U(x))",
      "∀x (P(x) → Q(x))",
      "∀x P(x)",
      "∃x P(x)",
      "∀x R(x)",
      "∃x R(x)",
      "∀x (¬Q(x) → ¬P(x))",
      "∀x U(x)",
      "∀x (U(x) → S(x))",
      "∃x T(x)",
      "∀x (¬S(x) → ¬R(x))",
      "∀x (U(x) → P(x))",
      "(∀x R(x) → ∀x (P(x) → Q(x)))",
      "(∀x (U(x) → S(x)) → ∀x U(x))",
      "((∀x (U(x) → S(x)) → ∀x U(x)) → ∀x U(x))",
      "(∀x (P(x) → Q(x)) → ∃x R(x))",
      "∀x T(x)",
      "∀x (¬U(x) → ¬S(x))",
      "∀x (¬R(x) → ¬T(x))",
      "∀x (¬S(x) → ¬Q(x))",
      "∀x Q(x)"
    ],
    "choices": [
      "Philosophy enabling Quantum enrollment ensures some students get Research grants.",
      "The Research grant policy is contradictory.",
      "The policy is a tautology.",
      "Philosophy and Quantum enrollment are unrelated to grants."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that all students are required to submit a Research project?"
    ],
    "premises-NL": [
      "At least one student has received a Scholarship.",
      "All students are required to submit a Research project.",
      "Research project completion grants access to University housing.",
      "Students who skip the Thesis requirement cannot submit a Research project.",
      "Failure to pass Philosophy disqualifies students from Scholarships.",
      "Research project submission requires Thesis completion.",
      "Some students have passed the Philosophy prerequisite.",
      "Research project participants must pass Philosophy.",
      "There exists at least one student who completed their Thesis.",
      "Non-submission of Research projects blocks Thesis completion.",
      "At least one student has submitted a Research project.",
      "Scholarship disqualification revokes Philosophy eligibility.",
      "The policy 'Research → Housing' enforces Scholarship-Philosophy linkage.",
      "The Research-Housing policy ensures Scholarship availability.",
      "Research-Housing compliance requires Scholarship-Philosophy alignment.",
      "The rule 'No Research → No Thesis' guarantees Thesis completion.",
      "Some students have secured University housing.",
      "Quantum Physics enrollment provides housing access.",
      "At least one student is enrolled in Quantum Physics.",
      "Research project disqualification revokes Scholarships.",
      "All students are enrolled in Quantum Physics."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∃x S(x)",
      "∀x R(x)",
      "∀x (R(x) → U(x))",
      "∀x (¬T(x) → ¬R(x))",
      "∀x (¬P(x) → ¬S(x))",
      "∀x (R(x) → T(x))",
      "∃x P(x)",
      "∀x (R(x) → P(x))",
      "∃x T(x)",
      "∀x (¬R(x) → ¬T(x))",
      "∃x R(x)",
      "∀x (¬S(x) → ¬P(x))",
      "(∀x (R(x) → U(x)) → ∀x (¬S(x) → ¬P(x)))",
      "(∀x (R(x) → U(x)) → ∃x S(x))",
      "(∀x (R(x) → U(x)) → ∀x (¬P(x) → ¬S(x)))",
      "(∀x (¬R(x) → ¬T(x)) → ∃x T(x))",
      "∃x U(x)",
      "∀x (Q(x) → U(x))",
      "∃x Q(x)",
      "∀x (¬R(x) → ¬S(x))",
      "∀x Q(x)"
    ],
    "choices": [
      "The Thesis-Research rule is a tautology.",
      "The policy is contradictory.",
      "The rule 'No Research → No Thesis' ensures Thesis completion.",
      "The rule is both true and false."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that every student must submit a Research project?"
    ],
    "premises-NL": [
      "Students who do not submit a Research project (¬R) cannot complete their Thesis (¬T).",
      "Failure to pass Philosophy (¬P) disqualifies students from Scholarships (¬S).",
      "At least one student has submitted a Research project.",
      "Failing Philosophy (¬P) blocks Research project submission (¬R).",
      "Incomplete Thesis (¬T) revokes University housing access (¬U).",
      "Passing Philosophy (P) guarantees University housing (U).",
      "All students are guaranteed University housing.",
      "Every student must submit a Research project.",
      "The policy 'No Research → No Thesis' enforces universal Research compliance.",
      "The rule 'No Thesis → No Housing' ensures all students submit Research.",
      "The Scholarship-Philosophy linkage implies Thesis-Housing dependency.",
      "The Research-Thesis policy enforces Philosophy-Research compliance.",
      "Scholarship recipients qualify for Quantum Physics enrollment."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (¬R(x) → ¬T(x))",
      "∀x (¬P(x) → ¬S(x))",
      "∃x R(x)",
      "∀x (¬P(x) → ¬R(x))",
      "∀x (¬T(x) → ¬U(x))",
      "∀x (P(x) → U(x))",
      "∀x U(x)",
      "∀x R(x)",
      "(∀x (¬R(x) → ¬T(x)) → ∀x R(x))",
      "(∀x (¬T(x) → ¬U(x)) → ∀x R(x))",
      "(∀x (¬P(x) → ¬S(x)) → ∀x (¬T(x) → ¬U(x)))",
      "(∀x (¬R(x) → ¬T(x)) → ∀x (¬P(x) → ¬R(x)))",
      "∀x (S(x) → Q(x))"
    ],
    "choices": [
      "The Research-Thesis policy is contradictory.",
      "The Research-Thesis rule enforces Philosophy-Research compliance.",
      "The policy is both true and false.",
      "The rule is a tautology."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that all students are guaranteed University housing?"
    ],
    "premises-NL": [
      "Students who do not apply for Scholarships (¬S) cannot enroll in Thesis Writing (¬T).",
      "Passing Philosophy (P) grants eligibility for Research Methods (R).",
      "All students are guaranteed University housing (U).",
      "Enrollment in Research Methods (R) requires Thesis Writing (T).",
      "Passing Philosophy (P) necessitates enrolling in Thesis Writing (T).",
      "Every student is enrolled in Quantum Physics (Q).",
      "Some students are participating in Research Methods (R).",
      "All students have submitted Scholarship applications (S).",
      "Universal Quantum Physics enrollment (∀Q) enforces Philosophy-Thesis linkage (P→T).",
      "Mandatory Quantum Physics (∀Q) implies Scholarship applications are required for Thesis (¬S→¬T).",
      "The policy 'Philosophy → Thesis' ensures universal housing access (∀U).",
      "Universal housing (∀U) guarantees Scholarship-Thesis compliance under Quantum enrollment (∀Q → ¬S→¬T).",
      "Lack of housing (¬U) revokes Research Methods eligibility (¬R)."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (¬S(x) → ¬T(x))",
      "∀x (P(x) → R(x))",
      "∀x U(x)",
      "∀x (R(x) → T(x))",
      "∀x (P(x) → T(x))",
      "∀x Q(x)",
      "∃x R(x)",
      "∀x S(x)",
      "(∀x Q(x) → ∀x (P(x) → T(x)))",
      "(∀x Q(x) → ∀x (¬S(x) → ¬T(x)))",
      "(∀x (P(x) → T(x)) → ∀x U(x))",
      "(∀x U(x) → (∀x Q(x) → ∀x (¬S(x) → ¬T(x))))",
      "∀x (¬U(x) → ¬R(x))"
    ],
    "choices": [
      "The housing-Scholarship policy is contradictory.",
      "Universal housing ensures Scholarship-Thesis compliance under Quantum enrollment.",
      "The policy is a tautology.",
      "Housing and Quantum enrollment are unrelated."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion follows if we know that some students have submitted theses?"
    ],
    "premises-NL": [
      "Students who don't conduct research (¬R) can't enroll in Quantum Physics (¬Q).",
      "Dormitory access (U) requires submitting a thesis (T).",
      "Some students have submitted theses.",
      "Thesis submission (T) guarantees dormitory access (U).",
      "No dormitory access (¬U) blocks Philosophy enrollment (¬P).",
      "All students take Quantum Physics.",
      "Some students conduct research.",
      "The rule 'Thesis→Dormitory' enforces 'No Research→No Quantum'.",
      "Existence of thesis submitters triggers the research-quantum policy link.",
      "Researchers get dormitory access.",
      "Quantum enrollment grants scholarship eligibility (S).",
      "Scholarships require Philosophy proficiency.",
      "All students receive scholarships."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (¬R(x) → ¬Q(x))",
      "∀x (U(x) → T(x))",
      "∃x T(x)",
      "∀x (T(x) → U(x))",
      "∀x (¬U(x) → ¬P(x))",
      "∀x Q(x)",
      "∃x R(x)",
      "(∀x (T(x) → U(x)) → ∀x (¬R(x) → ¬Q(x)))",
      "(∃x T(x) → (∀x (T(x) → U(x)) → ∀x (¬R(x) → ¬Q(x))))",
      "∀x (R(x) → U(x))",
      "∀x (Q(x) → S(x))",
      "∀x (S(x) → P(x))",
      "∀x S(x)"
    ],
    "choices": [
      "Thesis existence doesn't affect research rules.",
      "Policy contradiction exists.",
      "Thesis submissions activate research-quantum link.",
      "The rule is tautological."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on registration policies, which rule is enforced if we know that every registration has advisor approval?"
    ],
    "premises-NL": [
      "Submitting course registration (S) grants enrollment confirmation (U).",
      "Meeting prerequisites (Q) allows enrollment in advanced courses (T).",
      "Some students have successfully submitted registrations.",
      "All students have cleared tuition payments (P).",
      "All students satisfy prerequisite requirements.",
      "Every registration has advisor approval (R).",
      "Lack of advisor approval blocks enrollment confirmation.",
      "Unconfirmed enrollments invalidate registration submissions.",
      "Full tuition compliance by all students waives prerequisite checks.",
      "Universal advisor approval triggers automatic purge of unconfirmed registrations.",
      "All students submitted course registrations.",
      "Outstanding tuition fees void advisor approvals.",
      "Enrollment confirmation requires cleared payments.",
      "Advanced course enrollment mandates advisor consent.",
      "Some students qualify for advanced courses."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → U(x))",
      "∀x (Q(x) → T(x))",
      "∃x S(x)",
      "∀x P(x)",
      "∀x Q(x)",
      "∀x R(x)",
      "∀x (¬R(x) → ¬U(x))",
      "∀x (¬U(x) → ¬S(x))",
      "(∀x P(x) → ∀x Q(x))",
      "(∀x R(x) → ∀x (¬U(x) → ¬S(x)))",
      "∀x S(x)",
      "∀x (¬P(x) → ¬R(x))",
      "∀x (U(x) → P(x))",
      "∀x (T(x) → R(x))",
      "∃x Q(x)"
    ],
    "choices": [
      "Universal advisor approval → (No enrollment → No registration)",
      "Policy contradiction exists",
      "Tautological redundancy",
      "Logical inconsistency"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that there exists at least one object x that has property R?"
    ],
    "premises-NL": [
      "In Calculus 2 for engineering students, if an object x does not have property P then it also does not have property R.",
      "In Calculus 2 for engineering students, for all objects x, x has property Q.",
      "In Calculus 2 for engineering students, there exists at least one object x that has property R.",
      "In Calculus 2 for engineering students, if an object x does not have property U then it does not have property P.",
      "In Calculus 2 for engineering students, if an object x has property Q then it also has property T.",
      "In Calculus 2 for engineering students, if an object x does not have property T then it does not have property S.",
      "In Calculus 2 for engineering students, if an object x has property U then it has property P.",
      "In Calculus 2 for engineering students, if an object x has property P then it also has property T.",
      "In Calculus 2 for engineering students, if x having property U implies x has property P then x having property Q implies x has property T.",
      "In Calculus 2 for engineering students, if not having property P implies not having property R then x having property U implies x has property P.",
      "In Calculus 2 for engineering students, if an object x has property T then it has property U.",
      "In Calculus 2 for engineering students, for all objects x, x has property P.",
      "In Calculus 2 for engineering students, for all objects x, x has property R.",
      "In Calculus 2 for engineering students, if an object x has property S then it has property P.",
      "In Calculus 2 for engineering students, there exists at least one object x that has property P."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (¬P(x) → ¬R(x))",
      "∀x Q(x)",
      "∃x R(x)",
      "∀x (¬U(x) → ¬P(x))",
      "∀x (Q(x) → T(x))",
      "∀x (¬T(x) → ¬S(x))",
      "∀x (U(x) → P(x))",
      "∀x (P(x) → T(x))",
      "(∀x (U(x) → P(x)) → ∀x (Q(x) → T(x)))",
      "(∀x (¬P(x) → ¬R(x)) → ∀x (U(x) → P(x)))",
      "∀x (T(x) → U(x))",
      "∀x P(x)",
      "∀x R(x)",
      "∀x (S(x) → P(x))",
      "∃x P(x)"
    ],
    "choices": [
      "¬((¬P(x) → ¬R(x)) → (U(x) → P(x)))",
      "((¬P(x) → ¬R(x)) → (U(x) → P(x)))",
      "(((¬P(x) → ¬R(x)) → (U(x) → P(x))) ∧ ¬((¬P(x) → ¬R(x)) → (U(x) → P(x))))",
      "(((¬P(x) → ¬R(x)) → (U(x) → P(x))) → ((¬P(x) → ¬R(x)) → (U(x) → P(x))))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that failing Philosophy revokes dormitory access?"
    ],
    "premises-NL": [
      "Submitting a research proposal (S) requires advisor review (R).",
      "Passing Philosophy (P) grants dormitory access (U).",
      "Some students have submitted research proposals.",
      "Thesis completion (T) requires a submitted proposal.",
      "Advisor-reviewed proposals grant dormitory access.",
      "Some students qualify for advanced seminars (Q).",
      "Research proposals must lead to thesis work.",
      "Failing Philosophy revokes dormitory access.",
      "The Philosophy-dormitory rule enforces proposal-review linkage.",
      "The Philosophy-dormitory policy ensures advanced seminar participation.",
      "Submitting proposals guarantees dormitory access.",
      "All students complete theses.",
      "Some students have dormitory access.",
      "No proposal submission blocks dormitory access.",
      "Philosophy failure invalidates advisor reviews."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (S(x) → R(x))",
      "∀x (P(x) → U(x))",
      "∃x S(x)",
      "∀x (T(x) → S(x))",
      "∀x (R(x) → U(x))",
      "∃x Q(x)",
      "∀x (S(x) → T(x))",
      "∀x (¬P(x) → ¬U(x))",
      "(∀x (¬P(x) → ¬U(x)) → ∀x (S(x) → R(x)))",
      "(∀x (¬P(x) → ¬U(x)) → ∃x Q(x))",
      "∀x (S(x) → U(x))",
      "∀x T(x)",
      "∃x U(x)",
      "∀x (¬S(x) → ¬U(x))",
      "∀x (¬P(x) → ¬R(x))"
    ],
    "choices": [
      "The policy is tautological.",
      "Philosophy-dorm rules contradict proposals.",
      "Philosophy failures → Advanced seminar seats.",
      "The system is inconsistent."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Considering the above premises from the University of Technology, which of the following statements can be logically deduced if we know that every object x has property T?"
    ],
    "premises-NL": [
      "At the University of Technology, every object x has property Q.",
      "At the University of Technology, every object x has property S.",
      "At the University of Technology, if an object x does not have property Q, then it does not have property P.",
      "At the University of Technology, every object x has property U.",
      "At the University of Technology, every object x has property T.",
      "At the University of Technology, if an object x has property T, then it also has property Q.",
      "At the University of Technology, there exists at least one object x that has property U.",
      "At the University of Technology, if an object x has property P, then it has property U.",
      "At the University of Technology, if there exists an object x with property U, then every object x has property S.",
      "At the University of Technology, if it is true that whenever an object x has property T then it has property Q, then every object x has property T.",
      "At the University of Technology, every object x has property R.",
      "At the University of Technology, if an object x has property S, then it also has property Q.",
      "At the University of Technology, if an object x does not have property S, then it does not have property U.",
      "At the University of Technology, if an object x has property R, then it also has property U.",
      "At the University of Technology, if an object x has property U, then it has property S."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x Q(x)",
      "∀x S(x)",
      "∀x (¬Q(x) → ¬P(x))",
      "∀x U(x)",
      "∀x T(x)",
      "∀x (T(x) → Q(x))",
      "∃x U(x)",
      "∀x (P(x) → U(x))",
      "(∃x U(x) → ∀x S(x))",
      "(∀x (T(x) → Q(x)) → ∀x T(x))",
      "∀x R(x)",
      "∀x (S(x) → Q(x))",
      "∀x (¬S(x) → ¬U(x))",
      "∀x (R(x) → U(x))",
      "∀x (U(x) → S(x))"
    ],
    "choices": [
      "It is not true that if an object having property T implies it has property Q then all objects have property T.",
      "If it is true that if an object having property T implies it has property Q then all objects have property T, then it is indeed true that if an object having property T implies it has property Q then all objects have property T.",
      "It is both true and not true that if an object having property T implies it has property Q then all objects have property T.",
      "If an object having property T implies it has property Q then all objects have property T."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that some students qualify for Quantum Physics?"
    ],
    "premises-NL": [
      "All students have dormitory access (U).",
      "Dormitory access requires passing Philosophy (P).",
      "Some students completed Research projects (R).",
      "No scholarship (¬S) blocks dormitory access.",
      "Thesis completion (T) grants scholarship eligibility.",
      "All students receive scholarships.",
      "Some students qualify for Quantum Physics (Q).",
      "All students passed Philosophy.",
      "Some students have scholarships.",
      "Research completion ensures Philosophy proficiency.",
      "Existence of researchers enforces Research→Philosophy rule.",
      "Dormitory-Philosophy link ensures universal scholarships.",
      "Quantum students enforce Research→Philosophy compliance.",
      "All students completed Research projects.",
      "Scholarship loss blocks Quantum Physics.",
      "No dorm access blocks Quantum Physics."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x U(x)",
      "∀x (U(x) → P(x))",
      "∃x R(x)",
      "∀x (¬S(x) → ¬U(x))",
      "∀x (T(x) → S(x))",
      "∀x S(x)",
      "∃x Q(x)",
      "∀x P(x)",
      "∃x S(x)",
      "∀x (R(x) → P(x))",
      "(∃x R(x) → ∀x (R(x) → P(x)))",
      "(∀x (U(x) → P(x)) → ∀x S(x))",
      "(∃x Q(x) → ∀x (R(x) → P(x)))",
      "∀x R(x)",
      "∀x (¬S(x) → ¬Q(x))",
      "∀x (¬U(x) → ¬Q(x))"
    ],
    "choices": [
      "Denial of Quantum-Research link.",
      "Contradictory policies.",
      "Quantum students → Research requires Philosophy.",
      "Tautological redundancy."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Considering the above premises from the University of Technology, which of the following statements can be logically deduced if we know that there exists at least one object x that has property U?"
    ],
    "premises-NL": [
      "At the University of Technology, there exists at least one object x that has property U.",
      "At the University of Technology, if an object x does not have property S, then it does not have property P.",
      "At the University of Technology, every object x has property P.",
      "At the University of Technology, if an object x has property U, then it has property S.",
      "At the University of Technology, there exists at least one object x that has property S.",
      "At the University of Technology, there exists at least one object x that has property P.",
      "At the University of Technology, if an object x has property R, then it has property U.",
      "At the University of Technology, there exists at least one object x that has property T.",
      "At the University of Technology, if it is true that if an object x does not have property S then it does not have property P, then there exists at least one object x that has property P.",
      "At the University of Technology, if there exists at least one object x that has property U, then if an object x does not have property S it does not have property P.",
      "At the University of Technology, if an object x has property U, then it has property Q.",
      "At the University of Technology, if an object x does not have property P, then it does not have property S.",
      "At the University of Technology, if an object x does not have property U, then it does not have property P.",
      "At the University of Technology, if an object x does not have property R, then it does not have property P.",
      "At the University of Technology, there exists at least one object x that has property Q."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∃x U(x)",
      "∀x (¬S(x) → ¬P(x))",
      "∀x P(x)",
      "∀x (U(x) → S(x))",
      "∃x S(x)",
      "∃x P(x)",
      "∀x (R(x) → U(x))",
      "∃x T(x)",
      "(∀x (¬S(x) → ¬P(x)) → ∃x P(x))",
      "(∃x U(x) → ∀x (¬S(x) → ¬P(x)))",
      "∀x (U(x) → Q(x))",
      "∀x (¬P(x) → ¬S(x))",
      "∀x (¬U(x) → ¬P(x))",
      "∀x (¬R(x) → ¬P(x))",
      "∃x Q(x)"
    ],
    "choices": [
      "It is not the case that if there exists an object with property U then if an object lacks property S it does not have property P.",
      "If it is true that if there exists an object with property U then if an object lacks property S it does not have property P, then it is indeed true that if there exists an object with property U then if an object lacks property S it does not have property P.",
      "If there exists an object with property U then if an object lacks property S it does not have property P.",
      "It is both true and not true that if there exists an object with property U then if an object lacks property S it does not have property P."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises provided in the context of a university, which of the following statements can be logically deduced if we know that there exists at least one object x that has property R?"
    ],
    "premises-NL": [
      "There exists at least one object x that has property R.",
      "If an object x does not have property U, then it does not have property Q.",
      "Every object x has property P.",
      "If an object x does not have property Q, then it does not have property S.",
      "If an object x does not have property R, then it does not have property S.",
      "If an object x has property T, then it has property P.",
      "If an object x does not have property T, then it does not have property R.",
      "There exists at least one object x that has property U.",
      "If it is true that if an object x does not have property T then it does not have property R, then if an object x has property T, it has property P.",
      "If there exists at least one object x with property R, then there exists at least one object x with property U.",
      "If there exists at least one object x with property R, then every object x has property P.",
      "Every object x has property R.",
      "If an object x does not have property U, then it does not have property T.",
      "There exists at least one object x that has property Q."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x R(x)",
      "∀x (¬U(x) → ¬Q(x))",
      "∀x P(x)",
      "∀x (¬Q(x) → ¬S(x))",
      "∀x (¬R(x) → ¬S(x))",
      "∀x (T(x) → P(x))",
      "∀x (¬T(x) → ¬R(x))",
      "∃x U(x)",
      "(∀x (¬T(x) → ¬R(x)) → ∀x (T(x) → P(x)))",
      "(∃x R(x) → ∃x U(x))",
      "(∃x R(x) → ∀x P(x))",
      "∀x R(x)",
      "∀x (¬U(x) → ¬T(x))",
      "∃x Q(x)"
    ],
    "choices": [
      "If there exists at least one object with property R, then every object has property P.",
      "It is not true that if there exists at least one object with property R then every object has property P.",
      "It is both true and not true that if there exists at least one object with property R then every object has property P.",
      "If it is true that if there exists at least one object with property R then every object has property P, then if there exists at least one object with property R every object has property P."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which policy is validated by university regulations if we know that failing Philosophy blocks Quantum Physics enrollment?"
    ],
    "premises-NL": [
      "Submitting a thesis proposal (S) requires advisor approval (T).",
      "Failing Philosophy (¬P) blocks Quantum Physics enrollment (¬Q).",
      "Thesis proposals grant dormitory access (U).",
      "Research project approval (R) grants dormitory access.",
      "Dormitory access allows Quantum Physics enrollment.",
      "No advisor approval blocks Philosophy progression.",
      "Some students are enrolled in Quantum Physics.",
      "All students have submitted thesis proposals.",
      "Thesis-advisor rule enforces research-dormitory link.",
      "Thesis-advisor compliance ensures universal submissions.",
      "Philosophy-Quantum rules enforce research-dormitory policies.",
      "All students have dormitory access.",
      "Quantum enrollment requires dormitory access.",
      "Advisor approval ensures dormitory access."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (S(x) → T(x))",
      "∀x (¬P(x) → ¬Q(x))",
      "∀x (S(x) → U(x))",
      "∀x (R(x) → U(x))",
      "∀x (U(x) → Q(x))",
      "∀x (¬T(x) → ¬P(x))",
      "∃x Q(x)",
      "∀x S(x)",
      "(∀x (S(x) → T(x)) → ∀x (R(x) → U(x)))",
      "(∀x (S(x) → T(x)) → ∀x S(x))",
      "(∀x (¬P(x) → ¬Q(x)) → ∀x (R(x) → U(x)))",
      "∀x U(x)",
      "∀x (Q(x) → U(x))",
      "∀x (T(x) → U(x))"
    ],
    "choices": [
      "Tautological redundancy.",
      "Philosophy failures → Research-dormitory link.",
      "Contradictory rules.",
      "Logical inconsistency."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on university policies, which conclusion is valid if we know that no entrance exam pass → No Research completion?"
    ],
    "premises-NL": [
      "Qualifying for Quantum Physics (Q) requires Research project completion (R).",
      "Failing the entrance exam (¬T) blocks dormitory access (¬U).",
      "Special program enrollment (S) mandates passing Philosophy (P).",
      "All students passed the entrance exam.",
      "All students have passed Philosophy.",
      "No entrance exam pass → No Research completion.",
      "Some students completed Research projects.",
      "Special program students get dormitory access.",
      "Universal Philosophy success ensures special program benefits.",
      "Research completers enforce Quantum Physics requirements.",
      "The exam-Research rule activates Quantum Physics policies.",
      "Quantum disqualification revokes dormitory rights.",
      "Some students qualify for Quantum Physics.",
      "Quantum qualification grants dormitory access."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Q(x) → R(x))",
      "∀x (¬T(x) → ¬U(x))",
      "∀x (S(x) → P(x))",
      "∀x T(x)",
      "∀x P(x)",
      "∀x (¬T(x) → ¬R(x))",
      "∃x R(x)",
      "∀x (S(x) → U(x))",
      "(∀x P(x) → ∀x S(x))",
      "(∃x R(x) → ∀x (Q(x) → R(x)))",
      "(∀x (¬T(x) → ¬R(x)) → ∀x (Q(x) → R(x)))",
      "∀x (¬Q(x) → ¬U(x))",
      "∃x Q(x)",
      "∀x (Q(x) → U(x))"
    ],
    "choices": [
      "Exam-Research rule → Quantum policy activation.",
      "Contradiction in rules.",
      "Tautological redundancy.",
      "Policy denial."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises provided in the context of a university, which of the following statements can be logically deduced if we know that if an object x has property U, then it has property T?"
    ],
    "premises-NL": [
      "At the university, if an object x has property U, then it has property P.",
      "At the university, there exists at least one object x that has property Q.",
      "At the university, every object x has property S.",
      "At the university, if an object x does not have property Q, then it does not have property U.",
      "At the university, every object x has property R.",
      "At the university, every object x has property P.",
      "At the university, if an object x has property U, then it has property T.",
      "At the university, every object x has property Q.",
      "At the university, if it is true that if an object x has property U then it has property T, then every object x has property P.",
      "At the university, if every object x has property R, then there exists at least one object x that has property Q.",
      "At the university, if it is true that if an object x having property U implies it has property T then every object x has property P, then every object x has property P.",
      "At the university, if an object x does not have property U, then it does not have property R.",
      "At the university, if an object x does not have property S, then it does not have property P.",
      "At the university, if an object x does not have property Q, then it does not have property S."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (U(x) → P(x))",
      "∃x Q(x)",
      "∀x S(x)",
      "∀x (¬Q(x) → ¬U(x))",
      "∀x R(x)",
      "∀x P(x)",
      "∀x (U(x) → T(x))",
      "∀x Q(x)",
      "(∀x (U(x) → T(x)) → ∀x P(x))",
      "(∀x R(x) → ∃x Q(x))",
      "((∀x (U(x) → T(x)) → ∀x P(x)) → ∀x P(x))",
      "∀x (¬U(x) → ¬R(x))",
      "∀x (¬S(x) → ¬P(x))",
      "∀x (¬Q(x) → ¬S(x))"
    ],
    "choices": [
      "It is not true that if an object having property U implies it has property T then every object has property P.",
      "If it is true that if an object having property U implies it has property T then every object has property P, then every object has property P.",
      "It is both true and not true that if an object having property U implies it has property T then every object has property P.",
      "If it is true that if an object having property U implies it has property T then every object has property P, then it is indeed true that if an object having property U implies it has property T then every object has property P."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities contribute to students performing well in exams?"
    ],
    "premises-NL": [
      "If a student attends classes regularly, then they will understand the material better.",
      "If a student participates in extracurricular activities, then they will develop social skills.",
      "If a student understands the material, then they will perform well in exams.",
      "If a student participates in extracurricular activities, then they will perform well in exams."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, AttendsRegularly(x) → UnderstandsMaterial(x))",
      "ForAll(x, Extracurricular(x) → SocialSkills(x))",
      "ForAll(x, UnderstandsMaterial(x) → PerformsWell(x))",
      "ForAll(x, Extracurricular(x) → PerformsWell(x))"
    ],
    "choices": [
      "Attending classes regularly, participating in extracurricular activities.",
      "Developing social skills, pursuing interests.",
      "Accessing quality education, understanding material.",
      "Participating in extracurricular activities, pursuing interests."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities contribute to students performing well in exams?"
    ],
    "premises-NL": [
      "If a student attends classes regularly, then they will understand the material better.",
      "If a student participates in extracurricular activities, then they will develop social skills.",
      "If a student understands the material, then they will perform well in exams.",
      "If a student participates in extracurricular activities, then they will perform well in exams."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, AttendsRegularly(x) → UnderstandsMaterial(x))",
      "ForAll(x, Extracurricular(x) → SocialSkills(x))",
      "ForAll(x, UnderstandsMaterial(x) → PerformsWell(x))",
      "ForAll(x, Extracurricular(x) → PerformsWell(x))"
    ],
    "choices": [
      "Attending classes regularly, participating in extracurricular activities.",
      "Developing social skills, pursuing interests.",
      "Accessing quality education, understanding material.",
      "Participating in extracurricular activities, pursuing interests."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who has qualified for the Quantum Physics competition.",
      "All students are enrolled in Research Methods.",
      "If a student receives a Scholarship, then they are enrolled in Research Methods.",
      "If a student is enrolled in Research Methods, then they have qualified for the Quantum Physics competition.",
      "If there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.",
      "All students have completed the Thesis Writing course.",
      "If a student does not receive a Scholarship, then they have not qualified for the Quantum Physics competition."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "Exists(x, QualifiesQuantum(x))",
      "ForAll(x, ResearchMethods(x))",
      "ForAll(x, Scholarship(x) → ResearchMethods(x))",
      "ForAll(x, ResearchMethods(x) → QualifiesQuantum(x))",
      "Exists(x, ThesisWriting(x)) → ForAll(x, ResearchMethods(x))",
      "ForAll(x, ThesisWriting(x))",
      "ForAll(x, ¬Scholarship(x) → ¬QualifiesQuantum(x))"
    ],
    "choices": [
      "It is both true and false that if there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.",
      "It is false that if there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.",
      "If there exists at least one student who has completed the Thesis Writing course, then all students are enrolled in Research Methods.",
      "If there exists at least one student who has completed the Thesis Writing course, then all students can't enroll in Research Methods."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred?"
    ],
    "premises-NL": [
      "All students are part of the University Honors program.",
      "If a student completes the Thesis Writing course, then they have passed the Philosophy prerequisite.",
      "All students are enrolled in Research Methods.",
      "If a student is enrolled in Research Methods, then they have qualified for the Quantum Physics competition.",
      "If a student completes the Thesis Writing course, then all students are enrolled in Research Methods.",
      "If a student is not part of the University Honors program, then they have not qualified for the Quantum Physics competition.",
      "There exists at least one student who has completed the Thesis Writing course."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, UniversityHonors(x))",
      "ForAll(x, ThesisWriting(x) → PhilosophyPrerequisite(x))",
      "ForAll(x, ResearchMethods(x))",
      "ForAll(x, ResearchMethods(x) → QualifiesQuantum(x))",
      "ForAll(x, ThesisWriting(x) → ForAll(y, ResearchMethods(y)))",
      "ForAll(x, ¬UniversityHonors(x) → ¬QualifiesQuantum(x))",
      "Exists(x, ThesisWriting(x))"
    ],
    "choices": [
      "If a student doesn't complete the Thesis Writing course, then all students are enrolled in Research Methods.",
      "If a student completes the Thesis Writing course, then all students are enrolled in Research Methods.",
      "It is false that if a student completes the Thesis Writing course, then all students are enrolled in Research Methods.",
      "It is both true and false that if a student completes the Thesis Writing course, then all students are enrolled in Research Methods."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred?"
    ],
    "premises-NL": [
      "Every student must complete a community service project to graduate.",
      "Students who participate in study groups tend to have higher grades.",
      "All students have access to online learning resources.",
      "There is at least one student who has received a merit-based scholarship.",
      "If all students complete a community service project, then at least one student has attended an international exchange program.",
      "If all students have access to online learning resources, then they are all enrolled in at least one online course.",
      "Every student is required to take a foreign language course.",
      "All students have participated in at least one extracurricular activity."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, CommunityService(x))",
      "ForAll(x, StudyGroups(x) → HigherGrades(x))",
      "ForAll(x, OnlineResources(x))",
      "Exists(x, MeritScholarship(x))",
      "ForAll(x, CommunityService(x)) → Exists(x, InternationalExchange(x))",
      "ForAll(x, OnlineResources(x)) → ForAll(x, EnrolledOnlineCourse(x))",
      "ForAll(x, ForeignLanguage(x))",
      "ForAll(x, Extracurricular(x))"
    ],
    "choices": [
      "It is false that if all students have access to online learning resources, then they are all enrolled in at least one online course.",
      "If all students have not access to online learning resources, then they are all enrolled in at least one online course, and this statement is true.",
      "If all students have access to online learning resources, then they are all enrolled in at least one online course.",
      "It is both true and false that if all students have access to online learning resources, then they are all enrolled in at least one online course."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "What ensures a student avoids taking an exam?"
    ],
    "premises-NL": [
      "If a student studies a subject for 10 hours or more, they will gain the required knowledge.",
      "If a student gains the required knowledge, they will either pass the exam or complete a project.",
      "If a student does not complete the project, they must take the exam.",
      "If a subject requires an exam, the professor either prepares the exam, or the system generates one.",
      "If a student studies less than 10 hours, they must take the exam.",
      "If a student passes 3 or more subjects, they are eligible for a scholarship.",
      "If a student studies at least 15 hours for a subject, they are exempted from the exam.",
      "If a student gains required knowledge in three subjects but fails to complete a project in any, they must take the exam for those subjects.",
      "If a student studies less than 10 hours but completes the project, they still must take an assessment if the professor requires it."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, ForAll(y, Studies(x, y, ≥10) → Knowledge(x, y)))",
      "ForAll(x, ForAll(y, Knowledge(x, y) → (ExamPass(x, y) ∨ Project(x, y))))",
      "ForAll(x, ForAll(y, ¬Project(x, y) → ExamTake(x, y)))",
      "ForAll(y, RequiresExam(y) → (ProfessorPrepares(y) ∨ SystemGenerates(y)))",
      "ForAll(x, ForAll(y, Studies(x, y, <10) → ExamTake(x, y)))",
      "ForAll(x, PassesSubjects(x, ≥3) → Scholarship(x))",
      "ForAll(x, ForAll(y, Studies(x, y, ≥15) → ¬ExamTake(x, y)))",
      "ForAll(x, (KnowledgeThreeSubjects(x) ∧ ¬ProjectAny(x)) → ExamTakeThree(x))",
      "ForAll(x, ForAll(y, (Studies(x, y, <10) ∧ Project(x, y) ∧ ProfessorRequires(y)) → Assessment(x, y)))"
    ],
    "choices": [
      "Studying less than 10 hours.",
      "Failing to gain knowledge.",
      "Studying 15 hours or completing a project.",
      "Taking an assessment."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Can Tuan take the Machine Learning 101 course?"
    ],
    "premises-NL": [
      "Every course contains knowledge.",
      "If a student enrolls in a course and passes it, they will gain knowledge.",
      "If a student gains knowledge from a course, they will have understanding.",
      "If a course has an equivalent alternative, passing the alternative fulfills the prerequisite requirement.",
      "If a student meets all prerequisite requirements and is enrolled in a course, they are allowed to take the course.",
      "Tuan is enrolled in the 'Machine Learning 101' course in semester 243.",
      "To take the 'Machine Learning 101' course, students must pass the 'Linear Algebra' course.",
      "The 'Intro to Linear Algebra' course is considered equivalent to the 'Linear Algebra' course.",
      "Tuan passed the 'Intro to Linear Algebra' course in semester 241."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Course(x) → ContainsKnowledge(x))",
      "ForAll(s, ForAll(c, (Enrolled(s, c) ∧ Passes(s, c)) → GainsKnowledge(s, c)))",
      "ForAll(s, ForAll(c, GainsKnowledge(s, c) → Understanding(s, c)))",
      "ForAll(c, ForAll(d, Equivalent(c, d) → (Passes(s, d) → FulfillsPrerequisite(s, c))))",
      "ForAll(s, ForAll(c, (MeetsPrerequisites(s, c) ∧ Enrolled(s, c)) → AllowedToTake(s, c)))",
      "Enrolled(Tuan, ML101, 243)",
      "ForAll(s, AllowedToTake(s, ML101) → Passes(s, LinearAlgebra))",
      "Equivalent(LinearAlgebra, IntroLinearAlgebra)",
      "Passes(Tuan, IntroLinearAlgebra, 241)"
    ],
    "choices": [
      "No, he lacks enrollment.",
      "Yes.",
      "No, he failed Linear Algebra.",
      "Only if he takes another prerequisite."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Can Nam apply for early graduation?"
    ],
    "premises-NL": [
      "Every student must complete at least 150 credits to graduate.",
      "If a student fails a core course, they must retake and pass it to graduate.",
      "To register for the Capstone Project, a student must complete Advanced Algorithms and Research Methods.",
      "Advanced Algorithms requires Data Structures and Discrete Mathematics as prerequisites.",
      "If a student earns at least 12 credits per semester and their GPA is 3.0 or higher, they can apply for early graduation.",
      "If a student has not completed all prerequisite courses, they cannot register for any dependent courses.",
      "A student must retake a failed course in the next available semester unless they have special approval to delay.",
      "If a student delays retaking a failed core course without approval, they are ineligible for graduation.",
      "Nam has completed 138 credits and passed Data Structures but not Discrete Mathematics.",
      "Nam earns 15 credits per semester and has a GPA of 3.2.",
      "Nam failed Operating Systems, a core course, and has not retaken it yet."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Graduate(x) → Credits(x, ≥150))",
      "ForAll(x, ForAll(c, CoreCourse(c) ∧ Fails(x, c) → (Retake(x, c) ∧ Passes(x, c) → Graduate(x))))",
      "ForAll(x, Enroll(x, Capstone) → (Completed(x, AdvAlgorithms) ∧ Completed(x, ResearchMethods)))",
      "ForAll(x, Completed(x, AdvAlgorithms) → (Passes(x, DataStructures) ∧ Passes(x, DiscreteMath)))",
      "ForAll(x, (CreditsPerSemester(x, ≥12) ∧ GPA(x, ≥3.0)) → ApplyEarlyGraduation(x))",
      "ForAll(x, ForAll(c, ¬MeetsPrerequisites(x, c) → ¬Enroll(x, c)))",
      "ForAll(x, ForAll(c, Fails(x, c) → (RetakeNext(x, c) ∨ Approval(x, c))))",
      "ForAll(x, ForAll(c, CoreCourse(c) ∧ DelaysRetake(x, c) ∧ ¬Approval(x, c) → ¬Graduate(x)))",
      "Credits(Nam, 138) ∧ Passes(Nam, DataStructures) ∧ ¬Passes(Nam, DiscreteMath)",
      "CreditsPerSemester(Nam, 15) ∧ GPA(Nam, 3.2)",
      "CoreCourse(OperatingSystems) ∧ Fails(Nam, OperatingSystems) ∧ ¬Retake(Nam, OperatingSystems)"
    ],
    "choices": [
      "No, insufficient credits.",
      "Yes.",
      "No, low GPA.",
      "Only with special approval."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Can Tuan receive a scholarship?"
    ],
    "premises-NL": [
      "Every subject contains knowledge.",
      "If a student has knowledge of a subject, they can explain it to their friends.",
      "If a student explains a subject to their friends and the friends understand it, the student has mastered the subject.",
      "If a student masters a subject, they can earn an A or A+.",
      "If a student earns at least five A or A+ grades, they can receive a scholarship.",
      "Tuấn has earned three A grades.",
      "Tuấn has not earned any additional A+ grades.",
      "If a student earns an A in a subject, they must have mastered the subject.",
      "If Tuấn's friends do not understand a subject, Tuấn has not mastered it.",
      "If a student cannot explain a subject, they do not have knowledge of it."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, Subject(x) → ContainsKnowledge(x))",
      "ForAll(s, ForAll(x, Knowledge(s, x) → Explain(s, x, Friends)))",
      "ForAll(s, ForAll(x, (Explain(s, x, Friends) ∧ Understand(Friends, x)) → Mastered(s, x)))",
      "ForAll(s, ForAll(x, Mastered(s, x) → (GradeA(s, x) ∨ GradeAPlus(s, x))))",
      "ForAll(s, (Count(GradeA(s, x) ∨ GradeAPlus(s, x), ≥5) → Scholarship(s)))",
      "Count(GradeA(Tuan, x), 3)",
      "Count(GradeAPlus(Tuan, x), 0)",
      "ForAll(s, ForAll(x, GradeA(s, x) → Mastered(s, x)))",
      "ForAll(x, ¬Understand(Friends, x) → ¬Mastered(Tuan, x))",
      "ForAll(s, ForAll(x, ¬Explain(s, x, Friends) → ¬Knowledge(s, x)))"
    ],
    "choices": [
      "Yes, he has five A grades.",
      "No.",
      "Only with A+ grades.",
      "Only if friends understand."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Do all students earn an A or A+?"
    ],
    "premises-NL": [
      "If a student earns an A in a subject, they must have mastered the subject.",
      "Every student has mastered the subject.",
      "There exists at least one student who has earned an A+.",
      "Every student can explain the subject to their friends.",
      "Every student has knowledge of the subject.",
      "If a student earns an A in a subject, then there exists at least one student who has earned an A+."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, GradeA(x, S) → Mastered(x, S))",
      "ForAll(x, Mastered(x, S))",
      "Exists(x, GradeAPlus(x, S))",
      "ForAll(x, Explain(x, S, Friends))",
      "ForAll(x, Knowledge(x, S))",
      "ForAll(x, GradeA(x, S) → Exists(y, GradeAPlus(y, S)))"
    ],
    "choices": [
      "Yes, all mastered the subject.",
      "Uncertain.",
      "No, only some earn A+.",
      "Only if they explain it."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student wants to understand the lesson, they must pay attention to the teacher's lecture.",
      "If a student does not follow the school's rules, they are not considered exemplary.",
      "Every student must do extra exercises at home.",
      "There exists at least one student who wants to understand the lesson.",
      "If a student wants to understand the lesson, then there exists at least one student who does extra exercises at home.",
      "If a student follows the school's rules, they are considered exemplary.",
      "If a student wants to understand the lesson, they are considered exemplary."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "ForAll(x, WantUnderstand(x) → PayAttention(x))",
      "ForAll(x, ¬FollowRules(x) → ¬Exemplary(x))",
      "ForAll(x, ExtraExercises(x))",
      "Exists(x, WantUnderstand(x))",
      "ForAll(x, WantUnderstand(x) → Exists(y, ExtraExercises(y)))",
      "ForAll(x, FollowRules(x) → Exemplary(x))",
      "ForAll(x, WantUnderstand(x) → Exemplary(x))"
    ],
    "choices": [
      "If a student wants to understand the lesson, then there exists at least one student who listens to the teacher's instructions.",
      "It is both true and false that if a student wants to understand the lesson, then there exists at least one student who does extra exercises at home.",
      "It is false that if a student wants to understand the lesson, then there exists at least one student who does extra exercises at home.",
      "If a student wants to understand the lesson, then there exists at least one student who does extra exercises at home."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which conditions would prevent a student from meeting Software Engineering requirements?"
    ],
    "premises-NL": [
      "If a student does not pass the Algorithms course, then they also do not meet the requirements for the Software Engineering course.",
      "All students are enrolled in the Data Structures course.",
      "All students have completed the Programming Fundamentals module.",
      "All students meet the requirements for the Software Engineering course.",
      "If a student does not complete the Capstone Project, then they do not meet the requirements for Software Engineering.",
      "If a student does not complete the Capstone Project, then they do not fulfill the graduation requirement."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ¬PassAlgorithms(x) → ¬MeetsSE(x))",
      "ForAll(x, EnrolledDataStructures(x))",
      "ForAll(x, CompletedProgFundamentals(x))",
      "ForAll(x, MeetsSE(x))",
      "ForAll(x, ¬CompleteCapstone(x) → ¬MeetsSE(x))",
      "ForAll(x, ¬CompleteCapstone(x) → ¬Graduate(x))"
    ],
    "choices": [
      "Failing Algorithms, not completing Capstone Project.",
      "Not enrolled in Data Structures, failing Algorithms.",
      "Not completing Programming Fundamentals, not completing Capstone Project.",
      "Failing Software Engineering, failing Algorithms."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement can be inferred?"
    ],
    "premises-NL": [
      "If an AI system is transparent, then it can be audited.",
      "If an AI system is not fair, then it is not trustworthy.",
      "All AI systems in this study are fair.",
      "All AI systems in this study are transparent.",
      "If an AI system is fair, then it is trustworthy.",
      "If fairness leads to trustworthiness, then all AI systems must be transparent.",
      "If fairness leads to trustworthiness, then transparency implies auditability.",
      "All AI systems comply with ethical regulations."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, Transparent(x) → Auditable(x))",
      "ForAll(x, ¬Fair(x) → ¬Trustworthy(x))",
      "ForAll(x, Fair(x))",
      "ForAll(x, Transparent(x))",
      "ForAll(x, Fair(x) → Trustworthy(x))",
      "(ForAll(x, Fair(x) → Trustworthy(x)) → ForAll(x, Transparent(x)))",
      "(ForAll(x, Fair(x) → Trustworthy(x)) → ForAll(x, Transparent(x) → Auditable(x)))",
      "ForAll(x, Ethical(x))"
    ],
    "choices": [
      "If fairness leads to trustworthiness, then transparency implies auditability.",
      "It is false that if fairness leads to trustworthiness, then transparency implies auditability.",
      "It is both true and false that if fairness leads to trustworthiness, then transparency implies auditability.",
      "Not all AI systems are trustworthy."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which courses have all students passed?"
    ],
    "premises-NL": [
      "If a student attends the Programming Fundamentals course, then they will be ready for the Advanced Programming course.",
      "All students are required to attend the Advanced Programming course.",
      "All students have completed the Programming Fundamentals course.",
      "If attending the Programming Fundamentals course leads to being ready for the Advanced Programming course, then all students must attend the Programming Fundamentals course.",
      "All students have passed the Mathematics for Computer Science course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, AttendProgFund(x) → ReadyAdvProg(x))",
      "ForAll(x, AttendAdvProg(x))",
      "ForAll(x, PassProgFund(x))",
      "(ForAll(x, AttendProgFund(x) → ReadyAdvProg(x)) → ForAll(x, AttendProgFund(x)))",
      "ForAll(x, PassMathCS(x))"
    ],
    "choices": [
      "Programming Fundamentals, Mathematics for Computer Science.",
      "Advanced Programming, Programming Fundamentals.",
      "Mathematics for Computer Science, Advanced Programming.",
      "Programming Fundamentals, Advanced Programming, Mathematics for Computer Science."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which outcomes are guaranteed for all students?"
    ],
    "premises-NL": [
      "All students must comply with the institutional standards.",
      "If a student attends a specific course, they will be required to complete an assignment.",
      "If a student completes the assignment, they will receive a passing grade.",
      "If a student has participated in the assessment process, they will have successfully completed the assignment.",
      "All students have completed the assessment process."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, MeetsStandard(x))",
      "ForAll(x, AttendCourse(x) → Assignment(x))",
      "ForAll(x, Assignment(x) → PassGrade(x))",
      "ForAll(x, AssessmentProcess(x) → Assignment(x))",
      "ForAll(x, AssessmentProcess(x))"
    ],
    "choices": [
      "Meeting the standard, completing the assignment, receiving a passing grade.",
      "Meeting the standard, attending the course, receiving a passing grade.",
      "Completing the assignment, assessment process, attending the course.",
      "Receiving a passing grade, meeting the standard, completing training."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If students receive low grades, it may indicate insufficient effort, decreasing motivation, frustration, and anxiety, or they might seek additional support.",
      "If students reflect on their low grades, they will take proactive steps to improve.",
      "If students take proactive steps to improve, they will increase their study hours and focus more on their weaknesses.",
      "If students don't take proactive steps to improve, they won't increase their study hours and focus more on their weaknesses."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (L(x) → ((E(x) ∧ M(x) ∧ F(x) ∧ A(x)) ∨ S(x)))",
      "∀x (R(x) → P(x))",
      "∀x (P(x) → (H(x) ∧ W(x)))",
      "∀x (¬P(x) → (¬H(x) ∧ ¬W(x)))"
    ],
    "choices": [
      "∀x (R(x) → (H(x) ∧ W(x)))",
      "∀x (P(x) → ¬W(x))",
      "∀x (R(x) → ¬H(x))",
      "∀x (¬P(x) → (H(x) ∧ ¬S(x)))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a student spends time learning, then they will grow.",
      "If a person is not teaching, then they cannot learn.",
      "Everyone is a student.",
      "There exists a teacher.",
      "If a person is not a student, then they cannot teach.",
      "If not teaching leads to not learning, then there exists someone who is learning.",
      "If everyone is a student, then having knowledge leads to receiving education.",
      "There exists someone who has graduated.",
      "If a person has graduated, then they have knowledge.",
      "Learning leads to the development of critical thinking and problem-solving skills."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) ∧ L(x) → G(x))",
      "∀x (¬T(x) → ¬L(x))",
      "∀x S(x)",
      "∃x T(x)",
      "∀x (¬S(x) → ¬T(x))",
      "∀x (¬T(x) → ¬L(x)) → ∃x L(x)",
      "∀x S(x) → ∀x (K(x) → E(x))",
      "∃x D(x)",
      "∀x (D(x) → K(x))",
      "∀x (L(x) → (C(x) ∧ P(x)))"
    ],
    "choices": [
      "∀x (L(x) → (C(x) ∧ P(x) ∧ G(x)))",
      "∀x (L(x) → ¬G(x))",
      "∀x (S(x) → ¬L(x))",
      "∀x (K(x) → ¬E(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a person is a student, then they must attend classes regularly.",
      "If a person is not a student, then they cannot attend classes.",
      "John is a student.",
      "John attends classes regularly.",
      "Sarah is not a student.",
      "If a student attends classes regularly, they will gain knowledge.",
      "Knowledge gained in class can lead to a better future.",
      "There is a limit to the number of students who can attend each class.",
      "Students who miss more than 3 classes per semester will be penalized.",
      "John has missed no classes this semester."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → A(x))",
      "∀x (¬S(x) → ¬A(x))",
      "S(John)",
      "A(John)",
      "¬S(Sarah)",
      "∀x (S(x) ∧ A(x) → K(x))",
      "∀x (K(x) → F(x))",
      "∀c ∃n (MaxStudents(c, n))",
      "∀x (S(x) ∧ M(x) > 3 → P(x))",
      "M(John) = 0"
    ],
    "choices": [
      "∀x (S(x) ∧ A(x) → F(x))",
      "¬K(John)",
      "∀x (M(x) > 0 → ¬K(x))",
      "A(Sarah)"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If you are a student of the school and have a valid library card, you can borrow books.",
      "If you return books overdue, you will be fined.",
      "If you are fined, you cannot borrow books.",
      "An is a student of the school.",
      "An has a valid library card.",
      "An returned books overdue."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x ((S(x) ∧ V(x)) → B(x))",
      "∀x (O(x) → F(x))",
      "∀x (F(x) → ¬B(x))",
      "S(An)",
      "V(An)",
      "O(An)"
    ],
    "choices": [
      "∀x (O(x) → ¬B(x))",
      "B(An)",
      "¬F(An)",
      "¬O(An)"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "All students attend lectures.",
      "If a student attends lectures, they participate in group discussions."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AttendsLectures(x))",
      "∀x (Student(x) ∧ AttendsLectures(x) → ParticipatesInGroupDiscussions(x))"
    ],
    "choices": [
      "If a student passes the exam, they participate in group discussions.",
      "Some students don’t participate in group discussions.",
      "All students pass the exam.",
      "No student attends lectures."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "All students attend lectures.",
      "If a student attends lectures, they participate in group discussions."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) → AttendsLectures(x))",
      "∀x (Student(x) ∧ AttendsLectures(x) → ParticipatesInGroupDiscussions(x))"
    ],
    "choices": [
      "If a student passes the exam, they participate in group discussions.",
      "Some students don’t participate in group discussions.",
      "All students pass the exam.",
      "No student attends lectures."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student wants to understand the lesson, they pay attention to the lecture.",
      "If a student wants to understand the lesson, they do extra exercises at home.",
      "If some student does extra exercises at home, then some student pays attention to the lecture."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ WantsToUnderstand(x) → PaysAttention(x))",
      "∀x (Student(x) ∧ WantsToUnderstand(x) → DoesExtraExercises(x))",
      "∃x (Student(x) ∧ DoesExtraExercises(x)) → ∃x (Student(x) ∧ PaysAttention(x))"
    ],
    "choices": [
      "If some student does extra exercises, all students who want to understand the lesson pay attention.",
      "Some students don’t pay attention to the lecture.",
      "All students do extra exercises.",
      "No student wants to understand the lesson."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which of the following statements can be inferred?"
    ],
    "premises-NL": [
      "If a student participates in a class, they will register for it.",
      "Every student is enrolled in at least one course.",
      "If a student is not enrolled in a course, they are not participating in it.",
      "There exists at least one student who participates in a course.",
      "If a student is enrolled in a course, they must complete the assignments.",
      "If every student participates in a course, then if a student is enrolled, they must complete the assignments.",
      "If it is true that every student participates in a course and if a student is enrolled, they must complete the assignments, then every student participates in a course.",
      "If a student is enrolled in a course, they must attend the class.",
      "Every student is required to attend the class in the course they are enrolled in."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (P(x) → R(x))",
      "∀x E(x)",
      "∀x (¬E(x) → ¬P(x))",
      "∃x P(x)",
      "∀x (E(x) → A(x))",
      "∀x P(x) → ∀x (E(x) → A(x))",
      "(∀x P(x) ∧ ∀x (E(x) → A(x))) → ∀x P(x)",
      "∀x (E(x) → T(x))",
      "∀x (E(x) → T(x))"
    ],
    "choices": [
      "∀x (P(x) → (A(x) ∧ T(x)))",
      "∀x (P(x) → ¬A(x))",
      "¬∀x P(x)",
      "∀x (E(x) → ¬T(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a teacher uses various instructional methods, they address diverse student learning needs.",
      "If a teacher manages their classroom well, they promote a respectful learning environment.",
      "If a teacher uses instructional methods and manages their classroom, they understand pedagogical principles."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Teacher(x) ∧ UsesInstructionalMethods(x) → AddressesDiverseLearningNeeds(x))",
      "∀x (Teacher(x) ∧ ManagesClassroom(x) → PromotesLearningEnvironment(x))",
      "∀x (Teacher(x) ∧ UsesInstructionalMethods(x) ∧ ManagesClassroom(x) → UnderstandsPedagogicalPrinciples(x))"
    ],
    "choices": [
      "An effective teacher understands how to teach well.",
      "All teachers use the same teaching methods.",
      "No teacher manages their classroom.",
      "Some teachers don’t address student needs."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be logically inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who participated in the online training session.",
      "There exists at least one student who signed the academic integrity agreement.",
      "If a student did not submit the final report, then they did not receive course recognition.",
      "If a student attended the training session, then they submitted the final report.",
      "If a student did not attend the training session, then they did not submit the final report.",
      "If students who did not attend the training session also failed to submit the final report, then they did not receive course recognition.",
      "If not attending the training session leads to not submitting the final report, then some students must have signed the academic integrity agreement.",
      "If a student did not attend the training session, then they did not submit the final project either.",
      "If a student did not sign the academic integrity agreement, then they did not receive course recognition."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x A(x)",
      "∃x S(x)",
      "∀x (¬F(x) → ¬R(x))",
      "∀x (A(x) → F(x))",
      "∀x (¬A(x) → ¬F(x))",
      "∀x ((¬A(x) ∧ ¬F(x)) → ¬R(x))",
      "∀x (¬A(x) → ¬F(x)) → ∃x S(x)",
      "∀x (¬A(x) → ¬P(x))",
      "∀x (¬S(x) → ¬R(x))"
    ],
    "choices": [
      "∀x (¬A(x) → (¬R(x) ∧ ¬P(x)))",
      "∃x (¬A(x) ∧ F(x))",
      "∀x (A(x) → ¬R(x))",
      "∀x (¬S(x) → F(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "If a student hasn’t submitted their final project, they don’t meet the Research Skills requirement.",
      "If a student meets the Research Skills requirement, they’ve presented in a research seminar."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ ¬SubmittedFinalProject(x) → ¬MeetsResearchSkills(x))",
      "∀x (Student(x) ∧ MeetsResearchSkills(x) → PresentedInSeminar(x))"
    ],
    "choices": [
      "If a student hasn’t submitted their final project, they haven’t presented in a research seminar.",
      "All students have presented in a research seminar.",
      "Some students don’t meet the Research Skills requirement.",
      "No student has submitted their final project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be logically inferred?"
    ],
    "premises-NL": [
      "There exists at least one student who has passed the prerequisite course in programming.",
      "If a student does not meet the minimum grade requirement, they are not allowed to proceed to advanced courses.",
      "All students are required to complete the foundational courses before proceeding to specialized courses.",
      "If a student has not passed the core course, they cannot proceed with the elective courses.",
      "If a student has not completed the prerequisite course, they are not allowed to enroll in any advanced courses.",
      "If a student has passed the prerequisite course, they are allowed to proceed to specialized courses.",
      "If a student has completed the foundational courses, then they must have met the prerequisites for elective courses.",
      "If a student has failed to meet the required standards, they cannot participate in the final project preparation.",
      "There exists at least one student who is eligible to participate in the final project preparation."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x P(x)",
      "∀x (¬G(x) → ¬A(x))",
      "∀x (S(x) → F(x))",
      "∀x (¬C(x) → ¬E(x))",
      "∀x (¬Q(x) → ¬A(x))",
      "∀x (P(x) → S(x))",
      "∀x (F(x) → E(x))",
      "∀x (¬R(x) → ¬J(x))",
      "∃x J(x)"
    ],
    "choices": [
      "∀x (P(x) → E(x))",
      "∀x (F(x) → ¬E(x))",
      "∃x (¬R(x) ∧ J(x))",
      "∀x (¬P(x) → A(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about student eligibility follows from the premises?"
    ],
    "premises-NL": [
      "If a student has passed the prerequisite course, then they are eligible to enroll in the next course.",
      "There exists at least one student who is eligible to enroll in the next course.",
      "All students must complete the required introductory courses.",
      "A student is eligible to enroll in the next course only if they have passed the prerequisite course."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (PassedPrerequisite(x) → EligibleToEnroll(x))",
      "∃x EligibleToEnroll(x)",
      "∀x CompletedIntroCourses(x)",
      "∀x (EligibleToEnroll(x) → PassedPrerequisite(x))"
    ],
    "choices": [
      "Some students are eligible without passing the prerequisite.",
      "No student is eligible without passing the prerequisite.",
      "All eligible students have not completed introductory courses.",
      "Passing the prerequisite prevents eligibility."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that Kelvin submitted his CH3002 lab report on time?"
    ],
    "premises-NL": [
      "For courses with lab components, a student is allowed to take the exam if their lab score is at least 4.0 out of 10 and all their component scores are greater than 0.",
      "Kelvin’s lab score for CH3002 is at least 4.0 out of 10, and all his component scores for CH3002 are positive.",
      "Students enrolled in multiple courses must submit a project unless the course is taught by Professor X.",
      "CH3002 has three components: Lab, Quiz, and Homework, but Quiz scores are optional for students over 20 years old.",
      "Kelvin is 19 years old and has a Homework score of 7.0 in CH3001, which is unrelated to CH3002.",
      "Professor Y teaches CH3002, and all courses taught by Professor Y have an extra credit option.",
      "Extra credit can increase a student’s total score by up to 2 points, but it doesn’t affect component scores.",
      "Another student, Liam, has a Lab score of 3.5 in CH3002 and is not allowed to take the exam.",
      "Courses with more than 50 students require a midterm, but CH3002 has only 45 students.",
      "Kelvin submitted his CH3002 lab report on time, which is required for lab scores to be valid.",
      "Late submissions reduce a lab score by 1.0, unless the student has a medical excuse.",
      "Liam has a medical excuse for CH3001 but not for CH3002.",
      "CH3002’s final exam is scheduled for December 15th, and all eligible students must attend."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀s ∀c (AllowedToTakeExam(s, c) ↔ (ComponentScore(s, c, Lab) ≥ 4.0 ∧ ∀i ComponentScore(s, c, i) > 0))",
      "ComponentScore(Kelvin, CH3002, Lab) ≥ 4.0",
      "∀i ComponentScore(Kelvin, CH3002, i) > 0",
      "∀s ∀c (Enrolled(s, c) ∧ ¬TaughtBy(c, ProfessorX) → MustSubmitProject(s, c))",
      "Components(CH3002, {Lab, Quiz, Homework})",
      "∀s ∀c (Age(s) > 20 → ¬Required(ComponentScore(s, c, Quiz)))",
      "Age(Kelvin) = 19",
      "ComponentScore(Kelvin, CH3001, Homework) = 7.0",
      "¬Equal(CH3001, CH3002)",
      "TaughtBy(CH3002, ProfessorY)",
      "∀c (TaughtBy(c, ProfessorY) → HasExtraCredit(c))",
      "∀s ∀c (HasExtraCredit(c) → TotalScoreIncrease(s, c) ≤ 2.0 ∧ ¬AffectsComponentScores(s, c))",
      "ComponentScore(Liam, CH3002, Lab) = 3.5",
      "¬AllowedToTakeExam(Liam, CH3002)",
      "∀c (StudentCount(c) > 50 → RequiresMidterm(c))",
      "StudentCount(CH3002) = 45",
      "SubmittedOnTime(Kelvin, CH3002, LabReport)",
      "∀s ∀c (SubmittedOnTime(s, c, LabReport) → Valid(ComponentScore(s, c, Lab)))",
      "∀s ∀c (¬SubmittedOnTime(s, c, LabReport) ∧ ¬HasMedicalExcuse(s, c) → ComponentScore(s, c, Lab) = ComponentScore(s, c, Lab) - 1.0)",
      "HasMedicalExcuse(Liam, CH3001)",
      "¬HasMedicalExcuse(Liam, CH3002)",
      "ExamDate(CH3002, December15)"
    ],
    "choices": [
      "Kelvin is allowed to take the exam for CH3002.",
      "Liam is allowed to take the exam for CH3002.",
      "Kelvin must submit a project for CH3002.",
      "Kelvin’s Homework score in CH3001 affects his eligibility for CH3002’s exam."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that Lan is enrolled in Chemistry 101?"
    ],
    "premises-NL": [
      "Students are allowed to enter the laboratory to conduct experiments only if they have both health insurance and accident insurance.",
      "Lan has both health insurance and accident insurance.",
      "The laboratory is open from 9 AM to 5 PM on weekdays, unless there’s a special event.",
      "Students must wear safety goggles in the lab, but this rule is waived for virtual labs.",
      "Lan is enrolled in Chemistry 101, which requires lab access on Tuesdays.",
      "Another student, Kai, has health insurance but no accident insurance.",
      "Lab equipment must be reserved 24 hours in advance for groups larger than three.",
      "Lan is working alone and doesn’t need to reserve equipment.",
      "All students must complete a safety training course, though Lan completed hers last semester.",
      "The lab supervisor, Dr. Zee, allows extra hours for students with a GPA above 3.5.",
      "Lan’s GPA is 3.8, but she only works during regular hours.",
      "Kai was denied lab access last week due to incomplete paperwork.",
      "Chemistry 101 experiments require a minimum temperature of 20°C in the lab."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀s (AllowedToEnterLab(s) ↔ (HasHealthInsurance(s) ∧ HasAccidentInsurance(s)))",
      "HasHealthInsurance(Lan)",
      "HasAccidentInsurance(Lan)",
      "∀s ((LabOpen(Weekdays, 9AM-5PM) ∧ ¬SpecialEvent) → CanAccessLab(s))",
      "∀s (InLab(s) ∧ ¬VirtualLab → MustWearGoggles(s))",
      "Enrolled(Lan, Chemistry101)",
      "RequiresLabAccess(Chemistry101, Tuesdays)",
      "HasHealthInsurance(Kai)",
      "¬HasAccidentInsurance(Kai)",
      "∀s (GroupSize(s) > 3 → MustReserveEquipment(s, 24Hours))",
      "GroupSize(Lan) = 1",
      "CompletedSafetyTraining(Lan)",
      "∀s ((GPA(s) > 3.5 ∧ Approved(DrZee, s)) → ExtraLabHours(s))",
      "GPA(Lan) = 3.8",
      "WorksRegularHours(Lan)",
      "¬AllowedToEnterLab(Kai)",
      "∀e (Experiment(Chemistry101, e) → LabTemperature ≥ 20)"
    ],
    "choices": [
      "Lan is allowed to enter the laboratory for Chemistry 101.",
      "Lan is not allowed to enter the laboratory for Chemistry 101.",
      "Kai is allowed to enter the laboratory for Chemistry 101.",
      "Lan must reserve lab equipment for Chemistry 101."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that Linh is a full-time student with health issues?"
    ],
    "premises-NL": [
      "Full-time students must take at least 14 credits per semester, but in special cases (e.g., weak academic performance or health issues), they can take a minimum of 11 credits for up to 2 semesters.",
      "Part-time (work-study) students must take at least 11 credits per semester, but in special cases (e.g., weak academic performance, health issues, or work reasons), they can take a minimum of 9 credits for up to 3 semesters.",
      "Linh is a full-time student with health issues, taking 12 credits this semester.",
      "This is Linh’s first semester using the special case exception.",
      "Part-time students must submit a work schedule to the registrar each semester.",
      "Full-time students taking fewer than 14 credits must meet with an advisor annually.",
      "Linh is enrolled in a 4-credit lab course and two 4-credit lecture courses.",
      "Another student, Minh, is a part-time student taking 10 credits due to work reasons.",
      "Courses worth more than 3 credits require attendance at 80% of classes.",
      "The university offers a tuition discount for students taking exactly 12 credits.",
      "Linh has not exceeded the 2-semester limit for special cases.",
      "Minh’s employer requires him to work 20 hours per week.",
      "Full-time students must declare a major by their third semester, and Linh is in her second."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀s (FullTimeStudent(s) → (Credits(s) ≥ 14 ∨ (SpecialCase(s) ∧ Credits(s) ≥ 11)))",
      "∀s (PartTimeStudent(s) → (Credits(s) ≥ 11 ∨ (SpecialCase(s) ∧ Credits(s) ≥ 9)))",
      "FullTimeStudent(Linh) ∧ SpecialCase(Linh) ∧ Credits(Linh) = 12",
      "SemesterCountSpecialCase(Linh) = 1",
      "∀s (PartTimeStudent(s) → MustSubmitWorkSchedule(s))",
      "∀s (FullTimeStudent(s) ∧ Credits(s) < 14 → MustMeetAdvisor(s))",
      "Enrolled(Linh, LabCourse) ∧ Credits(LabCourse) = 4",
      "Enrolled(Linh, LectureCourse1) ∧ Credits(LectureCourse1) = 4",
      "Enrolled(Linh, LectureCourse2) ∧ Credits(LectureCourse2) = 4",
      "PartTimeStudent(Minh) ∧ SpecialCase(Minh) ∧ Credits(Minh) = 10",
      "∀c (Credits(c) > 3 → AttendanceRequired(c, 80%))",
      "∀s (Credits(s) = 12 → EligibleForDiscount(s))",
      "SemesterCountSpecialCase(Linh) ≤ 2",
      "WorkHours(Minh) = 20",
      "∀s (FullTimeStudent(s) ∧ Semester(s) ≥ 3 → MustDeclareMajor(s))",
      "Semester(Linh) = 2"
    ],
    "choices": [
      "Linh is not meeting the credit requirements for full-time students.",
      "Linh is meeting the credit requirements for full-time students.",
      "Linh needs to take more than 12 credits to meet the credit requirements.",
      "Linh is a part-time student."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that Hà has accumulated 80 credits in the training program?"
    ],
    "premises-NL": [
      "Students must accumulate at least 65% of the total credits of their training program to be eligible for an internship.",
      "The training program has a total of 120 credits.",
      "Hà has accumulated 80 credits in the training program.",
      "Students must submit an internship application by June 1st to be considered.",
      "Hà submitted her application on May 15th.",
      "The training program includes 30 credits of elective courses, but only 20 credits are counted toward the internship requirement.",
      "Another student, Vinh, has accumulated 75 credits and is also in the training program.",
      "Students with a GPA below 2.5 are required to take a remedial course before interning.",
      "Hà’s GPA is 3.2, and she has no remedial requirements.",
      "Internships are offered in two cycles: summer and fall, with summer priority for seniors.",
      "Hà is a junior and applying for a fall internship.",
      "The program advisor must approve all internship applications, and Hà’s was approved.",
      "Vinh missed the application deadline and accumulated only 10 elective credits."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀s (EligibleForInternship(s) ↔ (AccumulatedCredits(s) ≥ 0.65 * TotalCredits(Program(s))))",
      "TotalCredits(TrainingProgram) = 120",
      "AccumulatedCredits(Hà) = 80",
      "∀s (EligibleForInternship(s) → SubmittedApplication(s, Before(June1)))",
      "SubmittedApplication(Hà, May15)",
      "ElectiveCredits(TrainingProgram) = 30",
      "CountedElectiveCredits(TrainingProgram, Internship) = 20",
      "AccumulatedCredits(Vinh) = 75",
      "Program(Vinh) = TrainingProgram",
      "∀s (GPA(s) < 2.5 → RequiresRemedialCourse(s))",
      "GPA(Hà) = 3.2",
      "¬RequiresRemedialCourse(Hà)",
      "InternshipCycles = {Summer, Fall}",
      "Priority(Summer, Seniors)",
      "Status(Hà) = Junior ∧ ApplyingFor(Hà, Fall)",
      "∀s (EligibleForInternship(s) → ApprovedByAdvisor(s))",
      "ApprovedByAdvisor(Hà)",
      "¬SubmittedApplication(Vinh, Before(June1))",
      "ElectiveCreditsAccumulated(Vinh) = 10"
    ],
    "choices": [
      "Hà is eligible for an internship because she has accumulated 80 credits.",
      "Hà is not eligible for an internship due to insufficient credits.",
      "Hà must take remedial courses before applying for the internship.",
      "Hà’s internship application was submitted after June 1st."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that Phong has an average semester score of 2.3?"
    ],
    "premises-NL": [
      "Students are ranked based on their average semester scores as follows: Excellent (3.6 to 4.0), Good (3.2 to 3.6), Fair (2.5 to 3.2), Average (2.0 to 2.5), Weak (1.0 to 2.0), Poor (below 1.0).",
      "Phong has an average semester score of 2.3.",
      "Students with an Excellent ranking receive a scholarship of $500 per semester.",
      "Phong is in his third semester and has taken 15 credits this term.",
      "Another student, Hoa, has an average score of 3.7 and is ranked Excellent.",
      "Scores are calculated based on a weighted average of exams (60%) and projects (40%).",
      "Phong scored 2.5 on exams and 2.0 on projects this semester.",
      "Students ranked below Fair must attend a study skills workshop.",
      "The maximum score per course is 4.0, and Phong is enrolled in four courses.",
      "Hoa has a part-time job and still maintains her ranking.",
      "Rankings are reviewed at the end of each semester, with a deadline of December 20th.",
      "Phong submitted his final project on time, avoiding a 0.5-point penalty."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀s ((AverageScore(s) ≥ 3.6 ∧ AverageScore(s) ≤ 4.0) → Ranking(s, Excellent))",
      "∀s ((AverageScore(s) ≥ 3.2 ∧ AverageScore(s) < 3.6) → Ranking(s, Good))",
      "∀s ((AverageScore(s) ≥ 2.5 ∧ AverageScore(s) < 3.2) → Ranking(s, Fair))",
      "∀s ((AverageScore(s) ≥ 2.0 ∧ AverageScore(s) < 2.5) → Ranking(s, Average))",
      "∀s ((AverageScore(s) ≥ 1.0 ∧ AverageScore(s) < 2.0) → Ranking(s, Weak))",
      "∀s (AverageScore(s) < 1.0 → Ranking(s, Poor))",
      "AverageScore(Phong) = 2.3",
      "∀s (Ranking(s, Excellent) → Scholarship(s, 500))",
      "Semester(Phong) = 3 ∧ Credits(Phong) = 15",
      "AverageScore(Hoa) = 3.7 ∧ Ranking(Hoa, Excellent)",
      "∀s (AverageScore(s) = (0.6 * ExamScore(s) + 0.4 * ProjectScore(s)))",
      "ExamScore(Phong) = 2.5 ∧ ProjectScore(Phong) = 2.0",
      "∀s (Ranking(s) ∈ {Average, Weak, Poor} → MustAttendWorkshop(s))",
      "MaxScorePerCourse = 4.0 ∧ EnrolledCourses(Phong) = 4",
      "PartTimeJob(Hoa) ∧ Ranking(Hoa, Excellent)",
      "ReviewDeadline = December20",
      "SubmittedOnTime(Phong, FinalProject) ∧ ¬Penalty(Phong, 0.5)"
    ],
    "choices": [
      "Phong has an Excellent ranking.",
      "Phong has a Good ranking.",
      "Phong has an Average ranking.",
      "Phong is ranked Poor."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that Tâm has accumulated 40 credits and has met the foreign language standard for year two?"
    ],
    "premises-NL": [
      "Students are ranked into academic years based on their accumulated credits (N) compared to the average credits per year (M). For the second year, M ≤ N < 2M and they must meet the foreign language standard for year two.",
      "The average credits per year (M) for regular students is 33.",
      "Tâm has accumulated 40 credits and has met the foreign language standard for year two.",
      "Students in accelerated programs have an average credits per year (M) of 40.",
      "Tâm is enrolled in the regular program, not the accelerated one.",
      "Another student, Nam, has 70 credits but hasn’t met the language standard for year two.",
      "The foreign language standard for year two requires a TOEFL score of at least 500.",
      "Tâm’s TOEFL score is 550, and she submitted it before the October 1st deadline.",
      "Students must complete at least 10 credits of core courses each year, and Tâm has 15 this year.",
      "Nam is in his third semester and has a GPA of 3.0.",
      "Second-year students are eligible for a mentorship program if they apply by November 15th.",
      "Tâm applied for the mentorship program on November 10th.",
      "The regular program includes a total of 132 credits across four years."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀s (SecondYear(s) ↔ ((M ≤ AccumulatedCredits(s) < 2M) ∧ MeetsLanguageStandard(s, YearTwo)))",
      "M = 33",
      "AccumulatedCredits(Tâm) = 40 ∧ MeetsLanguageStandard(Tâm, YearTwo)",
      "M_accelerated = 40",
      "Program(Tâm) = Regular ∧ ¬Program(Tâm) = Accelerated",
      "AccumulatedCredits(Nam) = 70 ∧ ¬MeetsLanguageStandard(Nam, YearTwo)",
      "∀s (MeetsLanguageStandard(s, YearTwo) ↔ TOEFLScore(s) ≥ 500)",
      "TOEFLScore(Tâm) = 550 ∧ SubmittedBefore(Tâm, October1)",
      "∀s (CoreCredits(s, CurrentYear) ≥ 10)",
      "CoreCredits(Tâm, CurrentYear) = 15",
      "Semester(Nam) = 3 ∧ GPA(Nam) = 3.0",
      "∀s (SecondYear(s) ∧ AppliedBefore(s, November15) → EligibleMentorship(s))",
      "AppliedBefore(Tâm, November10)",
      "TotalCredits(RegularProgram) = 132"
    ],
    "choices": [
      "Tâm is a second-year student.",
      "Tâm is in an accelerated program.",
      "Nam meets the language standard for year two.",
      "Tâm is eligible for the mentorship program."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that Phong has accumulated 70 credits and has met the foreign language standard for year three?"
    ],
    "premises-NL": [
      "Students are ranked into academic years based on their accumulated credits (N) compared to the average credits per year (M). For the third year, 2M ≤ N < 3M and they must meet the foreign language standard for year three.",
      "The average credits per year (M) for regular students is 33.",
      "Phong has accumulated 70 credits and has met the foreign language standard for year three.",
      "The foreign language standard for year three requires an IELTS score of at least 6.0.",
      "Phong’s IELTS score is 6.5, certified last month.",
      "Students in the honors program have an average credits per year (M) of 36.",
      "Phong is in the regular program, not the honors program.",
      "Another student, Lan, has 60 credits and meets the language standard for year two but not year three.",
      "Third-year students must complete a 5-credit capstone project, which Phong has enrolled in.",
      "The regular program requires a total of 132 credits for graduation.",
      "Phong has a GPA of 3.4 and no academic probation history.",
      "Lan missed the language certification deadline of September 30th.",
      "Third-year students can apply for study abroad if they meet the foreign language standard for year three."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀s (ThirdYear(s) ↔ ((2M ≤ AccumulatedCredits(s) < 3M) ∧ MeetsLanguageStandard(s, YearThree)))",
      "M = 33",
      "AccumulatedCredits(Phong) = 70 ∧ MeetsLanguageStandard(Phong, YearThree)",
      "∀s (MeetsLanguageStandard(s, YearThree) ↔ IELTS(s) ≥ 6.0)",
      "IELTS(Phong) = 6.5 ∧ Certified(Phong, LastMonth)",
      "M_honors = 36",
      "Program(Phong) = Regular ∧ ¬Program(Phong) = Honors",
      "AccumulatedCredits(Lan) = 60 ∧ MeetsLanguageStandard(Lan, YearTwo) ∧ ¬MeetsLanguageStandard(Lan, YearThree)",
      "∀s (ThirdYear(s) → Enrolled(s, CapstoneProject) ∧ Credits(CapstoneProject) = 5)",
      "Enrolled(Phong, CapstoneProject)",
      "TotalCredits(RegularProgram) = 132",
      "GPA(Phong) = 3.4 ∧ ¬OnProbation(Phong)",
      "¬CertifiedBefore(Lan, September30)",
      "∀s (ThirdYear(s) ∧ MeetsLanguageStandard(s, YearThree) → EligibleStudyAbroad(s))"
    ],
    "choices": [
      "Phong is a third-year student.",
      "Phong has not met the foreign language standard for year three.",
      "Lan is eligible for study abroad.",
      "Phong has not completed the capstone project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that students work in groups?"
    ],
    "premises-NL": [
      "If students join in group work, they develop interpersonal skills.",
      "If students work in groups, then they can share their perspectives and create creative solutions.",
      "If students work in groups, then they can increase motivation and performance.",
      "If students join group work with unequal contribution, then they can frustrate among members.",
      "If students join in a group work with dominant personality, then they will reduce collaboration effectiveness.",
      "If students join in a group with promoting critical thinking, then they can improve their problem solving.",
      "If students struggle with poor group dynamics, then they will be stressed and have lower satisfaction.",
      "If students join a good communicative group, then they have successful collaboration."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (Student(x) ∧ ParticipatesInGroupWork(x) → DevelopsInterpersonalSkills(x))",
      "∀x (Student(x) ∧ WorksInGroups(x) → SharesPerspectives(x) ∧ CreativeSolutions(x))",
      "∀x (Student(x) ∧ GroupWork(x) → IncreasedMotivation(x) ∧ ImprovedPerformance(x))",
      "∀x (Student(x) ∧ GroupWork(x) ∧ UnequalContribution(x) → FrustrationAmongMembers(x))",
      "∀x (Student(x) ∧ GroupWork(x) ∧ DominantPersonality(x) → ReducedCollaborationEffectiveness(x))",
      "∀x (Student(x) ∧ GroupWork(x) ∧ PromotesCriticalThinking(x) → ImprovedProblemSolving(x))",
      "∀x (Student(x) ∧ GroupWork(x) ∧ PoorGroupDynamics(x) → Stress(x) ∧ LowerSatisfaction(x))",
      "∀x (Student(x) ∧ GroupWork(x) ∧ GoodCommunication(x) → SuccessfulCollaboration(x))"
    ],
    "choices": [
      "If students work in groups, then their performance improves.",
      "If students work in groups, then their performance does not improve.",
      "Students working in groups neither gain nor lose performance.",
      "None of the above can be concluded."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that if a person is a teacher, then that person is respected?"
    ],
    "premises-NL": [
      "If a person is a student, then that person is qualified.",
      "If a person is a teacher, then that person is respected.",
      "There exists at least one person who is prepared.",
      "If a person is respected, then that person is useful.",
      "There exists at least one person who is respected.",
      "If all students being qualified implies that someone is respected, then that implication holds.",
      "If all teachers being respected implies that someone is prepared, then that implication holds.",
      "If a person is not useful, then that person is not a student.",
      "If a person is respected, then that person is also prepared."
    ],
    "answers": [
      "D"
    ],
    "premises-FOL": [
      "∀x (S(x) → Q(x))",
      "∀x (T(x) → R(x))",
      "∃x P(x)",
      "∀x (R(x) → U(x))",
      "∃x R(x)",
      "(∀x (S(x) → Q(x)) → ∃x R(x))",
      "(∀x (T(x) → R(x)) → ∃x P(x))",
      "∀x (¬U(x) → ¬S(x))",
      "∀x (R(x) → P(x))"
    ],
    "choices": [
      "It is not true that if every teacher is respected, then someone is prepared.",
      "Teachers are respected if they graduate from famous universities.",
      "All teachers are disrespected.",
      "If every teacher is respected, then someone must be prepared."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred if we know that every student is participating in the training session?"
    ],
    "premises-NL": [
      "Every student is participating in the training session.",
      "If a student attends the seminar, they will be eligible for the certification.",
      "If a student is registered for the course, they attend the seminar.",
      "Every student is registered for the course.",
      "If a student attends the seminar, they are participating in the training session.",
      "If a student does not submit assignments, they did not attend the seminar.",
      "Every student completes the course successfully.",
      "If there exists a student participating in the training session, then all students are participating in the training session."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x T(x)",
      "∀x (S(x) → Q(x))",
      "∀x (R(x) → S(x))",
      "∀x R(x)",
      "∀x (S(x) → T(x))",
      "∀x (¬P(x) → ¬S(x))",
      "∀x U(x)",
      "(∃x T(x) → ∀x T(x))"
    ],
    "choices": [
      "It is not true that If a student attends the seminar, they will be eligible for the certification.",
      "It is both true and false that If a student attends the seminar, they will be eligible for the certification.",
      "If a student attends the seminar, they will be eligible for the certification.",
      "If a student attends the seminar, they won't be eligible for the certification."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be logically inferred if we know that all students have attended the Software Engineering workshop?"
    ],
    "premises-NL": [
      "If a student attends the Software Engineering workshop, then they will be ready for the Capstone Project.",
      "There exists at least one student who has passed the course on Computational Thinking.",
      "If a student has completed the User Interface course, then they have also submitted the final project.",
      "If a student has submitted the final project, then they have passed the Technical Writing course.",
      "If a student is not ready for the Capstone Project, then they have not submitted the final project.",
      "If submitting the final project leads to passing Technical Writing, then attending the Software Engineering workshop leads to being ready for the Capstone Project.",
      "If the above implication holds, then submitting the final project leads to passing Technical Writing.",
      "All students have attended the Software Engineering workshop.",
      "There exists at least one student who has submitted the final project."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (S(x) → R(x))",
      "∃x Q(x)",
      "∀x (U(x) → P(x))",
      "∀x (P(x) → T(x))",
      "∀x (¬R(x) → ¬P(x))",
      "(∀x (P(x) → T(x)) → ∀x (S(x) → R(x)))",
      "(∀x (P(x) → T(x)) → ∀x (S(x) → R(x)) → ∀x (P(x) → T(x)))",
      "∀x S(x)",
      "∃x P(x)"
    ],
    "choices": [
      "All students have attended the Software Engineering workshop.",
      "It is not true that All students have attended the Software Engineering workshop.",
      "It is both true and false that All students have attended the Software Engineering workshop.",
      "There are 2 students who have not attended the Software Engineering workshop."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be logically inferred if we know that there exists at least one student who has completed the Data Science course?"
    ],
    "premises-NL": [
      "If a student has completed the Data Science course, then they are eligible to apply for the Machine Learning course.",
      "There exists at least one student who has completed the Data Structures course.",
      "If a student has completed the Algorithms course, then they have also completed the Data Science course.",
      "If a student has completed the Data Science course, then they have passed the exam on Data Analytics.",
      "If a student is not eligible to apply for the Machine Learning course, then they have not completed the Data Science course.",
      "If completing the Data Science course leads to passing the Data Analytics exam, then completing the Data Science course makes the student eligible to apply for the Machine Learning course.",
      "If the above implication holds, then completing the Data Science course leads to passing the Data Analytics exam.",
      "All students have completed the Data Structures course.",
      "There exists at least one student who has completed the Data Science course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (D(x) → M(x))",
      "∃x C(x)",
      "∀x (A(x) → D(x))",
      "∀x (D(x) → E(x))",
      "∀x (¬M(x) → ¬D(x))",
      "(∀x (D(x) → E(x)) → ∀x (D(x) → M(x)))",
      "(∀x (D(x) → E(x)) → ∀x (D(x) → M(x)) → ∀x (D(x) → E(x)))",
      "∀x C(x)",
      "∃x D(x)"
    ],
    "choices": [
      "If the implication from completing the Data Science course to being eligible for the Machine Learning course is valid, then completing the Data Science course leads to passing the Data Analytics exam.",
      "The negation of that implication.",
      "Both the implication and its negation are assumed true, which is a contradiction.",
      "The implication is assumed true and false at the same time."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a course includes AI ethics, then students understand responsible AI.",
      "All students in the AI program study AI ethics.",
      "If students understand responsible AI, then they can build trustworthy systems.",
      "All students in the AI program follow the institution’s ethical AI guidelines."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, E(x) → U(x))",
      "ForAll(x, E(x))",
      "ForAll(x, U(x) → T(x))",
      "ForAll(x, G(x))"
    ],
    "choices": [
      "All students in the AI program can build trustworthy systems.",
      "Some students who study AI ethics cannot build trustworthy systems.",
      "Following ethical guidelines ensures trustworthy systems.",
      "Studying AI ethics is optional for AI program students."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be logically inferred if we know that all students must meet the eligibility requirements to enroll in the advanced courses?"
    ],
    "premises-NL": [
      "If a student has completed the required prerequisite course, they are eligible to enroll in advanced courses.",
      "There exists at least one student who has met the eligibility requirements for advanced courses.",
      "If a student has not met the eligibility requirements, they are not allowed to enroll in the elective courses.",
      "All students must meet the eligibility requirements to enroll in the advanced courses.",
      "If a student has not completed the prerequisite courses, they cannot proceed to the next level of courses.",
      "If a student does not meet the eligibility criteria for advanced courses, they are not allowed to enroll in the elective courses.",
      "If completing the prerequisite course implies eligibility for the advanced courses, then at least one student has the required eligibility.",
      "If a student has completed the foundation course, they are eligible to proceed with the specialization courses.",
      "If a student has failed to meet the standards for a course, they are not allowed to participate in the final project preparation."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (R(x) → U(x))",
      "∃x U(x)",
      "∀x (¬U(x) → ¬Q(x))",
      "∀x U(x)",
      "∀x (¬R(x) → ¬S(x))",
      "(∀x (¬U(x) → ¬Q(x)) → ∃x U(x))",
      "(∀x (R(x) → U(x)) → ∃x U(x))",
      "∀x (T(x) → S(x))",
      "∀x (¬T(x) → ¬S(x))"
    ],
    "choices": [
      "It is a tautology that completing the prerequisite course implies eligibility for the advanced courses.",
      "Completing the prerequisite course implies eligibility for advanced courses.",
      "If completing the prerequisite course implies eligibility for advanced courses and its negation holds, then there is a contradiction.",
      "It is not true that completing the prerequisite course implies eligibility for the advanced courses."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities do all students perform?"
    ],
    "premises-NL": [
      "All students belong to the university.",
      "If a student does not participate in research, then they do not belong to the university.",
      "If a student does not participate in research, then they are not taking the thesis course.",
      "All students are registered.",
      "If a student belongs to the university, then they are taking the thesis course.",
      "All students receive a scholarship.",
      "All students are taking the thesis course."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, BelongsToUniversity(x))",
      "ForAll(x, ¬ParticipatesInResearch(x) → ¬BelongsToUniversity(x))",
      "ForAll(x, ¬ParticipatesInResearch(x) → ¬TakesThesisCourse(x))",
      "ForAll(x, IsRegistered(x))",
      "ForAll(x, BelongsToUniversity(x) → TakesThesisCourse(x))",
      "ForAll(x, ReceivesScholarship(x))",
      "ForAll(x, TakesThesisCourse(x))"
    ],
    "choices": [
      "Participating in research, taking thesis course, being registered, receiving scholarship.",
      "Participating in research, being registered, honors program.",
      "Taking thesis course, receiving scholarship, honors program.",
      "Participating in research, taking thesis course, honors program."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which skills do all students possess?"
    ],
    "premises-NL": [
      "If a student completes the capstone project, then they gain teamwork skills.",
      "All students possess problem-solving ability.",
      "If a student does not have teamwork skills, then they do not have critical thinking skills.",
      "All students have communication skills.",
      "All students have critical thinking skills.",
      "If a student does not complete the capstone project, then they do not possess problem-solving ability.",
      "If a student has problem-solving ability, then they have teamwork skills."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, CompletesCapstoneProject(x) → GainsTeamworkSkills(x))",
      "ForAll(x, HasProblemSolvingAbility(x))",
      "ForAll(x, ¬GainsTeamworkSkills(x) → ¬HasCriticalThinkingSkills(x))",
      "ForAll(x, HasCommunicationSkills(x))",
      "ForAll(x, HasCriticalThinkingSkills(x))",
      "ForAll(x, ¬CompletesCapstoneProject(x) → ¬HasProblemSolvingAbility(x))",
      "ForAll(x, HasProblemSolvingAbility(x) → GainsTeamworkSkills(x))"
    ],
    "choices": [
      "Problem-solving, communication, critical thinking, teamwork, research skills.",
      "Problem-solving, communication, completing capstone project.",
      "Critical thinking, teamwork, research skills.",
      "Communication, critical thinking, completing capstone project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which qualifications do all students possess?"
    ],
    "premises-NL": [
      "All students complete the final project.",
      "If a student has presentation skills, then they receive a certificate.",
      "All students have presentation skills.",
      "If a student writes a thesis, then they receive a certificate.",
      "All students have theoretical knowledge.",
      "If a student has theoretical knowledge, then they write a thesis.",
      "All students receive a certificate."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, CompletesFinalProject(x))",
      "ForAll(x, HasPresentationSkills(x) → ReceivesCertificate(x))",
      "ForAll(x, HasPresentationSkills(x))",
      "ForAll(x, WritesThesis(x) → ReceivesCertificate(x))",
      "ForAll(x, HasTheoreticalKnowledge(x))",
      "ForAll(x, HasTheoreticalKnowledge(x) → WritesThesis(x))",
      "ForAll(x, ReceivesCertificate(x))"
    ],
    "choices": [
      "Theoretical knowledge, presentation skills, writing thesis, receiving certificate.",
      "Completing final project, writing thesis, practical experience.",
      "Presentation skills, receiving certificate, practical experience.",
      "Theoretical knowledge, completing final project, presentation skills."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which traits do all students possess?"
    ],
    "premises-NL": [
      "All students pass the course.",
      "If a student does not have high attendance, then they do not have good performance.",
      "If a student does not submit assignments, then they do not have good performance.",
      "If a student does not submit their thesis, then they do not pass the course.",
      "If a student submits assignments, then they receive feedback.",
      "If a student passes the course, then they have good performance.",
      "All students have high attendance.",
      "If a student does not receive feedback, then they did not submit assignments."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, PassesCourse(x))",
      "ForAll(x, ¬HasHighAttendance(x) → ¬HasGoodPerformance(x))",
      "ForAll(x, ¬SubmitsAssignments(x) → ¬HasGoodPerformance(x))",
      "ForAll(x, ¬SubmitsThesis(x) → ¬PassesCourse(x))",
      "ForAll(x, SubmitsAssignments(x) → ReceivesFeedback(x))",
      "ForAll(x, PassesCourse(x) → HasGoodPerformance(x))",
      "ForAll(x, HasHighAttendance(x))",
      "ForAll(x, ¬ReceivesFeedback(x) → ¬SubmitsAssignments(x))"
    ],
    "choices": [
      "Good performance, high attendance, submitting thesis, submitting assignments.",
      "Good performance, submitting thesis, receiving feedback.",
      "High attendance, submitting assignments, receiving feedback.",
      "Passing course, good performance, submitting thesis."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities do all students perform?"
    ],
    "premises-NL": [
      "If a student gives a seminar, then they receive a recommendation.",
      "If a student participates in a project, then they earn a certification.",
      "All students complete the training module.",
      "If a student does not earn a certification, then they did not participate in a project.",
      "All students earn a certification.",
      "If a student participates in a project, then they give a seminar."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, GivesSeminar(x) → ReceivesRecommendation(x))",
      "ForAll(x, ParticipatesInProject(x) → EarnsCertification(x))",
      "ForAll(x, CompletesTrainingModule(x))",
      "ForAll(x, ¬EarnsCertification(x) → ¬ParticipatesInProject(x))",
      "ForAll(x, EarnsCertification(x))",
      "ForAll(x, ParticipatesInProject(x) → GivesSeminar(x))"
    ],
    "choices": [
      "Completing training module, participating in project, giving seminar, earning certification.",
      "Completing training module, writing paper, giving seminar.",
      "Participating in project, earning certification, writing paper.",
      "Completing training module, giving seminar, receiving recommendation."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities do all students perform?"
    ],
    "premises-NL": [
      "If a student gives a seminar, then they receive a recommendation.",
      "If a student participates in a project, then they earn a certification.",
      "All students complete the training module.",
      "If a student does not earn a certification, then they did not participate in a project.",
      "All students earn a certification.",
      "If a student participates in a project, then they give a seminar."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, GivesSeminar(x) → ReceivesRecommendation(x))",
      "ForAll(x, ParticipatesInProject(x) → EarnsCertification(x))",
      "ForAll(x, CompletesTrainingModule(x))",
      "ForAll(x, ¬EarnsCertification(x) → ¬ParticipatesInProject(x))",
      "ForAll(x, EarnsCertification(x))",
      "ForAll(x, ParticipatesInProject(x) → GivesSeminar(x))"
    ],
    "choices": [
      "Completing training module, participating in project, giving seminar, earning certification.",
      "Completing training module, writing paper, giving seminar.",
      "Participating in project, earning certification, writing paper.",
      "Completing training module, giving seminar, receiving recommendation."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities do all students perform?"
    ],
    "premises-NL": [
      "If a student does not pass the course, then they did not submit the assignment.",
      "If a student submits their assignment, then they qualify for graduation.",
      "All students attend the university.",
      "All students take the exam.",
      "All students qualify for graduation.",
      "All students pass the course.",
      "If a student completes the research project, then they submit the assignment."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, ¬PassesCourse(x) → ¬SubmitsAssignment(x))",
      "ForAll(x, SubmitsAssignment(x) → QualifiesGraduation(x))",
      "ForAll(x, AttendsUniversity(x))",
      "ForAll(x, TakesExam(x))",
      "ForAll(x, QualifiesGraduation(x))",
      "ForAll(x, PassesCourse(x))",
      "ForAll(x, CompletesResearchProject(x) → SubmitsAssignment(x))"
    ],
    "choices": [
      "Attending university, taking exam, submitting assignment, passing course, qualifying for graduation.",
      "Attending university, submitting assignment, completing research project.",
      "Taking exam, passing course, completing research project.",
      "Submitting assignment, qualifying for graduation, completing research project."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which qualifications do all students possess?"
    ],
    "premises-NL": [
      "If a student has a GPA ≥ 3.7, then they are eligible for a scholarship.",
      "All students who are eligible for a scholarship submitted a personal statement.",
      "All students show strong academic commitment.",
      "There exists at least one student who published a research paper.",
      "All students have a GPA ≥ 3.7.",
      "All students participated in extracurricular activities.",
      "All students submitted a recommendation letter.",
      "If a student does not show academic commitment, then they did not publish a research paper."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, GPA_GTE_3_7(x) → EligibleForScholarship(x))",
      "ForAll(x, EligibleForScholarship(x) → SubmittedStatement(x))",
      "ForAll(x, HasAcademicCommitment(x))",
      "Exists(x, PublishedResearch(x))",
      "ForAll(x, GPA_GTE_3_7(x))",
      "ForAll(x, ParticipatedExtracurricular(x))",
      "ForAll(x, SubmittedRecLetter(x))",
      "ForAll(x, ¬HasAcademicCommitment(x) → ¬PublishedResearch(x))"
    ],
    "choices": [
      "GPA ≥ 3.7, eligible for scholarship, submitted personal statement, participated in extracurricular activities, submitted recommendation letter.",
      "GPA ≥ 3.7, submitted personal statement, participated in extracurricular activities, published research paper.",
      "Eligible for scholarship, submitted personal statement, submitted recommendation letter, published research paper.",
      "GPA ≥ 3.7, eligible for scholarship, participated in extracurricular activities, strong academic commitment."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities do all students perform?"
    ],
    "premises-NL": [
      "All students are eligible to conduct research.",
      "If a student has completed the training session, then they have submitted a research proposal.",
      "If a student has not submitted a research proposal, then they are not eligible to conduct research.",
      "If a student has not completed the training session, then they are not eligible to conduct research.",
      "If a student has completed the training session, then they have presented at a seminar.",
      "All students meet the qualification criteria."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, EligibleForResearch(x))",
      "ForAll(x, CompletedTraining(x) → SubmittedProposal(x))",
      "ForAll(x, ¬SubmittedProposal(x) → ¬EligibleForResearch(x))",
      "ForAll(x, ¬CompletedTraining(x) → ¬EligibleForResearch(x))",
      "ForAll(x, CompletedTraining(x) → PresentedAtSeminar(x))",
      "ForAll(x, MeetsQualification(x))"
    ],
    "choices": [
      "Completing training session, submitting research proposal, presenting at seminar, meeting qualification criteria.",
      "Completing training session, submitting research proposal, enrolling in research program.",
      "Submitting research proposal, presenting at seminar, meeting qualification criteria.",
      "Completing training session, presenting at seminar, enrolling in research program."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities do all students perform?"
    ],
    "premises-NL": [
      "All students meet the eligibility criteria for studying abroad.",
      "If a student does not have a high TOEFL score, then they cannot participate in the exchange program.",
      "If a student receives a scholarship, then they have a high TOEFL score.",
      "If a student cannot participate in the exchange program, then they are not eligible to study abroad.",
      "If a student wrote a motivation letter, then they can participate in the exchange program.",
      "If a student did not write a motivation letter, then they are not eligible to study abroad.",
      "If a student is not eligible to study abroad, then they did not write a motivation letter.",
      "If a student applied for exchange, then they can participate in the exchange program."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, EligibleForStudyAbroad(x))",
      "ForAll(x, ¬HighTOEFLScore(x) → ¬CanJoinExchange(x))",
      "ForAll(x, ReceivesScholarship(x) → HighTOEFLScore(x))",
      "ForAll(x, ¬CanJoinExchange(x) → ¬EligibleForStudyAbroad(x))",
      "ForAll(x, WroteMotivationLetter(x) → CanJoinExchange(x))",
      "ForAll(x, ¬WroteMotivationLetter(x) → ¬EligibleForStudyAbroad(x))",
      "ForAll(x, ¬EligibleForStudyAbroad(x) → ¬WroteMotivationLetter(x))",
      "ForAll(x, AppliedForExchange(x) → CanJoinExchange(x))"
    ],
    "choices": [
      "Writing a motivation letter, participating in the exchange program, having a high TOEFL score.",
      "Writing a motivation letter, participating in the exchange program, applying for exchange.",
      "Having a high TOEFL score, receiving a scholarship, writing a motivation letter.",
      "Participating in the exchange program, having a high TOEFL score, receiving a scholarship."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which achievements have all students accomplished?"
    ],
    "premises-NL": [
      "All students in the dual degree program must maintain a GPA of 3.5 or higher.",
      "If a student completes a thesis, then they qualify for the second degree.",
      "If a student does not participate in leadership activities, then they are not eligible for international exchange.",
      "All students are required to complete a capstone project.",
      "All students are eligible for international exchange.",
      "If a student completes the capstone project, then they complete a thesis.",
      "If a student participates in leadership activities, then they are in the dual degree program.",
      "All students are in the dual degree program."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, InDualDegree(x) → GPA_GTE_3_5(x))",
      "ForAll(x, CompletedThesis(x) → QualifiesSecondDegree(x))",
      "ForAll(x, ¬ParticipatedLeadership(x) → ¬EligibleForExchange(x))",
      "ForAll(x, CompletedCapstone(x))",
      "ForAll(x, EligibleForExchange(x))",
      "ForAll(x, CompletedCapstone(x) → CompletedThesis(x))",
      "ForAll(x, ParticipatedLeadership(x) → InDualDegree(x))",
      "ForAll(x, InDualDegree(x))"
    ],
    "choices": [
      "In dual degree program, GPA of 3.5 or higher, completing capstone project, completing thesis, qualifying for second degree.",
      "In dual degree program, completing capstone project, completing thesis, participating in leadership activities.",
      "Completing capstone project, completing thesis, qualifying for second degree, eligible for exchange.",
      "In dual degree program, GPA of 3.5 or higher, completing thesis, eligible for exchange."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which activities do all students perform?"
    ],
    "premises-NL": [
      "All students are enrolled in at least one online course.",
      "All students have access to the learning management system (LMS).",
      "All students attend live sessions.",
      "If a student does not have LMS access, then they cannot view lecture recordings.",
      "All students can view lecture recordings.",
      "There exists at least one student who joins discussion forums.",
      "If a student is enrolled in an online course, then they have LMS access."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "ForAll(x, EnrolledInOnlineCourse(x))",
      "ForAll(x, HasLMSAccess(x))",
      "ForAll(x, AttendsLiveSession(x))",
      "ForAll(x, ¬HasLMSAccess(x) → ¬CanViewRecordings(x))",
      "ForAll(x, CanViewRecordings(x))",
      "Exists(x, JoinsDiscussionForum(x))",
      "ForAll(x, EnrolledInOnlineCourse(x) → HasLMSAccess(x))"
    ],
    "choices": [
      "Enrolling in an online course, accessing LMS, attending live sessions, viewing lecture recordings.",
      "Enrolling in an online course, accessing LMS, attending live sessions, joining discussion forums.",
      "Enrolling in an online course, viewing lecture recordings, joining discussion forums.",
      "Accessing LMS, attending live sessions, submitting final assignments."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which qualifications do all students possess?"
    ],
    "premises-NL": [
      "All students have completed the foundational course.",
      "If a student completed the foundational course, then they are eligible for advanced coursework.",
      "If a student is not eligible for advanced coursework, then they did not complete the seminar.",
      "If a student completed the seminar, then they passed the public speaking module.",
      "If a student lacks presentation skills, then they are not eligible for advanced coursework.",
      "If a student is eligible for advanced coursework, then they passed the public speaking module.",
      "If a student completed the foundational course, then they submitted their thesis.",
      "All students have academic communication skills.",
      "All students passed the public speaking module."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "ForAll(x, CompletedFoundationCourse(x))",
      "ForAll(x, CompletedFoundationCourse(x) → EligibleAdvancedCoursework(x))",
      "ForAll(x, ¬EligibleAdvancedCoursework(x) → ¬CompletedSeminar(x))",
      "ForAll(x, CompletedSeminar(x) → PassedSpeakingModule(x))",
      "ForAll(x, ¬HasPresentationSkills(x) → ¬EligibleAdvancedCoursework(x))",
      "ForAll(x, EligibleAdvancedCoursework(x) → PassedSpeakingModule(x))",
      "ForAll(x, CompletedFoundationCourse(x) → SubmittedThesis(x))",
      "ForAll(x, HasAcademicCommunication(x))",
      "ForAll(x, PassedSpeakingModule(x))"
    ],
    "choices": [
      "Completed foundational course, eligible for advanced coursework, submitted thesis, passed public speaking module, but not academic communication skills.",
      "Completed foundational course, eligible for advanced coursework, submitted thesis, academic communication skills, passed public speaking module.",
      "Completed foundational course, submitted thesis, academic communication skills, but not eligible for advanced coursework.",
      "Eligible for advanced coursework, academic communication skills, passed public speaking module, but not completed foundational course."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement follows from the premises?"
    ],
    "premises-NL": [
      "All students submitted their registration request.",
      "If a student did not complete prerequisite courses, then they cannot register for advanced subjects.",
      "If a student missed the deadline, then they cannot register for any courses.",
      "All students completed the prerequisite verification.",
      "All students added at least one course.",
      "All students successfully registered for courses.",
      "If a student completed the prerequisite check, then they could enroll in waitlisted courses."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, SubmittedRegistration(x))",
      "ForAll(x, ¬CompletedPrerequisites(x) → ¬EligibleAdvancedCourse(x))",
      "ForAll(x, ¬MetDeadline(x) → ¬RegisteredAnyCourse(x))",
      "ForAll(x, CompletedPrerequisites(x))",
      "ForAll(x, AddedCourse(x))",
      "ForAll(x, RegisteredAnyCourse(x))",
      "ForAll(x, CompletedPrerequisites(x) → EnrolledWaitlistCourse(x))"
    ],
    "choices": [
      "It is not true that if missing the deadline prevents course registration, then all students submitted their registration requests.",
      "If the statement that missing the deadline prevents registration implies all students submitted registration requests, then that implication holds.",
      "If missing the deadline prevents registering for courses, then all students submitted their registration requests.",
      "The statement that missing the deadline prevents registration implies all students submitted registration requests is both true and false."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "All students are allowed to enroll in at least one course.",
      "All students enrolled in Calculus I.",
      "If a student registered for Advanced Physics, then they must have passed Classical Mechanics.",
      "If a student did not register for Advanced Physics, then they are not allowed to enroll in any course.",
      "All students passed the prerequisites.",
      "If a student passed Classical Mechanics, then they are allowed to take Data Structures.",
      "If a student is not allowed to enroll, then they cannot take Data Structures.",
      "There exists at least one student registered for Advanced Physics.",
      "All students enrolled in Data Structures.",
      "All students passed Classical Mechanics.",
      "If a student registered for Advanced Physics, then they are allowed to enroll in courses."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "ForAll(x, CanEnroll(x))",
      "ForAll(x, EnrolledCalculusI(x))",
      "ForAll(x, RegisteredAdvPhysics(x) → PassedClassicalMech(x))",
      "ForAll(x, ¬RegisteredAdvPhysics(x) → ¬CanEnroll(x))",
      "ForAll(x, PassedPrerequisites(x))",
      "ForAll(x, PassedClassicalMech(x) → CanTakeDataStructures(x))",
      "ForAll(x, ¬CanEnroll(x) → ¬EnrolledDataStructures(x))",
      "Exists(x, RegisteredAdvPhysics(x))",
      "ForAll(x, EnrolledDataStructures(x))",
      "ForAll(x, PassedClassicalMech(x))",
      "ForAll(x, RegisteredAdvPhysics(x) → CanEnroll(x))"
    ],
    "choices": [
      "If the existence of a student allowed to enroll implies that passing Classical Mechanics allows taking Data Structures, then that same implication holds.",
      "It is not true that if some student is allowed to enroll, then passing Classical Mechanics allows taking Data Structures.",
      "If some student is allowed to enroll, then passing Classical Mechanics implies they can take Data Structures.",
      "The statement that if some student is allowed to enroll, then passing Classical Mechanics implies they can take Data Structures is both true and false."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about device properties can we conclude from the given information?"
    ],
    "premises-NL": [
      "If a device has a motion sensor, then it is compatible with smart home apps.",
      "If a device is compatible with smart home apps, then it is energy efficient.",
      "If a device does not have a motion sensor, then it is not compatible with smart home apps."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (HasMotionSensor(x) → CompatibleWithApps(x))",
      "∀x (CompatibleWithApps(x) → EnergyEfficient(x))",
      "∀x (¬HasMotionSensor(x) → ¬CompatibleWithApps(x))"
    ],
    "choices": [
      "Some devices are compatible with smart home apps but not energy efficient.",
      "All devices with motion sensors are energy efficient.",
      "All energy-efficient devices have motion sensors.",
      "No device without a motion sensor is energy efficient."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about books can we conclude from the given information?"
    ],
    "premises-NL": [
      "Every book in the library is available.",
      "If a book is well-catalogued, then it is available.",
      "Every book is in high demand.",
      "If a book is in good condition, then it is well-catalogued.",
      "If a book is well-catalogued, then it is recommended.",
      "If a book is not available, then it is not well-catalogued.",
      "If a book is available, then it is in good condition.",
      "Every book is in good condition.",
      "If a book is not in high demand, then it is not available.",
      "There is at least one book in good condition.",
      "There is at least one available book.",
      "If a book is not in good condition, then it is not well-catalogued.",
      "If a book is well-catalogued, then it is in good condition.",
      "There is at least one well-catalogued book.",
      "If a book is not frequently borrowed, then it is not in good condition.",
      "If a book is frequently borrowed, then it is recommended.",
      "If a book is frequently borrowed, then it is well-catalogued.",
      "If a book is recommended, then it is in good condition.",
      "Every book is frequently borrowed.",
      "If a book is not available, then it is not frequently borrowed.",
      "If not being in high demand implies a book is not available, then if a book is not available, it is not frequently borrowed.",
      "If being frequently borrowed implies a book is well-catalogued, then if a book is not available, it is not well-catalogued.",
      "If every book is available, then every book is frequently borrowed.",
      "If the fact that frequently borrowed books are well-catalogued implies that unavailable books are not well-catalogued, then every book is in high demand.",
      "If being in good condition implies a book is well-catalogued, then if frequently borrowed books are well-catalogued, an unavailable book is not well-catalogued.",
      "If the previous implication holds, then every book is in good condition.",
      "There is at least one recommended book.",
      "If a book is not in high demand, then it is not well-catalogued.",
      "If a book is not in high demand, then it is not frequently borrowed."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x A(x)",
      "∀x (W(x) → A(x))",
      "∀x H(x)",
      "∀x (G(x) → W(x))",
      "∀x (W(x) → R(x))",
      "∀x (¬A(x) → ¬W(x))",
      "∀x (A(x) → G(x))",
      "∀x G(x)",
      "∀x (¬H(x) → ¬A(x))",
      "∃x G(x)",
      "∃x A(x)",
      "∀x (¬G(x) → ¬W(x))",
      "∀x (W(x) → G(x))",
      "∃x W(x)",
      "∀x (¬F(x) → ¬G(x))",
      "∀x (F(x) → R(x))",
      "∀x (F(x) → W(x))",
      "∀x (R(x) → G(x))",
      "∀x F(x)",
      "∀x (¬A(x) → ¬F(x))",
      "∀x (¬H(x) → ¬A(x)) → ∀x (¬A(x) → ¬F(x))",
      "∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x))",
      "∀x A(x) → ∀x F(x)",
      "(∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x))) → ∀x H(x)",
      "∀x (G(x) → W(x)) → (∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x)))",
      "(∀x (G(x) → W(x)) → (∀x (F(x) → W(x)) → ∀x (¬A(x) → ¬W(x)))) → ∀x G(x)",
      "∃x R(x)",
      "∀x (¬H(x) → ¬W(x))",
      "∀x (¬H(x) → ¬F(x))"
    ],
    "choices": [
      "Every frequently borrowed book is both well-catalogued and recommended.",
      "Every book that is not frequently borrowed is well-catalogued.",
      "Some books are not available but are well-catalogued.",
      "Every recommended book is not in good condition."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about bus routes follows from the premises?"
    ],
    "premises-NL": [
      "If a bus route is energy efficient, then it is cost-effective.",
      "If a bus route is well-maintained, then it is cost-effective.",
      "There is at least one bus route that is well-maintained."
    ],
    "answers": [
      "C"
    ],
    "premises-FOL": [
      "∀x (EnergyEfficient(x) → CostEffective(x))",
      "∀x (WellMaintained(x) → CostEffective(x))",
      "∃x WellMaintained(x)"
    ],
    "choices": [
      "Some bus routes are cost-effective and energy efficient.",
      "All bus routes are cost-effective.",
      "There exists a cost-effective bus route.",
      "All cost-effective bus routes are well-maintained."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about dishes can we conclude from the given information?"
    ],
    "premises-NL": [
      "There is at least one dish available today.",
      "Every dish is well-prepared.",
      "If a dish is a main course, then it is well-prepared.",
      "If a dish is a main course, then it is spicy.",
      "If a dish is available today, then it is popular.",
      "There is at least one dish recommended by the chef.",
      "There is at least one dish that is well-prepared.",
      "If a dish is not spicy, then it is not recommended by the chef.",
      "If a dish is recommended by the chef, then it is well-prepared.",
      "If a dish is not well-prepared, then it is not a main course.",
      "Every dish on the menu is a main course.",
      "If a dish is not recommended by the chef, then it is not available today.",
      "Every dish is spicy.",
      "There is at least one dish that is spicy.",
      "Every dish is available today.",
      "If every main course is spicy, then there is at least one dish recommended by the chef.",
      "If every dish that is recommended is well-prepared, then if every main course is spicy, there is at least one dish recommended by the chef.",
      "If every main course is spicy, then every dish is available today.",
      "If the fact that every main course being spicy implies there is a recommended dish holds, then if a dish is available today, it is popular.",
      "If every main course being spicy implies there is a recommended dish, then there is at least one dish recommended by the chef.",
      "If a dish is spicy, then it is a main course.",
      "If a dish is not recommended by the chef, then it is not a main course.",
      "If a dish is recommended by the chef, then it is popular.",
      "If a dish is not a main course, then it is not popular.",
      "If a dish is not well-prepared, then it is not popular.",
      "If a dish is recommended by the chef, then it is available today.",
      "If a dish is well-prepared, then it is recommended by the chef."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x A(x)",
      "∀x W(x)",
      "∀x (M(x) → W(x))",
      "∀x (M(x) → S(x))",
      "∀x (A(x) → P(x))",
      "∃x R(x)",
      "∃x W(x)",
      "∀x (¬S(x) → ¬R(x))",
      "∀x (R(x) → W(x))",
      "∀x (¬W(x) → ¬M(x))",
      "∀x M(x)",
      "∀x (¬R(x) → ¬A(x))",
      "∀x S(x)",
      "∃x S(x)",
      "∀x A(x)",
      "∀x (M(x) → S(x)) → ∃x R(x)",
      "∀x (R(x) → W(x)) → (∀x (M(x) → S(x)) → ∃x R(x))",
      "∀x (M(x) → S(x)) → ∀x A(x)",
      "(∀x (M(x) → S(x)) → ∃x R(x)) → ∀x (A(x) → P(x))",
      "(∀x (M(x) → S(x)) → ∃x R(x)) → ∃x R(x)",
      "∀x (S(x) → M(x))",
      "∀x (¬R(x) → ¬M(x))",
      "∀x (R(x) → P(x))",
      "∀x (¬M(x) → ¬P(x))",
      "∀x (¬W(x) → ¬P(x))",
      "∀x (R(x) → A(x))",
      "∀x (W(x) → R(x))"
    ],
    "choices": [
      "Every available dish is both recommended by the chef and popular.",
      "Every dish that is not available is recommended by the chef.",
      "Some dishes are not recommended but are popular.",
      "Every spicy dish is not popular."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about products follows from the given information?"
    ],
    "premises-NL": [
      "If a product is in stock, then it is of premium quality.",
      "If a product is popular, then it is shipped today.",
      "There is at least one product that is popular.",
      "If a product is in stock, then it is popular."
    ],
    "answers": [
      "B"
    ],
    "premises-FOL": [
      "∀x (InStock(x) → PremiumQuality(x))",
      "∀x (Popular(x) → ShippedToday(x))",
      "∃x Popular(x)",
      "∀x (InStock(x) → Popular(x))"
    ],
    "choices": [
      "All products are shipped today.",
      "All in-stock products are shipped today.",
      "All premium quality products are popular.",
      "No popular product is in stock."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Do all popular travel packages include flights and cost-effective pricing?"
    ],
    "premises-NL": [
      "At least one travel package is available in winter.",
      "Every travel package is highly popular.",
      "Every travel package offers sightseeing tours.",
      "Every travel package includes flight tickets.",
      "Every travel package includes hotel reservations.",
      "Every travel package is cost-effective.",
      "If a travel package is highly popular, then it is cost-effective.",
      "If a travel package is available in winter, then it is cost-effective."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x (Package(x) ∧ Winter(x))",
      "∀x (Package(x) → Popular(x))",
      "∀x (Package(x) → Sightseeing(x))",
      "∀x (Package(x) → Flight(x))",
      "∀x (Package(x) → Hotel(x))",
      "∀x (Package(x) → CostEffective(x))",
      "∀x (Package(x) ∧ Popular(x) → CostEffective(x))",
      "∀x (Package(x) ∧ Winter(x) → CostEffective(x))"
    ],
    "choices": [
      "Yes, all popular packages include both.",
      "No, some popular packages lack flights.",
      "No, some popular packages are not cost-effective.",
      "No, popularity doesn’t guarantee either."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about smartphones can we conclude from the given information?"
    ],
    "premises-NL": [
      "If a smartphone is water resistant, then it supports 5G connectivity.",
      "If a smartphone is water resistant, then it is of premium quality.",
      "There is at least one smartphone that is water resistant."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (WaterResistant(x) → Supports5G(x))",
      "∀x (WaterResistant(x) → PremiumQuality(x))",
      "∃x WaterResistant(x)"
    ],
    "choices": [
      "There is at least one smartphone that supports 5G connectivity.",
      "All premium quality smartphones support 5G connectivity.",
      "All smartphones that support 5G connectivity are premium quality.",
      "All smartphones are water resistant."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "There is at least one electric vehicle that is eco-friendly.",
      "If an electric vehicle has a long range, then it supports fast charging.",
      "There is at least one electric vehicle that supports fast charging.",
      "Every electric vehicle has advanced safety features.",
      "Every electric vehicle supports fast charging.",
      "If an electric vehicle supports fast charging, then it has a long range.",
      "If an electric vehicle is not affordable, then it does not support fast charging.",
      "There is at least one electric vehicle that is affordable.",
      "Every electric vehicle has a long range.",
      "If an electric vehicle is not eco-friendly, then it is not energy efficient.",
      "If an electric vehicle does not have advanced safety features, then it is not affordable.",
      "There is at least one electric vehicle that has a long range.",
      "If an electric vehicle does not support fast charging, then it is not eco-friendly.",
      "If an electric vehicle is eco-friendly, then it is affordable.",
      "If an electric vehicle is not eco-friendly, then it is not affordable.",
      "If an electric vehicle is not energy efficient, then it does not have a long range.",
      "If there is at least one electric vehicle with a long range, then if it is not affordable, it does not support fast charging.",
      "If every electric vehicle has a long range, then if it is not energy efficient, then it does not have a long range.",
      "If there is at least one electric vehicle that supports fast charging, then if it lacks advanced safety features, it is not affordable.",
      "If every electric vehicle has a long range, then every electric vehicle supports fast charging.",
      "If the fact that every electric vehicle having a long range implies that if it is not energy efficient then it does not have a long range, then if an electric vehicle supports fast charging, it has a long range.",
      "If every electric vehicle having a long range implies that if it is not energy efficient then it does not have a long range, then if there is at least one electric vehicle with a long range, it follows that if it is not affordable, then it does not support fast charging.",
      "If an electric vehicle has advanced safety features, then it is energy efficient.",
      "If an electric vehicle is affordable, then it has advanced safety features.",
      "If an electric vehicle does not support fast charging, then it is not affordable.",
      "If an electric vehicle is eco-friendly, then it has a long range.",
      "There is at least one electric vehicle that is energy efficient.",
      "If an electric vehicle is energy efficient, then it has advanced safety features.",
      "If an electric vehicle has a long range, then it is energy efficient."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∃x E(x)",
      "∀x (L(x) → F(x))",
      "∃x F(x)",
      "∀x S(x)",
      "∀x F(x)",
      "∀x (F(x) → L(x))",
      "∀x (¬A(x) → ¬F(x))",
      "∃x A(x)",
      "∀x L(x)",
      "∀x (¬E(x) → ¬N(x))",
      "∀x (¬S(x) → ¬A(x))",
      "∃x L(x)",
      "∀x (¬F(x) → ¬E(x))",
      "∀x (E(x) → A(x))",
      "∀x (¬E(x) → ¬A(x))",
      "∀x (¬N(x) → ¬L(x))",
      "∃x L(x) → ∀x (¬A(x) → ¬F(x))",
      "∀x L(x) → ∀x (¬N(x) → ¬L(x))",
      "∃x F(x) → ∀x (¬S(x) → ¬A(x))",
      "∀x L(x) → ∀x F(x)",
      "(∀x L(x) → ∀x (¬N(x) → ¬L(x))) → ∀x (F(x) → L(x))",
      "(∀x L(x) → ∀x (¬N(x) → ¬L(x))) → (∃x L(x) → ∀x (¬A(x) → ¬F(x)))",
      "∀x (S(x) → N(x))",
      "∀x (A(x) → S(x))",
      "∀x (¬F(x) → ¬A(x))",
      "∀x (E(x) → L(x))",
      "∃x N(x)",
      "∀x (N(x) → S(x))",
      "∀x (L(x) → N(x))"
    ],
    "choices": [
      "∀x (E(x) → (A(x) ∧ N(x)))",
      "∃x (¬F(x) ∧ L(x))",
      "∀x (¬S(x) → A(x))",
      "∀x (N(x) → ¬E(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about travel packages can we conclude from the given information?"
    ],
    "premises-NL": [
      "If a travel package is highly popular, then it is cost-effective.",
      "There is at least one travel package that includes flight tickets.",
      "Every travel package offers sightseeing tours."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (HighlyPopular(x) → CostEffective(x))",
      "∃x IncludesFlight(x)",
      "∀x OffersSightseeing(x)"
    ],
    "choices": [
      "There is at least one travel package that offers sightseeing tours.",
      "All travel packages include flight tickets.",
      "All cost-effective travel packages are highly popular.",
      "Some travel packages are not cost-effective."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "Every streaming service offers personalized recommendations.",
      "If a streaming service is available globally, then it has a user-friendly interface.",
      "Every streaming service has a user-friendly interface.",
      "Every streaming service is available globally.",
      "If a streaming service does not offer personalized recommendations, then it is not available globally.",
      "If a streaming service does not have a user-friendly interface, then it does not offer exclusive content.",
      "There is at least one streaming service that provides high-quality streaming.",
      "Every streaming service is affordable.",
      "If a streaming service does not provide high-quality streaming, then it is not available globally.",
      "If a streaming service provides high-quality streaming, then it offers exclusive content.",
      "If a streaming service does not offer personalized recommendations, then it is not affordable.",
      "Every streaming service offers exclusive content.",
      "There is at least one streaming service that offers exclusive content.",
      "Every streaming service provides high-quality streaming.",
      "If a streaming service does not provide high-quality streaming, then it does not offer exclusive content.",
      "If a streaming service is not available globally, then it is not affordable.",
      "If a streaming service provides high-quality streaming, then it offers personalized recommendations.",
      "If a streaming service is not available globally, then it does not provide high-quality streaming.",
      "There is at least one streaming service that has a user-friendly interface.",
      "If a streaming service does not offer exclusive content, then it is not available globally.",
      "If a streaming service does not offer exclusive content, then it is not affordable.",
      "If every streaming service is affordable, then non-exclusive streaming services are not affordable.",
      "If every streaming service provides high-quality streaming, then any service that provides high-quality streaming offers exclusive content.",
      "If non-exclusive streaming services are not available globally, then every streaming service is available globally.",
      "If non-exclusive streaming services are not available globally, then non-global services do not provide high-quality streaming.",
      "If the above implication holds, then every streaming service offers exclusive content.",
      "If there is at least one streaming service offering exclusive content, then any service that provides high-quality streaming offers exclusive content.",
      "If not being available globally implies not providing high-quality streaming, then every streaming service has a user-friendly interface.",
      "If the absence of personalized recommendations implies a service is not affordable, then there is at least one streaming service that offers exclusive content.",
      "If providing high-quality streaming implies offering personalized recommendations, then there is at least one streaming service that provides high-quality streaming.",
      "If every streaming service offers personalized recommendations, then if high-quality streaming implies personalized recommendations, there is at least one service that provides high-quality streaming.",
      "If a streaming service is available globally, then it provides high-quality streaming.",
      "There is at least one affordable streaming service.",
      "If a streaming service is not available globally, then it does not offer personalized recommendations.",
      "If a streaming service is available globally, then it offers exclusive content.",
      "If a streaming service does not offer exclusive content, then it does not offer personalized recommendations."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x P(x)",
      "∀x (G(x) → I(x))",
      "∀x I(x)",
      "∀x G(x)",
      "∀x (¬P(x) → ¬G(x))",
      "∀x (¬I(x) → ¬E(x))",
      "∃x H(x)",
      "∀x A(x)",
      "∀x (¬H(x) → ¬G(x))",
      "∀x (H(x) → E(x))",
      "∀x (¬P(x) → ¬A(x))",
      "∀x E(x)",
      "∃x E(x)",
      "∀x H(x)",
      "∀x (¬H(x) → ¬E(x))",
      "∀x (¬G(x) → ¬A(x))",
      "∀x (H(x) → P(x))",
      "∀x (¬G(x) → ¬H(x))",
      "∃x I(x)",
      "∀x (¬E(x) → ¬G(x))",
      "∀x (¬E(x) → ¬A(x))",
      "∀x A(x) → ∀x (¬E(x) → ¬A(x))",
      "∀x H(x) → ∀x (H(x) → E(x))",
      "∀x (¬E(x) → ¬G(x)) → ∀x G(x)",
      "∀x (¬E(x) → ¬G(x)) → ∀x (¬G(x) → ¬H(x))",
      "(∀x (¬E(x) → ¬G(x)) → ∀x (¬G(x) → ¬H(x))) → ∀x E(x)",
      "∃x E(x) → ∀x (H(x) → E(x))",
      "∀x (¬G(x) → ¬H(x)) → ∀x I(x)",
      "∀x (¬P(x) → ¬A(x)) → ∃x E(x)",
      "∀x (H(x) → P(x)) → ∃x H(x)",
      "∀x P(x) → (∀x (H(x) → P(x)) → ∃x H(x))",
      "∀x (G(x) → H(x))",
      "∃x A(x)",
      "∀x (¬G(x) → ¬P(x))",
      "∀x (G(x) → E(x))",
      "∀x (¬E(x) → ¬P(x))"
    ],
    "choices": [
      "∀x (H(x) → (E(x) ∧ A(x)))",
      "∃x (¬E(x) ∧ H(x))",
      "∀x (¬G(x) → A(x))",
      "∀x (P(x) → ¬I(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about online learning platforms can we conclude from the given information?"
    ],
    "premises-NL": [
      "If an online learning platform does not offer certified courses, then it does not provide community support.",
      "If an online learning platform does not offer live webinars, then it does not offer interactive quizzes.",
      "There is at least one online learning platform that offers live webinars."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬CertifiedCourses(x) → ¬CommunitySupport(x))",
      "∀x (¬LiveWebinar(x) → ¬InteractiveQuizzes(x))",
      "∃x LiveWebinar(x)"
    ],
    "choices": [
      "There is at least one platform that offers interactive quizzes.",
      "All platforms offer live webinars.",
      "All platforms that offer interactive quizzes also offer community support.",
      "Some platforms do not offer certified courses."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If an e-commerce website offers competitive prices, then it has a secure payment system.",
      "If an e-commerce website does not have a user-friendly interface, then it does not provide customer support.",
      "If an e-commerce website does not have a secure payment system, then it does not have a user-friendly interface.",
      "There is at least one e-commerce website that offers fast delivery.",
      "If an e-commerce website provides customer support, then it has a wide product range.",
      "Every e-commerce website offers competitive prices.",
      "If an e-commerce website has a user-friendly interface, then it has a wide product range.",
      "There is at least one e-commerce website that has a secure payment system.",
      "If an e-commerce website does not provide customer support, then it does not have a secure payment system.",
      "Every e-commerce website provides customer support.",
      "If an e-commerce website does not have a wide product range, then it does not have a user-friendly interface.",
      "If an e-commerce website provides customer support, then it offers fast delivery.",
      "If an e-commerce website does not have a secure payment system, then it does not provide customer support.",
      "Every e-commerce website has a secure payment system.",
      "If an e-commerce website does not offer fast delivery, then it does not have a secure payment system.",
      "There is at least one e-commerce website that provides customer support.",
      "If an e-commerce website offers competitive prices, then it has a user-friendly interface.",
      "If an e-commerce website does not have a secure payment system, then it does not have a wide product range.",
      "If an e-commerce website provides customer support, then it offers competitive prices.",
      "If an e-commerce website offers fast delivery, then it has a user-friendly interface.",
      "There is at least one e-commerce website that offers competitive prices.",
      "If every e-commerce website offers competitive prices, then if a website does not have a user-friendly interface, it does not provide customer support.",
      "If the fact that every website offers competitive prices implies that lack of a user-friendly interface results in no customer support, then customer support implies fast delivery.",
      "If every e-commerce website has a secure payment system, then every website provides customer support.",
      "If customer support implies a wide product range, then lack of fast delivery implies lack of a secure payment system.",
      "If the implication from competitive prices to (lack of user-friendly interface leading to no customer support) implies that customer support leads to fast delivery, then fast delivery implies a user-friendly interface.",
      "If a user-friendly interface implies a wide product range, then customer support implies fast delivery.",
      "If customer support implies a wide product range, then every website with a secure payment system provides customer support.",
      "If fast delivery implies a user-friendly interface, then lack of a secure payment system implies lack of a wide product range.",
      "If there is at least one website that offers competitive prices, then if it does not have a user-friendly interface, it does not provide customer support.",
      "If lack of a wide product range implies lack of a user-friendly interface, then every website with a secure payment system provides customer support.",
      "If an e-commerce website does not provide customer support, then it does not have a wide product range.",
      "Every e-commerce website offers fast delivery.",
      "There is at least one e-commerce website that has a wide product range.",
      "If an e-commerce website offers competitive prices, then it has a wide product range.",
      "There is at least one e-commerce website that has a user-friendly interface."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (C(x) → S(x))",
      "∀x (¬U(x) → ¬T(x))",
      "∀x (¬S(x) → ¬U(x))",
      "∃x F(x)",
      "∀x (T(x) -> W(x))",
      "∀x C(x)",
      "∀x (U(x) → W(x))",
      "∃x S(x)",
      "∀x (¬T(x) → ¬S(x))",
      "∀x T(x)",
      "∀x (¬W(x) → ¬U(x))",
      "∀x (T(x) → F(x))",
      "∀x (¬S(x) → ¬T(x))",
      "∀x S(x)",
      "∀x (¬F(x) → ¬S(x))",
      "∃x T(x)",
      "∀x (C(x) → U(x))",
      "∀x (¬S(x) → ¬W(x))",
      "∀x (T(x) → C(x))",
      "∀x (F(x) → U(x))",
      "∃x C(x)",
      "∀x C(x) → ∀x (¬U(x) → ¬T(x))",
      "(∀x C(x) → ∀x (¬U(x) → ¬T(x))) → ∀x (T(x) → F(x))",
      "∀x S(x) → ∀x T(x)",
      "∀x (T(x) → W(x)) → ∀x (¬F(x) → ¬S(x))",
      "((∀x C(x) → ∀x (¬U(x) → ¬T(x))) → ∀x (T(x) → F(x))) → ∀x (F(x) → U(x))",
      "∀x (U(x) → W(x)) → ∀x (T(x) → F(x))",
      "∀x (T(x) → W(x)) → (∀x S(x) → ∀x T(x))",
      "∀x (F(x) → U(x)) → ∀x (¬S(x) → ¬W(x))",
      "∃x C(x) → ∀x (¬U(x) → ¬T(x))",
      "∀x (¬W(x) → ¬U(x)) → (∀x S(x) → ∀x T(x))",
      "∀x (¬T(x) → ¬W(x))",
      "∀x F(x)",
      "∃x W(x)",
      "∀x (C(x) → W(x))",
      "∃x U(x)"
    ],
    "choices": [
      "∀x (C(x) → (U(x) ∧ W(x)))",
      "∃x (¬T(x) ∧ S(x))",
      "∀x (¬F(x) → W(x))",
      "∀x (S(x) → ¬U(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about security systems can we conclude from the given information?"
    ],
    "premises-NL": [
      "If a security system has an alarm system, then it includes door sensors.",
      "If a security system detects motion, then it has an alarm system.",
      "Every security system provides video surveillance.",
      "If a security system provides video surveillance, then it integrates with smart home devices."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (AlarmSystem(x) → DoorSensor(x))",
      "∀x (MotionDetection(x) → AlarmSystem(x))",
      "∀x VideoSurveillance(x)",
      "∀x (VideoSurveillance(x) → SmartIntegration(x))"
    ],
    "choices": [
      "Every security system with motion detection includes door sensors.",
      "Every security system with an alarm system detects motion.",
      "Some security systems lack video surveillance.",
      "Every security system with door sensors integrates with smart home devices."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Based on the above premises, which statement can be inferred?"
    ],
    "premises-NL": [
      "If a drone lacks image stabilization, then it does not have a high-quality camera.",
      "Every drone has a long remote control range.",
      "There is at least one drone that has obstacle avoidance.",
      "If a drone does not have a long remote control range, then it does not have image stabilization.",
      "If a drone does not have a high-quality camera, then it does not have long battery life.",
      "If a drone has a high-quality camera, then it has a long remote control range.",
      "There is at least one drone that has a long remote control range.",
      "There is at least one drone that has GPS navigation.",
      "If a drone has GPS navigation, then it has obstacle avoidance.",
      "If a drone has image stabilization, then it has a long remote control range.",
      "Every drone has image stabilization.",
      "Every drone has a high-quality camera.",
      "If a drone has a long remote control range, then it has obstacle avoidance.",
      "There is at least one drone that has long battery life.",
      "If a drone has obstacle avoidance, then it has a long remote control range.",
      "Every drone has obstacle avoidance.",
      "There is at least one drone that has a high-quality camera.",
      "If a drone has long battery life, then it has a long remote control range.",
      "If a drone does not have a high-quality camera, then it does not have a long remote control range.",
      "If a drone does not have a high-quality camera, then it does not have GPS navigation.",
      "If a drone does not have GPS navigation, then it does not have a long remote control range.",
      "If having a long remote control range implies obstacle avoidance, then every drone has a long remote control range.",
      "If not having a high-quality camera implies not having a long remote control range, then every drone has obstacle avoidance.",
      "If having GPS navigation implies obstacle avoidance, then not having GPS navigation implies not having a long remote control range.",
      "If having long battery life implies a long remote control range, then there is at least one drone with long battery life.",
      "If not having a high-quality camera implies not having long battery life, then every drone has a long remote control range.",
      "If having a long remote control range implies obstacle avoidance, then if a drone has GPS navigation, then it has obstacle avoidance.",
      "If not having a long remote control range implies not having image stabilization, then if having a long remote control range implies obstacle avoidance, every drone has a long remote control range.",
      "If (if long battery life implies a long remote control range then there is at least one drone with long battery life) then if a long remote control range implies obstacle avoidance, every drone has a long remote control range.",
      "If there is at least one drone with a long remote control range, then there is at least one drone with GPS navigation.",
      "If having GPS navigation implies obstacle avoidance, then there is at least one drone with GPS navigation.",
      "If a drone does not have long battery life, then it does not have image stabilization.",
      "If a drone has image stabilization, then it has a high-quality camera.",
      "Every drone has GPS navigation.",
      "If a drone does not have a high-quality camera, then it does not have obstacle avoidance.",
      "Every drone has long battery life."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬S(x) → ¬C(x))",
      "∀x R(x)",
      "∃x O(x)",
      "∀x (¬R(x) → ¬S(x))",
      "∀x (¬C(x) → ¬B(x))",
      "∀x (C(x) → R(x))",
      "∃x R(x)",
      "∃x G(x)",
      "∀x (G(x) → O(x))",
      "∀x (S(x) → R(x))",
      "∀x S(x)",
      "∀x C(x)",
      "∀x (R(x) → O(x))",
      "∃x B(x)",
      "∀x (O(x) → R(x))",
      "∀x O(x)",
      "∃x C(x)",
      "∀x (B(x) → R(x))",
      "∀x (¬C(x) → ¬R(x))",
      "∀x (¬C(x) → ¬G(x))",
      "∀x (¬G(x) → ¬R(x))",
      "∀x (R(x) → O(x)) → ∀x R(x)",
      "∀x (¬C(x) → ¬R(x)) → ∀x O(x)",
      "∀x (G(x) → O(x)) → ∀x (¬G(x) → ¬R(x))",
      "∀x (B(x) → R(x)) → ∃x B(x)",
      "∀x (¬C(x) → ¬B(x)) → ∀x R(x)",
      "∀x (R(x) → O(x)) → ∀x (G(x) → O(x))",
      "∀x (¬R(x) → ¬S(x)) → (∀x (R(x) → O(x)) → ∀x R(x))",
      "(∀x (B(x) → R(x)) → ∃x B(x)) → (∀x (R(x) → O(x)) → ∀x R(x))",
      "∃x R(x) → ∃x G(x)",
      "∀x (G(x) → O(x)) → ∃x G(x)",
      "∀x (¬B(x) → ¬S(x))",
      "∀x (S(x) → C(x))",
      "∀x G(x)",
      "∀x (¬C(x) → ¬O(x))",
      "∀x B(x)"
    ],
    "choices": [
      "∀x (G(x) → (S(x) ∧ C(x)))",
      "∃x (¬O(x) ∧ R(x))",
      "∀x (¬B(x) → C(x))",
      "∀x (R(x) → ¬G(x))"
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  },
  {
    "question": [
      "Which statement about VR headsets can we conclude from the given information?"
    ],
    "premises-NL": [
      "If a VR headset does not have immersive sound, then it does not have high-resolution visuals.",
      "If a VR headset does not have high-resolution visuals, then it does not have low latency.",
      "Every VR headset has high-resolution visuals.",
      "If a VR headset is ergonomic, then it has a wide field of view.",
      "If a VR headset has a wide field of view, then it has motion tracking."
    ],
    "answers": [
      "A"
    ],
    "premises-FOL": [
      "∀x (¬ImmersiveSound(x) → ¬HighRes(x))",
      "∀x (¬HighRes(x) → ¬LowLatency(x))",
      "∀x HighRes(x)",
      "∀x (Ergonomic(x) → WideFOV(x))",
      "∀x (WideFOV(x) → MotionTracking(x))"
    ],
    "choices": [
      "Every VR headset has immersive sound.",
      "Every VR headset has a wide field of view.",
      "Some VR headsets lack high-resolution visuals.",
      "Every VR headset lacks immersive sound."
    ],
    "choices-FOL": [
      "TODO",
      "TODO",
      "TODO",
      "TODO"
    ]
  }
]